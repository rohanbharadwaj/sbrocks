cscope 15 $HOME/project2/final/s15-w1               0000408554
	@bin/cat/cat.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	$maö
(
¨gc
, *
¨gv
[],*
ívp
[]){

5 
f
,
n
;

6 
buf
[80];

7 if(
¨gc
!=2)

8 
	`¥ötf
("Ußgê: c© <fûe-«me> %d \¿", 
¨gc
);

9 
f
 = 
	`›í
(
¨gv
[1],
O_RDONLY
);

10 (
n
=
	`ªad
(
f
,
buf
,80))>0)

11 
	`wrôe
(1,
buf
,
n
);

13 
	}
}

	@bin/hello/hello.c

1 
	~<°dio.h
>

3 
	$maö
(
¨gc
, * 
¨gv
[], * 
ívp
[]) {

4 
	`¥ötf
("Hello World!\n");

10 
	}
}

	@bin/test/test.c

1 
	~<°dio.h
>

3 
	$maö
(
¨gc
, * 
¨gv
[], * 
ívp
[]) {

10 
	}
}

	@crt/crt1.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<sys/defs.h
>

4 
	~<sys/sysˇŒ.h
>

5 
	~<°rög.h
>

7 
	$_°¨t
() {

8 
uöt64_t
 *
r•
 = 0;

9 
uöt64_t
 *
¨gc
;

10 **
¨gv
 = 
NULL
;

11 **
ívp
 = 
NULL
;

12 
__asm
 
	`__vﬁ©ûe
("movq %%rsp, %0;":

13 "˜" (
r•
):

17 
¨gc
 = ((
uöt64_t
 *)
r•
 + 1);

18 
¨gv
 = ((**)
r•
 + 0x2);

19 if(*
¨gc
 > 1)

20 
ívp
 = 
¨gv
 + (*
¨gc
 - 1) + 0x2;

22 
ívp
 = 
¨gv
 + 0x2;

23 
	`exô
(
	`maö
(*
¨gc
, 
¨gv
, 
ívp
));

24 
	}
}

	@include/error.h

3 
	#EPERM
 1

	)

4 
	#ENOENT
 2

	)

5 
	#EINTR
 4

	)

6 
	#EIO
 5

	)

7 
	#E2BIG
 7

	)

8 
	#ENOEXEC
 8

	)

9 
	#EBADF
 9

	)

10 
	#ECHILD
 10

	)

11 
	#EAGAIN
 11

	)

12 
	#ENOMEM
 12

	)

13 
	#EACCES
 13

	)

14 
	#EFAULT
 14

	)

15 
	#EBUSY
 16

	)

16 
	#EEXIST
 17

	)

17 
	#ENOTDIR
 20

	)

18 
	#EISDIR
 21

	)

19 
	#EINVAL
 22

	)

20 
	#ENFILE
 23

	)

21 
	#EMFILE
 24

	)

22 
	#EFBIG
 27

	)

23 
	#EROFS
 30

	)

24 
	#ELOOP
 40

	)

25 
	#EPIPE
 32

	)

26 
	#ENAMETOOLONG
 36

	@include/stdarg.h

1 #i‚de‡
_STDARG_H


2 
	#_STDARG_H


	)

4 
	#va_°¨t
(
v
,
l
Ë
	`__buûtö_va_°¨t
(v,l)

	)

5 
	#va_¨g
(
v
,
l
Ë
	`__buûtö_va_¨g
(v,l)

	)

6 
	#va_íd
(
v
Ë
	`__buûtö_va_íd
(v)

	)

7 
	#va_c›y
(
d
,
s
Ë
	`__buûtö_va_c›y
(d,s)

	)

8 
__buûtö_va_li°
 
	tva_li°
;

	@include/stdio.h

1 #i‚de‡
_STDIO_H


2 
	#_STDIO_H


	)

4 
¥ötf
(c⁄° *
f‹m©
, ...);

5 
sˇnf
(c⁄° *
f‹m©
, ...);

6 
£º‹
(
îr‹
);

	@include/stdlib.h

1 #i‚de‡
_STDLIB_H


2 
	#_STDLIB_H


	)

4 
	~<sys/defs.h
>

7 
__thªad
 
î∫o
;

9 
maö
(
¨gc
, * 
¨gv
[], * 
ívp
[]);

10 
exô
(
°©us
);

13 
uöt64_t
 
	tsize_t
;

14 *
mÆloc
(
size_t
 
size
);

15 
‰ì
(*
±r
);

16 
brk
(*
íd_d©a_£gmít
);

17 *
sbrk
(
size_t
 
ö¸emít
);

19 
uöt32_t
 
	tpid_t
;

20 
pid_t
 
f‹k
();

21 
pid_t
 
gëpid
();

22 
pid_t
 
gëµid
();

23 
execve
(c⁄° *
fûíame
, *c⁄° 
¨gv
[], *c⁄° 
ívp
[]);

24 
pid_t
 
waôpid
’id_à
pid
, *
°©us
, 
›ti⁄s
);

25 
¶ìp
(
£c⁄ds
);

26 
Æ¨m
(
£c⁄ds
);

29 *
gëcwd
(*
buf
, 
size_t
 
size
);

30 
chdú
(c⁄° *
∑th
);

33 
öt64_t
 
	tssize_t
;

34 íum { 
	mO_RDONLY
 = 0, 
	mO_WRONLY
 = 1, 
	mO_RDWR
 = 2, 
	mO_CREAT
 = 0x40, 
	mO_DIRECTORY
 = 0x10000 };

35 
›í
(c⁄° *
∑th«me
, 
Êags
);

36 
ssize_t
 
ªad
(
fd
, *
buf
, 
size_t
 
cou¡
);

37 
ssize_t
 
wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
);

38 íum { 
	mSEEK_SET
 = 0, 
	mSEEK_CUR
 = 1, 
	mSEEK_END
 = 2 };

39 
uöt64_t
 
	toff_t
;

40 
off_t
 
l£ek
(
fûdes
, off_à
off£t
, 
whí˚
);

41 
˛o£
(
fd
);

42 
pùe
(
fûedes
[2]);

43 
dup
(
ﬁdfd
);

44 
dup2
(
ﬁdfd
, 
√wfd
);

47 
	#NAME_MAX
 1024

	)

48 
	sdúít


50 
	md_öo
;

51 
off_t
 
	md_off
;

52 
	md_ª˛í
;

53 
	md_«me
 [
NAME_MAX
+1];

56 
	sdú


58 
	mfd
;

59 *
	maddr
;

61 
	md_«me
[
NAME_MAX
+1];

64 *
›ídú
(c⁄° *
«me
);

65 
dúít
 *
ªaddú
(*
dú
);

66 
˛o£dú
(*
dú
);

	@include/string.h

1 #i‚de‡
_STRING_H


2 
	#_STRING_H


	)

3 
	~<°dlib.h
>

5 
	#ISSPACE
 " \t\n\r\f\v"

	)

7 *
°r˝y
(*
de°
, c⁄° *
§c
);

8 
size_t
 
°æí
(c⁄° *
°r
);

9 *
°πok
(*
°r
, c⁄° *
dñim
);

10 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

11 *
°r°r
(c⁄° *
hay°ack
, c⁄° *
√edÀ
);

12 *
°rˇt
(*
de°
, c⁄° *
§c
);

13 
ssˇnf
(c⁄° *
°r
, c⁄° *
f‹m©
, ...);

14 *
°∫˝y
(*
de°
, c⁄° *
§c
, 
size_t
 
n
);

15 
size_t
 
°∫Àn
(c⁄° *
s
, size_à
maxÀn
);

16 
is•a˚
(
c
);

17 *
°rchr
(c⁄° *
s
, 
c
);

18 
isdigô
(
ch
);

19 
size_t
 
°rc•n
(c⁄° *
s
, c⁄° *
ªje˘
);

20 
ª£t
(
°r
[], 
Àn
);

21 *(
	gmem˝y
)(* 
ª°ri˘
 
	gs1
, c⁄° *Ñe°ri˘ 
	gs2
, 
size_t
 
	gn
);

22 
memcmp
(c⁄° * 
s1
, c⁄° * 
s2
,
size_t
 
n
);

23 *
mem£t
(*
°r
, 
c
, 
size_t
 
n
);

24 
©oi
(c⁄° *
°r
);

	@include/sys/defs.h

1 #i‚de‡
_DEFS_H


2 
	#_DEFS_H


	)

4 
	#NULL
 ((*)0)

	)

6 
	tuöt64_t
;

7 
	töt64_t
;

8 
	tuöt32_t
;

9 
	töt32_t
;

10 
	tuöt16_t
;

11 
	töt16_t
;

12 
	tuöt8_t
;

	@include/sys/gdt.h

1 #i‚de‡
_GDT_H


2 
	#_GDT_H


	)

4 
	~<sys/defs.h
>

6 
	stss_t
 {

7 
uöt32_t
 
	mª£rved
;

8 
uöt64_t
 
	mr•0
;

9 
uöt32_t
 
	munu£d
[11];

10 }
__©åibuã__
((
∑cked
));

11 
tss_t
 
tss
;

13 
uöt64_t
 
gdt
[];

15 
ªlﬂd_gdt
();

16 
£tup_tss
();

17 
£t_tss_r•0
(
uöt64_t
 
r•
);

	@include/sys/idt.h

1 #i‚de‡
_IDT_H


2 
	#_IDT_H


	)

4 
	~<sys/k°rög.h
>

5 
	~<sys/defs.h
>

6 
	~<sys/timî.h
>

8 
idt_£t_g©e
(
öt32_t
 
num
, 
uöt64_t
 
ba£
, 
uöt16_t
 
£l
, 
uöt8_t
 
Êags
);

9 
idt_ö°Æl
();

10 
úq_ªm≠
();

11 
ã°divzîo
();

12 
ã°_∑ge_Áu…
();

	@include/sys/ioport.h

1 #i‚de‡
_IOPORT_H


2 
	#_IOPORT_H


	)

3 
	~<sys/defs.h
>

5 
ouç‹tb
(
uöt16_t
 
p‹t
, 
uöt8_t
 
d©a
);

6 
öp‹tb
(
_p‹t
);

	@include/sys/irq.h

1 #i‚de‡
_IRQ_H


2 
	#_IRQ_H


	)

4 
	~<sys/i›‹t.h
>

5 
	~<sys/sbunix.h
>

6 
	~<sys/idt.h
>

9 
úq_ö°Æl_h™dÀr
(
úq
, (*
h™dÀr
)());

10 
úq_unö°Æl_h™dÀr
(
úq
);

11 
ö°Æl_úqs
();

	@include/sys/kb.h

1 #i‚de‡
_KB_H


2 
	#_KB_H


	)

5 
	~<sys/defs.h
>

6 
	~<sys/úq.h
>

7 
	ec⁄åﬁ


9 
	mNORMAL_KEY
,

10 
	mCONTROL_KEY
,

11 
	mSHIFT_KEY
,

12 
	mALT_KEY


14 
kb_ö°Æl
();

	@include/sys/kstdio.h

	@include/sys/kstring.h

1 #i‚de‡
_KSTRING_H


2 
	#_KSTRING_H


	)

4 
	~<°dlib.h
>

5 
k°rcmp
(c⁄° *
cs
, c⁄° *
˘
);

6 
size_t
 
°æí
(c⁄° * 
°r
);

8 *
mem˝y
(*
de°ö©i⁄
, *
sour˚
, 
uöt64_t
 
num
);

9 *
mem£tw
(*
de°
, 
vÆ
, 
uöt64_t
 
cou¡
);

10 *
mem£t
(*
°r
, 
c
, 
size_t
 
n
);

11 c⁄° *
byã_to_bö¨y
(
uöt64_t
 
x
);

12 *
°rˇt
(*
de°
, c⁄° *
§c
);

13 
©oi
(c⁄° *
°r
);

14 
uöt64_t
 
o˘Æ_to_decimÆ
(
o˘
);

15 *
k°r˝y
(*
de°
, c⁄° *
§c
);

	@include/sys/mmu/assemblyutil.h

1 #i‚de‡
_ASSEMBLYUTIL_H


2 
	#_ASSEMBLYUTIL_H


	)

4 
	~<sys/defs.h
>

6 
uöt64_t
 
ªad_¸0
();

7 
wrôe_¸0
(
uöt64_t
 
¸0
);

8 
uöt64_t
 
ªad_¸3
();

9 
wrôe_¸3
(
uöt64_t
 
¸3
);

10 
uöt64_t
 
ªad_¸2
();

11 
uöt64_t
 
ªad_r•
();

12 
wrôe_r•
(
uöt64_t
 
r•
);

13 
swôch_to_u£rmode
();

	@include/sys/mmu/kmalloc.h

1 #i‚de‡
_KMALLOC_H


2 
	#_KMALLOC_H


	)

4 
	~<sys/sbunix.h
>

5 
	~<sys/mmu/±.h
>

6 
	~<sys/mmu/vútuÆ_mm.h
>

8 
	#no_of_∑ges
 512;

	)

9 
öô_kmÆloc
();

10 *
kmÆloc
(
uöt64_t
 
size
);

11 
ã°_mÆloc
();

	@include/sys/mmu/paging.h

2 #i‚de‡
_ASSEMBLYUTIL_H


3 
	#_ASSEMBLYUTIL_H


	)

5 
	~<sys/defs.h
>

	@include/sys/mmu/phy_alloc.h

1 #i‚de‡
_PHY_ALLOC_H


2 
	#_PHY_ALLOC_H


	)

3 
	~<sys/mmu/±.h
>

4 
	~<sys/defs.h
>

5 
	~<sys/mmu/as£mblyutû.h
>

8 
	~<sys/k°rög.h
>

10 
ölöe
 
uöt64_t
 
	$mm_phy_to_∑ge
(
uöt64_t
 
phy
) {

12  
phy
 / 4096;

13 
	}
}

15 
ölöe
 
uöt64_t
 
	$mm_∑ge_to_phy
(
uöt64_t
 
∑ge
) {

17  
∑ge
 * 4096;

18 
	}
}

20 
mm_phy_öô
(
uöt64_t
 
ba£
, uöt64_à
Àngth
, uöt64_à
ty≥
);

22 
uöt64_t
 
mm_phy_Æloc_∑ge
();

	@include/sys/mmu/pt.h

1 #i‚de‡
_PT_H


2 
	#_PT_H


	)

4 
	~<sys/defs.h
>

5 
	~<sys/mmu/phy_Æloc.h
>

6 
	~<sys/sbunix.h
>

7 
	~<sys/mmu/as£mblyutû.h
>

8 
	~<sys/mmu/vútuÆ_mm.h
>

10 
	#PAGE_TABLE_ALIGNLENT
 0x1000

11 

	)

12 
	#PAGE_SIZE
 4096

	)

14 
	#PAGE_MAX
 32510

	)

17 
	#VIRT_OFFSET
 0xFFFF800000000000

	)

18 
	#VIRT_KERNEL_BASE
 0xFFFFFFFF80000000

	)

22 
	#PT_PRESENT_FLAG
 (1<<0)

23 
	#PT_WRITABLE_FLAG
 (1<<1)

24 
	#PT_PCF_FLAG
 (1<<4)

25 
	#PT_USER
 (1<<2)

26 

	)

27 
	#PHY_TO_VIRT
(
phy
, 
_ty≥
Ë((_ty≥)(((
uöt8_t
*)(
uöt64_t
ÌhyË+ 
VIRT_OFFSET
))

	)

30 
	#ALIGN_UP
(
x
Ë(((xË& (
PAGE_TABLE_ALIGNLENT
-1)Ë? 
	`ALIGN_DOWN
(x+PAGE_TABLE_ALIGNLENTË: (x))

	)

31 
	#ALIGN_DOWN
(
x
Ë((xË>> 12 << 12)

	)

32 
	#LOAD_CR3
(
l¸3
Ë
__asm__
 
	`__vﬁ©ûe__
 ("movq %0, %%¸3;" :: "r"÷¸3));

	)

33 
uöt64_t
 
KADDR
(uöt64_à
∑ddr
);

34 
uöt64_t
 
PADDR
(uöt64_à
vddr
);

35 
uöt64_t
 
kînmem_m≠pög
(uöt64_à
vút
, uöt64_à
pba£
, uöt64_à
nooÂages
, uöt64_à
pml4e
);

36 
m≠_Æl_phy
(
uöt64_t
 
k_¸3
);

37 
uöt64_t
 
vút_to_phy
(uöt64_à
vút
, uöt64_à
pml4e
);

38 
uöt64_t
 
gëCR3
();

39 
uöt64_t
 
vút_to_pde
(uöt64_à
vút
);

40 
m≠_vút_to_phy
(
uöt64_t
 
vút
, uöt64_à
phy
, uöt64_à
Êags
);

41 
£tup_∑gög
(
uöt64_t
 
ba£
, uöt64_à
phys‰ì
, uöt64_à
pba£
, uöt64_à
p‰ì
);

42 
öôülize_√w_pml4e
(
uöt64_t
 
pml4e
);

43 
uöt64_t
 
ív_£tup_vm
();

	@include/sys/mmu/region.h

1 #i‚de‡
_REGION_H


2 
	#_REGION_H


	)

4 
	~<sys/defs.h
>

6 
	emm_phy_ªg


8 
uöt64_t
 
	mba£
;

9 
uöt64_t
 
	mÀn
;

10 
uöt32_t
 
	mty≥


11 } 
__©åibuã__
((
∑ckë
));

	@include/sys/mmu/virtual_mm.h

1 #i‚de‡
_VIRTUAL_MM_H


2 
	#_VIRTUAL_MM_H


	)

4 
	~<sys/sbunix.h
>

5 
	~<sys/mmu/phy_Æloc.h
>

6 
	~<sys/mmu/±.h
>

8 
öô_vútuÆ_mem‹y
(
uöt64_t
 
vútuÆ_°¨t_addªss
);

9 
uöt64_t
 
Æloc_∑ges
(uöt64_à
no_of_∑ges
, uöt64_à
Êags
);

10 
uöt64_t
 
Æloc_∑ges_©_vút
(uöt64_à
vút
, uöt64_à
no_of_∑ges
, uöt64_à
Êags
);

11 
‰ì_∑ges
(
uöt64_t
 
addr
);

	@include/sys/process/elf.h

1 #i‚de‡
_ELF_H


2 
	#_ELF_H


	)

7 
	~<sys/defs.h
>

8 
	~<sys/sbunix.h
>

9 
	~<sys/¥o˚ss/¥o˚ss.h
>

11 
	#PT_LOAD
 1

	)

14 
uöt16_t
 
	tElf32_HÆf
;

15 
uöt16_t
 
	tElf64_HÆf
;

18 
uöt32_t
 
	tElf32_W‹d
;

19 
öt32_t
 
	tElf32_Sw‹d
;

20 
uöt32_t
 
	tElf64_W‹d
;

21 
öt32_t
 
	tElf64_Sw‹d
;

24 
uöt64_t
 
	tElf32_Xw‹d
;

25 
öt64_t
 
	tElf32_Sxw‹d
;

26 
uöt64_t
 
	tElf64_Xw‹d
;

27 
öt64_t
 
	tElf64_Sxw‹d
;

30 
uöt32_t
 
	tElf32_Addr
;

31 
uöt64_t
 
	tElf64_Addr
;

34 
uöt32_t
 
	tElf32_Off
;

35 
uöt64_t
 
	tElf64_Off
;

38 
uöt16_t
 
	tElf32_Se˘i⁄
;

39 
uöt16_t
 
	tElf64_Se˘i⁄
;

42 
Elf32_HÆf
 
	tElf32_Vîsym
;

43 
Elf64_HÆf
 
	tElf64_Vîsym
;

47 
	#EI_NIDENT
 (16)

	)

51 
	me_idít
[
EI_NIDENT
];

52 
Elf64_HÆf
 
	me_ty≥
;

53 
Elf64_HÆf
 
	me_machöe
;

54 
Elf64_W‹d
 
	me_vîsi⁄
;

55 
Elf64_Addr
 
	me_íåy
;

56 
Elf64_Off
 
	me_phoff
;

57 
Elf64_Off
 
	me_shoff
;

58 
Elf64_W‹d
 
	me_Êags
;

59 
Elf64_HÆf
 
	me_ehsize
;

60 
Elf64_HÆf
 
	me_phítsize
;

61 
Elf64_HÆf
 
	me_phnum
;

62 
Elf64_HÆf
 
	me_shítsize
;

63 
Elf64_HÆf
 
	me_shnum
;

64 
Elf64_HÆf
 
	me_sh°∫dx
;

65 } 
	tElf64_Ehdr
;

69 
Elf64_W‹d
 
	mp_ty≥
;

70 
Elf64_W‹d
 
	mp_Êags
;

71 
Elf64_Off
 
	mp_off£t
;

72 
Elf64_Addr
 
	mp_vaddr
;

73 
Elf64_Addr
 
	mp_∑ddr
;

74 
Elf64_Xw‹d
 
	mp_fûesz
;

75 
Elf64_Xw‹d
 
	mp_memsz
;

76 
Elf64_Xw‹d
 
	mp_Æign
;

77 } 
	tElf64_Phdr
;

80 
ªadElf
(*
fûíame
);

	@include/sys/process/process.h

4 #i‚de‡
_PROCESS_H


5 
	#_PROCESS_H


	)

7 
	~<sys/sbunix.h
>

8 
	~<°dlib.h
>

9 
	~<sys/k°rög.h
>

10 
	~<sys/mmu/vútuÆ_mm.h
>

12 
	eèsk_°©es
{

13 
	mTASK_RUNNING
,

14 
	mTASK_INTERRUPTIBLE
,

15 
	mTASK_UNINTERRUPTIBLE
,

16 
	mTASK_ZOMBIE
,

17 
	mTASK_STOPPED
,

18 
	mTASK_SWAPPING
,

19 
	mTASK_RUNNABLE


22 
	#KSTACK_SIZE
 512

	)

23 
	#USER_STACK_SIZE
 16*4096

	)

24 
	#USER_STACK
 0xF000000000UL

	)

29 
	#VM_NONE
 0

	)

30 
	#VM_X
 1

	)

31 
	#VM_W
 2

	)

32 
	#VM_WX
 3

	)

33 
	#VM_R
 4

	)

34 
	#VM_RX
 5

	)

35 
	#VM_RW
 6

	)

36 
	#VM_RWX
 7

	)

40 
	sèsk_°ru˘
 {

41 
pid_t
 
	mpid
;

42 
pid_t
 
	mµid
;

43 
	m«me
[16];

44 
uöt64_t
 
	m°©e
;

45 
uöt64_t
 
	mcou¡î
;

46 
èsk_°ru˘
 *
	m√xt
;

49 
uöt64_t
 
	me_íåy
;

50 
uöt64_t
 
	mrù
;

51 
uöt64_t
 
	mr•
;

52 
uöt64_t
 
	mpml4e
;

53 
uöt64_t
 
	mk°ack
[
KSTACK_SIZE
];

54 
mm_°ru˘
 *
	mmm
;

59 
	smm_°ru˘


61 
vm_¨ó_°ru˘
 *
	mvma_li°
;

62 
uöt64_t
 
	m°¨t_brk
, 
	míd_brk
, 
	m°¨t_°ack
;

63 
uöt64_t
 
	m¨g_°¨t
, 
	m¨g_íd
, 
	mív_°¨t
, 
	mív_íd
;

64 
uöt64_t
 
	mtŸÆ_vm_size
;

65 
uöt64_t
 
	m°ack_vm
;

68 
	svm_¨ó_°ru˘
 {

69 
mm_°ru˘
 *
	mvm_mm
;

70 
uöt64_t
 
	mvm_°¨t
;

71 
uöt64_t
 
	mvm_íd
;

72 
uöt64_t
 
	mvm_Êags
;

73 
uöt64_t
 
	mvm_fûe_des˝
;

74 
vm_¨ó_°ru˘
 *
	m√xt
;

77 
vm_¨ó_°ru˘
 * 
¸óã_vma
(
mm_°ru˘
 *
vm_mm
, 
uöt64_t
 
°¨t
, uöt64_à
íd
, uöt64_à
Êags
, uöt64_à
fd
);

78 
add_to_èsk_li°
(
èsk_°ru˘
 *
èsk
);

79 
èsk_°ru˘
 *
gë_√xt_èsk
();

80 
öôüli£_¥o˚ss
();

81 
èsk_°ru˘
 *
¸óã_√w_èsk
();

82 
mm_°ru˘
 * 
¸óã_√w_mm°ru˘
();

	@include/sys/process/process_manager.h

1 #i‚de‡
_PROCESS_MANAGER_H


2 
	#_PROCESS_MANAGER_H


	)

3 
	~<sys/defs.h
>

4 
	~<sys/¥o˚ss/¥o˚ss.h
>

5 
	~<sys/mmu/as£mblyutû.h
>

6 
	~<sys/gdt.h
>

8 
lﬂd_¥o˚ss
(
èsk_°ru˘
* 
èsk
, 
uöt64_t
 
bö¨y_íåy
, uöt64_à
u°ack
);

9 
scheduÀ_¥o˚ss
();

10 
èsk_°ru˘
* 
gë_cuºít_èsk
();

	@include/sys/sbunix.h

1 #i‚de‡
__SBUNIX_H


2 
	#__SBUNIX_H


	)

4 
	~<sys/defs.h
>

7 
	sªgs


9 
	mgs
, 
	mfs
, 
	mes
, 
	mds
;

10 
	medi
, 
	mesi
, 
	mebp
, 
	me•
, 
	mebx
, 
	medx
, 
	mecx
, 
	móx
;

11 
	möt_no
, 
	mîr_code
;

12 
	meù
, 
	mcs
, 
	meÊags
, 
	mu£ª•
, 
	mss
;

15 
k¥ötf
(c⁄° *
fmt
, ...);

16 
k¥öèt
(
x
, 
y
, c⁄° *
fmt
, ...);

17 
˛rs¸
();

	@include/sys/syscall.h

1 #i‚de‡
__SYS_SYSCALL_H


2 
	#__SYS_SYSCALL_H


	)

4 
	#SYS_exô
 60

	)

5 
	#SYS_brk
 12

	)

6 
	#SYS_f‹k
 57

	)

7 
	#SYS_gëpid
 39

	)

8 
	#SYS_gëµid
 110

	)

9 
	#SYS_execve
 59

	)

10 
	#SYS_waô4
 61

	)

11 
	#SYS_«no¶ìp
 35

	)

12 
	#SYS_Æ¨m
 37

	)

13 
	#SYS_gëcwd
 79

	)

14 
	#SYS_chdú
 80

	)

15 
	#SYS_›í
 2

	)

16 
	#SYS_ªad
 0

	)

17 
	#SYS_wrôe
 1

	)

18 
	#SYS_l£ek
 8

	)

19 
	#SYS_˛o£
 3

	)

20 
	#SYS_pùe
 22

	)

21 
	#SYS_dup
 32

	)

22 
	#SYS_dup2
 33

	)

23 
	#SYS_gëdíts
 78

	)

	@include/sys/tarfs.h

1 #i‚de‡
_TARFS_H


2 
	#_TARFS_H


	)

4 
	~<sys/sbunix.h
>

6 
öôülize_èrfs
();

7 
uöt64_t
 
föd_off£t_f‹_fûe
(*
‚ame
);

9 
_bö¨y_èrfs_°¨t
;

10 
_bö¨y_èrfs_íd
;

12 
	sposix_hódî_u°¨
 {

13 
	m«me
[100];

14 
	mmode
[8];

15 
	muid
[8];

16 
	mgid
[8];

17 
	msize
[12];

18 
	mmtime
[12];

19 
	mchecksum
[8];

20 
	mty≥Êag
[1];

21 
	mlök«me
[100];

22 
	mmagic
[6];

23 
	mvîsi⁄
[2];

24 
	mu«me
[32];

25 
	mg«me
[32];

26 
	mdevmaj‹
[8];

27 
	mdevmö‹
[8];

28 
	m¥efix
[155];

29 
	m∑d
[12];

	@include/sys/timer.h

1 #i‚de‡
_TIMER_H


2 
	#_TIMER_H


	)

4 
	~<sys/i›‹t.h
>

5 
	~<sys/sbunix.h
>

6 
	~<sys/úq.h
>

7 
	~<sys/¥o˚ss/¥o˚ss_m™agî.h
>

9 
	#FREQUENCY
 100

	)

11 
timî_pha£
(
hz
);

12 
timî_ö°Æl
();

	@include/sys/vgaconsole.h

1 #i‚de‡
__VGACONSOLE_H


2 
	#__VGACONSOLE_H


	)

3 
	~<sys/k°rög.h
>

5 
putch
(
ch
);

6 
£tcﬁ‹
(
background
, 
f‹eground
);

7 
puts
(c⁄° *
°r
);

8 
puâimî
(
x
, 
y
, *
°r
);

9 
˛órs¸ìn
();

	@include/syscall.h

1 #i‚de‡
_SYSCALL_H


2 
	#_SYSCALL_H


	)

4 
	~<sys/defs.h
>

5 
	~<sys/sysˇŒ.h
>

9 
__ölöe
 
uöt64_t
 
	$sysˇŒ_0
(
uöt64_t
 
n
) {

10 
uöt64_t
 
ªt
;

11 
__asm
 
	`__vﬁ©ûe
("movq %1, %%rax;"

14 "Ùax" (
ªt
):

15 "øx" (
n
):

18  
ªt
;

19 
	}
}

21 
__ölöe
 
uöt64_t
 
	$sysˇŒ_1
(
uöt64_t
 
n
, uöt64_à
a1
) {

22 
uöt64_t
 
ªt
;

23 
__asm
 
	`__vﬁ©ûe
("movq %1, %%rax;"

27 "˜" (
ªt
):

28 "a" (
n
),"b" (
a1
):

31  
ªt
;

32 
	}
}

34 
__ölöe
 
uöt64_t
 
	$sysˇŒ_2
(
uöt64_t
 
n
, uöt64_à
a1
, uöt64_à
a2
) {

35 
uöt64_t
 
ªt
;

36 
__asm
 
	`__vﬁ©ûe
("movq %1, %%rax;"

41 "˜" (
ªt
):

42 "a" (
n
),"b" (
a1
),"c" (
a2
):

44  
ªt
;

45 
	}
}

47 
__ölöe
 
uöt64_t
 
	$sysˇŒ_3
(
uöt64_t
 
n
, uöt64_à
a1
, uöt64_à
a2
, uöt64_à
a3
) {

48 
uöt64_t
 
ªt
;

49 
__asm
 
	`__vﬁ©ûe
("movq %1, %%rax;"

55 "˜" (
ªt
):

56 "a" (
n
),"b" ((
uöt64_t
)(
a1
)),"c" ((uöt64_t)(
a2
)),"d" ((uöt64_t)(
a3
)):

58  
ªt
;

59 
	}
}

	@libc/malloc.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

6 
	smem_block


8 
size_t
 
	msize
;

9 
	m‰ì
;

10 
mem_block
 *
	m√xt
;

12 
mem_block
 
	gmem
;

13 *
	ghód
 = 
NULL
;

17 
	mUSED
,

18 
	mFREE


23 
	#BLOCK_SIZE
 (
mem
)

	)

25 
mem_block
 *
ÆloˇãMem‹y
(
size_t
 
size
);

26 
mem_block
 *
föd_‰ì_mem_block
(mem_block **
œ°
, 
size_t
 
size
);

27 *
mÆloc
(
size_t
 
size
);

29 *
	$mÆloc
(
size_t
 
size
)

32 
mem_block
 *
block
;

33 if(
size
 <= 0)

34  
NULL
;

36 if(
hód
 =
NULL
)

39 
block
 = 
	`ÆloˇãMem‹y
(
size
);

40 if(
block
 =
NULL
)

43  
NULL
;

45 
hód
 = 
block
;

50 
mem_block
 *
œ°
 = 
hód
;

51 
block
 = 
	`föd_‰ì_mem_block
(&
œ°
, 
size
);

53 if(
block
 =
NULL
)

56 
block
 = 
	`ÆloˇãMem‹y
(
size
);

57 if(
block
 =
NULL
)

58  
NULL
;

59 
œ°
->
√xt
 = 
block
;

64 
block
->
‰ì
 = 
USED
;

68 (
block
+1);

71 
	}
}

73 
	$‰ì
(*
±r
)

76 if(
±r
 =
NULL
)

78 
mem_block
 *
block
 = (mem_block *)
±r
 -1 ;

79 
block
->
‰ì
 = 
FREE
;

80 
	}
}

83 
mem_block
 *
	$föd_‰ì_mem_block
(
mem_block
 **
œ°
, 
size_t
 
size
)

86 
mem_block
 *
ãmp
 = 
hód
;

87 
ãmp
 && !—emp->
‰ì
 =
FREE
 &&Åemp->
size
 >= size))

89 *
œ°
 = 
ãmp
;

90 
ãmp
 =Åemp->
√xt
;

92  
ãmp
;

93 
	}
}

96 
mem_block
 *
	$ÆloˇãMem‹y
(
size_t
 
size
)

98 
mem_block
 *
cuºít
;

99 
cuºít
 = 
	`sbrk
(0);

100 *
addr
 = 
	`sbrk
(
size
 + 
BLOCK_SIZE
);

102 i‡(
addr
 == (*) -1) {

104  
NULL
;

106 
cuºít
->
size
 = size;

107 
cuºít
->
√xt
 = 
NULL
;

108 
cuºít
->
‰ì
 = 
USED
;

109  
cuºít
;

110 
	}
}

	@libc/printf.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°d¨g.h
>

6 
	~<°rög.h
>

7 
	~<îr‹.h
>

9 
	#ZEROPAD
 1

	)

10 
	#SIGN
 2

	)

11 
	#PLUS
 4

	)

12 
	#SPACE
 8

	)

13 
	#LEFT
 16

	)

14 
	#SMALL
 32

	)

15 
	#SPECIAL
 64

	)

16 
v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

18 
	#__do_div
(
n
, 
ba£
) ({ \

19 
__ªs
; \

20 
__ªs
 = ((Ë
n
Ë% (Ë
ba£
; \

21 
n
 = ((ËnË/ (Ë
ba£
; \

22 
__ªs
; })

	)

25 
	$skù_©oi
(c⁄° **
s
)

27 
i
 = 0;

29 
	`isdigô
(**
s
))

30 
i
 = i * 10 + *((*
s
)++) - '0';

31  
i
;

32 
	}
}

34 *
	$numbî
(*
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
,

35 
ty≥
)

38 c⁄° 
digôs
[16] = "0123456789ABCDEF";

40 
tmp
[66];

41 
c
, 
sign
, 
loˇ£
;

42 
i
;

46 
loˇ£
 = (
ty≥
 & 
SMALL
);

47 i‡(
ty≥
 & 
LEFT
)

48 
ty≥
 &~
ZEROPAD
;

49 i‡(
ba£
 < 2 || base > 16)

50  
NULL
;

51 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ';

52 
sign
 = 0;

53 i‡(
ty≥
 & 
SIGN
) {

54 i‡(
num
 < 0) {

55 
sign
 = '-';

56 
num
 = -num;

57 
size
--;

58 } i‡(
ty≥
 & 
PLUS
) {

59 
sign
 = '+';

60 
size
--;

61 } i‡(
ty≥
 & 
SPACE
) {

62 
sign
 = ' ';

63 
size
--;

66 i‡(
ty≥
 & 
SPECIAL
) {

67 i‡(
ba£
 == 16)

68 
size
 -= 2;

69 i‡(
ba£
 == 8)

70 
size
--;

72 
i
 = 0;

73 i‡(
num
 == 0)

74 
tmp
[
i
++] = '0';

76 
num
 != 0)

77 
tmp
[
i
++] = (
digôs
[
	`__do_div
(
num
, 
ba£
)] | 
loˇ£
);

78 i‡(
i
 > 
¥ecisi⁄
)

79 
¥ecisi⁄
 = 
i
;

80 
size
 -
¥ecisi⁄
;

81 i‡(!(
ty≥
 & (
ZEROPAD
 + 
LEFT
)))

82 
size
-- > 0)

83 *
°r
++ = ' ';

84 i‡(
sign
)

85 *
°r
++ = 
sign
;

86 i‡(
ty≥
 & 
SPECIAL
) {

87 i‡(
ba£
 == 8)

88 *
°r
++ = '0';

89 i‡(
ba£
 == 16) {

90 *
°r
++ = '0';

91 *
°r
++ = ('X' | 
loˇ£
);

94 i‡(!(
ty≥
 & 
LEFT
))

95 
size
-- > 0)

96 *
°r
++ = 
c
;

97 
i
 < 
¥ecisi⁄
--)

98 *
°r
++ = '0';

99 
i
-- > 0)

100 *
°r
++ = 
tmp
[
i
];

101 
size
-- > 0)

102 *
°r
++ = ' ';

103  
°r
;

104 
	}
}

108 
	$¥ötf
(c⁄° *
f‹m©
, ...) {

109 
va_li°
 
vÆ
;

110 
¥öãd
 = 0;

111 
¥ötf_buf
[1024];

113 
	`va_°¨t
(
vÆ
, 
f‹m©
);

114 
¥öãd
 = 
	`v•rötf
(
¥ötf_buf
, 
f‹m©
, 
vÆ
);

115 
	`wrôe
(1, 
¥ötf_buf
, 
¥öãd
);

118 
	`va_íd
(
vÆ
);

119  
¥öãd
;

120 
	}
}

122 
	$v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

124 
Àn
;

125 
num
;

126 
i
, 
ba£
;

127 *
°r
;

128 c⁄° *
s
;

130 
Êags
;

132 
fõld_width
;

133 
¥ecisi⁄
;

135 
quÆifõr
;

137 
°r
 = 
buf
; *
fmt
; ++fmt) {

138 i‡(*
fmt
 != '%') {

139 *
°r
++ = *
fmt
;

144 
Êags
 = 0;

145 
ª≥©
:

146 ++
fmt
;

147 *
fmt
) {

149 
Êags
 |
LEFT
;

150 
ª≥©
;

152 
Êags
 |
PLUS
;

153 
ª≥©
;

155 
Êags
 |
SPACE
;

156 
ª≥©
;

158 
Êags
 |
SPECIAL
;

159 
ª≥©
;

161 
Êags
 |
ZEROPAD
;

162 
ª≥©
;

166 
fõld_width
 = -1;

167 i‡(
	`isdigô
(*
fmt
))

168 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

169 i‡(*
fmt
 == '*') {

170 ++
fmt
;

172 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

173 i‡(
fõld_width
 < 0) {

174 
fõld_width
 = -field_width;

175 
Êags
 |
LEFT
;

180 
¥ecisi⁄
 = -1;

181 i‡(*
fmt
 == '.') {

182 ++
fmt
;

183 i‡(
	`isdigô
(*
fmt
))

184 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

185 i‡(*
fmt
 == '*') {

186 ++
fmt
;

188 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

190 i‡(
¥ecisi⁄
 < 0)

191 
¥ecisi⁄
 = 0;

195 
quÆifõr
 = -1;

196 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L') {

197 
quÆifõr
 = *
fmt
;

198 ++
fmt
;

202 
ba£
 = 10;

204 *
fmt
) {

206 i‡(!(
Êags
 & 
LEFT
))

207 --
fõld_width
 > 0)

208 *
°r
++ = ' ';

209 *
°r
++ = ()
	`va_¨g
(
¨gs
, );

210 --
fõld_width
 > 0)

211 *
°r
++ = ' ';

215 
s
 = 
	`va_¨g
(
¨gs
, *);

217 
Àn
 = 
	`°æí
(
s
);

218 i‡(!(
Êags
 & 
LEFT
))

219 
Àn
 < 
fõld_width
--)

220 *
°r
++ = ' ';

221 
i
 = 0; i < 
Àn
; ++i)

222 *
°r
++ = *
s
++;

223 
Àn
 < 
fõld_width
--)

224 *
°r
++ = ' ';

228 i‡(
fõld_width
 == -1) {

229 
fõld_width
 = 2 * (*);

230 
Êags
 |
ZEROPAD
;

232 
°r
 = 
	`numbî
(str,

233 ()
	`va_¨g
(
¨gs
, *), 16,

234 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

238 i‡(
quÆifõr
 == 'l') {

239 *
ù
 = 
	`va_¨g
(
¨gs
, *);

240 *
ù
 = (
°r
 - 
buf
);

242 *
ù
 = 
	`va_¨g
(
¨gs
, *);

243 *
ù
 = (
°r
 - 
buf
);

248 *
°r
++ = '%';

253 
ba£
 = 8;

257 
Êags
 |
SMALL
;

259 
ba£
 = 16;

264 
Êags
 |
SIGN
;

269 *
°r
++ = '%';

270 i‡(*
fmt
)

271 *
°r
++ = *
fmt
;

273 --
fmt
;

276 i‡(
quÆifõr
 == 'l')

277 
num
 = 
	`va_¨g
(
¨gs
, );

278 i‡(
quÆifõr
 == 'h') {

279 
num
 = ()
	`va_¨g
(
¨gs
, );

280 i‡(
Êags
 & 
SIGN
)

281 
num
 = ()num;

282 } i‡(
Êags
 & 
SIGN
)

283 
num
 = 
	`va_¨g
(
¨gs
, );

285 
num
 = 
	`va_¨g
(
¨gs
, );

286 
°r
 = 
	`numbî
(°r, 
num
, 
ba£
, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

288 *
°r
 = '\0';

289  
°r
 - 
buf
;

290 
	}
}

292 
	$£º‹
(
îr‹
){

293 
îr‹
){

294 
EPERM
:

295 
	`¥ötf
("operation isÇotÖermitted \n");

297 
ENOENT
 :

298 
	`¥ötf
("No Such File or directory\n");

300 
EINTR
 :

301 
	`¥ötf
("Interrupted system call \n");

303 
EIO
 :

304 
	`¥ötf
("Input outpurÉrror \n");

306 
E2BIG
 :

307 
	`¥ötf
("ArgumentÜistÅooÜong \n");

309 
ENOEXEC
 :

310 
	`¥ötf
("Exec formatÉrror \n");

312 
EBADF
 :

313 
	`¥ötf
("Bad FileÇumber \n");

315 
ECHILD
 :

316 
	`¥ötf
("No childÖrocess \n");

318 
EAGAIN
:

319 
	`¥ötf
("error:Åryágain \n");

321 
ENOMEM
 :

322 
	`¥ötf
("Out of memory\n");

324 
EACCES
 :

325 
	`¥ötf
("Permission denied\n");

327 
EFAULT
 :

328 
	`¥ötf
("Badáddress \n");

330 
EBUSY
 :

331 
	`¥ötf
("Device orÑesource busy \n");

333 
EEXIST
 :

334 
	`¥ötf
("FileÉxists \n");

336 
ENOTDIR
 :

337 
	`¥ötf
("Notá directory \n");

339 
EISDIR
 :

340 
	`¥ötf
("isá directory \n");

342 
EINVAL
 :

343 
	`¥ötf
("Invalid Argument \n");

345 
ENFILE
 :

346 
	`¥ötf
("FileÅable overflow \n");

348 
EMFILE
 :

349 
	`¥ötf
("Too many open files \n");

351 
EFBIG
 :

352 
	`¥ötf
("FileÅooÜarge \n");

354 
EROFS
 :

355 
	`¥ötf
("Read-only file system\n");

357 
ELOOP
:

358 
	`¥ötf
("Too many symbolicÜinksÉncountered \n");

360 
EPIPE
:

361 
	`¥ötf
("BrokenÖipe \n");

363 
ENAMETOOLONG
 :

364 
	`¥ötf
("FileÇameÅooÜong \n");

367 
	`¥ötf
("Error in Opening or Executing\n");

370 
	}
}

	@libc/scanf.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<°d¨g.h
>

4 
	~<°rög.h
>

8 
	#MAXSIZE
 1024

	)

10 
	gd©a
[1024];

12 
	$sˇnf
(c⁄° *
f‹m©
, ...)

14 
va_li°
 
vÆ
;

15 
	`va_°¨t
(
vÆ
, 
f‹m©
);

16 
	`ª£t
(
d©a
,1024);

17 
size
 = -1;

18 *
f‹m©
)

20 if(*
f‹m©
++ == '%')

22 *
f‹m©
)

26 
size
 = 
	`ªad
(0, 
d©a
, 
MAXSIZE
);

27 if(
size
 != -1)

29 
	`mem˝y
((*)(
	`va_¨g
(
vÆ
, *)), (*)
d©a
, 
size
 - 1);

30 
size
--;

36 
size
 = 
	`ªad
(0, 
d©a
, 
MAXSIZE
);

37 if(
size
 == -1)

38  
size
;

39 
size
--;

40 
d©a
[
size
] = '\0';

41 
uöt64_t
 *
¨g
 = 
	`va_¨g
(
vÆ
, uint64_t *);

42 *
¨g
 = 
	`©oi
(
d©a
);

45 
size
 = 
	`ªad
(0, 
d©a
, 1);

47 if(
size
 == -1)

48  
size
;

49 *
c
 = 
	`va_¨g
(
vÆ
, *);

50 *
c
 = 
d©a
[0];

54 
size
 = 
	`ªad
(0, 
d©a
, 1);

59 
f‹m©
++;

64 
	`va_íd
(
vÆ
);

65  
size
;

66 
	}
}

	@libc/stdlib.c

1 
	~<°dlib.h
>

2 
	~<sys/defs.h
>

3 
	~<sys/sysˇŒ.h
>

4 
	~<sysˇŒ.h
>

5 
	~<°rög.h
>

6 
	~<°dio.h
>

7 
	~<îr‹.h
>

9 *
	gbªakPå
;

10 
__thªad
 
	gî∫o
;

12 
	$exô
(
°©us
){

13 
	`sysˇŒ_1
(
SYS_exô
, 
°©us
);

14 
	}
}

16 
	$brk
(*
íd_d©a_£gmít
){

17  
	`sysˇŒ_1
(
SYS_brk
, (
uöt64_t
)
íd_d©a_£gmít
);

18 
	}
}

21 *
	$sbrk
(
size_t
 
ö¸emít
){

22 if(
bªakPå
 =
NULL
)

23 
bªakPå
 = (*)((
uöt64_t
)
	`brk
(0));

24 if(
ö¸emít
 == 0)

26  
bªakPå
;

28 *
°¨tAddr
 = 
bªakPå
;

29 
bªakPå
 = bªakPå+
ö¸emít
;

30 
	`brk
(
bªakPå
);

31  
°¨tAddr
;

32 
	}
}

35 
pid_t
 
	$f‹k
(){

36 
uöt32_t
 
ªs
 = 
	`sysˇŒ_0
(
SYS_f‹k
);

37 if(()
ªs
 < 0)

39 
î∫o
 = -
ªs
;

42  
ªs
;

43 
	}
}

46 
pid_t
 
	$gëpid
(){

47 
uöt32_t
 
ªs
 = 
	`sysˇŒ_0
(
SYS_gëpid
);

48  
ªs
;

49 
	}
}

51 
pid_t
 
	$gëµid
(){

52 
uöt32_t
 
ªs
 = 
	`sysˇŒ_0
(
SYS_gëµid
);

53  
ªs
;

54 
	}
}

56 
	$execve
(c⁄° *
fûíame
, *c⁄° 
¨gv
[], *c⁄° 
ívp
[]){

57 
uöt64_t
 
ªs
 = 
	`sysˇŒ_3
(
SYS_execve
, (uöt64_t)
fûíame
, (uöt64_t)
¨gv
, (uöt64_t)
ívp
);

58 if(()
ªs
 < 0)

60 
î∫o
 = -
ªs
;

63  
ªs
;

64 
	}
}

66 
	$¶ìp
(
£c⁄ds
){

67 
ªs
 = 
	`sysˇŒ_1
(
SYS_«no¶ìp
, 
£c⁄ds
);

68  
ªs
;

69 
	}
}

71 
	$Æ¨m
(
£c⁄ds
){

72 
ªs
 = 
	`sysˇŒ_1
(
SYS_Æ¨m
, 
£c⁄ds
);

73  
ªs
;

74 
	}
}

76 *
	$gëcwd
(*
buf
, 
size_t
 
size
){

77 
uöt64_t
 
ªs
 = 
	`sysˇŒ_2
(
SYS_gëcwd
, (uöt64_tË
buf
, (uöt64_tË
size
);

78 if((*)
ªs
 =
NULL
)

80 
î∫o
 = 
EFAULT
;

82  (*)
ªs
;

83 
	}
}

85 
	$chdú
(c⁄° *
∑th
){

86 
ªs
 = 
	`sysˇŒ_1
(
SYS_chdú
, (
uöt64_t
)
∑th
);

87 if(
ªs
 < 0)

89 
î∫o
 = -
ªs
;

92  
ªs
;

93 
	}
}

95 
	$›í
(c⁄° *
∑th«me
, 
Êags
){

96 
uöt64_t
 
ªs
 = 
	`sysˇŒ_2
(
SYS_›í
, (uöt64_tË
∑th«me
, (uöt64_tË
Êags
);

97 if(()
ªs
 < 0)

99 
î∫o
 = -
ªs
;

102  
ªs
;

103 
	}
}

106 
ssize_t
 
	$ªad
(
fd
, *
buf
, 
size_t
 
cou¡
){

107 
ssize_t
 
ªs
 = 
	`sysˇŒ_3
(
SYS_ªad
, (
uöt64_t
Ë
fd
, (uöt64_tË
buf
, (uöt64_tË
cou¡
);

108 if(()
ªs
 < 0)

110 
î∫o
 = -
ªs
;

113  
ªs
;

114 
	}
}

117 
ssize_t
 
	$wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
){

118 
ssize_t
 
ªs
 = 
	`sysˇŒ_3
(
SYS_wrôe
, (
uöt64_t
Ë
fd
, (uöt64_tË
buf
, (uöt64_tË
cou¡
);

119 if(()
ªs
 < 0)

121 
î∫o
 = -
ªs
;

124  
ªs
;

125 
	}
}

127 
off_t
 
	$l£ek
(
fûdes
, 
off_t
 
off£t
, 
whí˚
){

128 
off_t
 
ªs
 = 
	`sysˇŒ_3
(
SYS_l£ek
, (
uöt64_t
Ë
fûdes
, (uöt64_tË
off£t
, (uöt64_tË
whí˚
);

129 if(()
ªs
 < 0)

131 
î∫o
 = -
ªs
;

134  
ªs
;

135 
	}
}

137 
	$˛o£
(
fd
){

138 
ªs
 = 
	`sysˇŒ_1
(
SYS_˛o£
, 
fd
);

139 if(
ªs
 < 0)

141 
î∫o
 = -
ªs
;

144  
ªs
;

145 
	}
}

147 
	$pùe
(
fûedes
[2]){

148 
ªs
 = 
	`sysˇŒ_1
(
SYS_pùe
, (
uöt64_t
)
fûedes
);

149 if(
ªs
 < 0)

151 
î∫o
 = -
ªs
;

154  
ªs
;

155 
	}
}

157 
	$dup
(
ﬁdfd
){

158 
ªs
 = 
	`sysˇŒ_1
(
SYS_dup
,
ﬁdfd
);

159 if(
ªs
 < 0)

161 
î∫o
 = -
ªs
;

164  
ªs
;

165 
	}
}

167 
	$dup2
(
ﬁdfd
, 
√wfd
){

168 
ªs
 = 
	`sysˇŒ_2
(
SYS_dup2
, (
uöt64_t
Ë
ﬁdfd
, (uöt64_tË
√wfd
);

169 if(
ªs
 < 0)

171 
î∫o
 = -
ªs
;

174  
ªs
;

175 
	}
}

177 *
	$›ídú
(c⁄° *
«me
){

178 
fd
 = 
	`›í
(
«me
, 
O_DIRECTORY
);

179 
buf
[1024];

181 if(
fd
 < 0)

182  
NULL
;

185 
ªs
 = 
	`sysˇŒ_3
(
SYS_gëdíts
, (
uöt64_t
)
fd
, (uöt64_t)
buf
, (uöt64_t)(
dúít
));

186 if(
ªs
 < 0)

188 
î∫o
 = -
ªs
;

189  
NULL
;

192 
dú
 *
d
 = 
	`mÆloc
((dir));

193 
d
->
fd
 = fd;

194 
d
->
addr
 = (*)
buf
;

196 
	`°r˝y
(
d
->
d_«me
, 
«me
);

199  (*)
d
;

200 
	}
}

217 
dúít
 *
	$ªaddú
(*
dú
)

219 
dúít
 *
dù
 = (dúíà*)
dú
;

220 
dúít
 *
√xt
;

221 
√xt
 = (
dúít
 *)(
dú
 + 
dù
->
d_ª˛í
);

222 if(
√xt
->
d_ª˛í
 == 0)

223  
NULL
;

224  
√xt
;

225 
	}
}

227 
	$˛o£dú
(*
dú
){

228 
dú
 *
dp
 = (dir *)dir;

229 
ªs
 = -1;

230 if(
dp
 !
NULL
)

232 
ªs
 = 
	`˛o£
(
dp
->
fd
);

233 
	`‰ì
(
dp
);

235  
ªs
;

236 
	}
}

239 
pid_t
 
	$waôpid
(
pid_t
 
pid
,*
°©us
, 
›ti⁄s
){

240 
pid_t
 
ªs
 = 
	`sysˇŒ_3
(
SYS_waô4
,(
uöt64_t
)
pid
,(uöt64_t)
°©us
,(uöt64_t)
›ti⁄s
);

241 if(()
ªs
 < 0)

243 
î∫o
 = -
ªs
;

246  
ªs
;

247 
	}
}

	@libc/string.c

1 
	~<°rög.h
>

4 
	$memcmp
(c⁄° * 
s1
, c⁄° * 
s2
,
size_t
 
n
)

6 c⁄° *
p1
 = 
s1
, *
p2
 = 
s2
;

7 
n
--)

8 if–*
p1
 !*
p2
 )

9  *
p1
 - *
p2
;

11 
p1
++,
p2
++;

13 
	}
}

15 *
	$mem£t
(*
°r
, 
c
, 
size_t
 
n
)

17 *
d°
 = 
°r
;

18 
n
-- != 0)

20 *
d°
++ = 
c
;

22  
°r
;

23 
	}
}

25 *(
	gmem˝y
)(* 
ª°ri˘
 
	gs1
, c⁄° *Ñe°ri˘ 
	gs2
, 
size_t
 
	gn
)

27 *
	gd°
 = 
s1
;

28 c⁄° *
	g§c
 = 
s2
;

30 
	gn
-- != 0)

31 *
d°
++ = *
§c
++;

32  
	gs1
;

35 *
	$°r˝y
(*
de°
, c⁄° *
§c
)

37 *
tmp
 = 
de°
;

38 (*
de°
++ = *
§c
++) != '\0');

39  
tmp
;

40 
	}
}

42 *
	$°∫˝y
(*
de°
, c⁄° *
§c
, 
size_t
 
cou¡
)

44 *
tmp
 = 
de°
;

45 
cou¡
) {

46 i‡((*
tmp
 = *
§c
) != 0)

47 
§c
++;

48 
tmp
++;

49 
cou¡
--;

51  
de°
;

52 
	}
}

54 
size_t
 
	$°æí
(c⁄° * 
°r
)

56 c⁄° *
s
;

57 
s
 = 
°r
; *s; ++s);

58 (
s
 - 
°r
);

59 
	}
}

61 
	$°rcmp
(c⁄° *
cs
, c⁄° *
˘
)

63 
c1
, 
c2
;

65 
c1
 = *
cs
++;

66 
c2
 = *
˘
++;

67 i‡(
c1
 !
c2
)

68  
c1
 < 
c2
 ? -1 : 1;

69 i‡(!
c1
)

73 
	}
}

75 *
	$°r°r
(c⁄° *
s1
, c⁄° *
s2
)

77 
size_t
 
l1
, 
l2
;

78 
l2
 = 
	`°æí
(
s2
);

79 i‡(!
l2
)

80  (*)
s1
;

81 
l1
 = 
	`°æí
(
s1
);

82 
l1
 >
l2
) {

83 
l1
--;

84 i‡(!
	`memcmp
(
s1
, 
s2
, 
l2
))

85  (*)
s1
;

86 
s1
++;

88  
NULL
;

89 
	}
}

91 *
	$°rˇt
(*
de°
, c⁄° *
§c
)

93 *
tmp
 = 
de°
;

94 *
de°
)

95 
de°
++;

96 (*
de°
++ = *
§c
++) != '\0')

98  
tmp
;

99 
	}
}

101 
	$is•a˚
(
c
)

103  (
c
 == ' ' || c == '\t' || c == '\n' || c == '\12');

104 
	}
}

106 *
	$°rchr
(c⁄° *
s
, 
c
)

108 *
s
 !()
c
)

109 i‡(!*
s
++)

111  (*)
s
;

112 
	}
}

114 
	$isdigô
(
ch
)

116  (
ch
 >= '0') && (ch <= '9');

117 
	}
}

119 
size_t
 
	$°rc•n
(c⁄° *
s
, c⁄° *
ªje˘
) {

120 
size_t
 
cou¡
 = 0;

122 *
s
 != '\0') {

123 i‡(
	`°rchr
(
ªje˘
, *
s
++Ë=
NULL
) {

124 ++
cou¡
;

126  
cou¡
;

129  
cou¡
;

130 
	}
}

131 
	$ª£t
(
°r
[], 
Àn
)

133 
i
 = 0; i < 
Àn
; i++)

134 
°r
[
i
] = '\0';

135 
	}
}

137 
	$©oi
(c⁄° *
°r
)

139 
k
 = 0;

140 
i
 = 0; 
°r
[i] != '\0'; ++i)

141 
k
 = (k<<3)+(k<<1)+(
°r
[
i
])-'0';

142  
k
;

143 
	}
}

	@newfs/newfs.c

1 
	~"../ö˛ude/sys/defs.h
"

2 
	~<°dio.h
>

3 
	~<î∫o.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<sys/°©.h
>

6 
	~<f˙é.h
>

7 
	~<°rög.h
>

8 
	~<sys/mm™.h
>

10 
	ssu≥rblock
 {

11 
uöt32_t
 
	mmagic
;

13 
	söode
 {

14 
uöt64_t
 
	mªfcou¡
;

17 
	$maö
(
¨gc
, * 
¨gv
[]) {

18 
su≥rblock
* 
sb
;

19 
fd
;

20 
	s£˘‹
 { 
c⁄ã¡s
[512]; }* 
disk
;

21 
öode
* 
öo
;

22 
°©
 
disk°©
;

24 i‡(
¨gc
 != 2) {

25 
	`Ârötf
(
°dîr
, "Ußge: %†disk.img\n", 
¨gv
[0]);

29 i‡(
	`°©
(
¨gv
[1], &
disk°©
) == -1) {

30 
	`Ârötf
(
°dîr
, "%s: U«bÀÅÿ°© %†(%s)\n", 
¨gv
[0],árgv[1], 
	`°ªº‹
(
î∫o
));

34 
fd
 = 
	`›í
(
¨gv
[1], 
O_RDWR
);

35 i‡(
fd
 == -1) {

36 
	`Ârötf
(
°dîr
, "%s: U«bÀÅÿ›í %†(%s)\n", 
¨gv
[0],árgv[1], 
	`°ªº‹
(
î∫o
));

40 
disk
 = 
	`mm≠
(
NULL
, 
disk°©
.
°_size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
fd
, 0);

41 i‡(
disk
 =
MAP_FAILED
) {

42 
	`Ârötf
(
°dîr
, "%s: U«bÀÅÿm≠ %†(%s)\n", 
¨gv
[0],árgv[1], 
	`°ªº‹
(
î∫o
));

46 
sb
 = (
su≥rblock
*)&
disk
[0];

47 
sb
->
magic
 = 0x20363035;

48 
öo
 = (
öode
*)&
disk
[1];

49 
öo
->
ªfcou¡
 = 0x45444F4344414544;

51 
	`munm≠
(
disk
, 
disk°©
.
°_size
);

52 
	`˛o£
(
fd
);

54 
	}
}

	@sys/fs/tarfs.c

1 
	~<sys/èrfs.h
>

2 
	~<sys/k°rög.h
>

4 
uöt64_t
 
	$föd_off£t_f‹_fûe
(*
‚ame
)

6 
posix_hódî_u°¨
 *
u°¨t
;

8 
u°¨t
 = (
posix_hódî_u°¨
 *)(&
_bö¨y_èrfs_°¨t
);

10 
uöt64_t
 
off£t
 = 0;

11 
	`°æí
(
u°¨t
->
«me
) != 0)

13 
uöt64_t
 
size
 = 
	`o˘Æ_to_decimÆ
(
	`©oi
(
u°¨t
->size));

21 if(
	`k°rcmp
(
u°¨t
->
«me
, 
‚ame
) == 0)

24  
off£t
 + 512;

26 
uöt64_t
 
Æign
 = 0;

27 if(
size
 != 0)

28 
Æign
 = (
size
%512==0) ? size : size + (512 - size%512);

29 
off£t
 = off£t+ 512 + 
Æign
;

30 
u°¨t
 = (
posix_hódî_u°¨
 *)(&
_bö¨y_èrfs_°¨t
 + 
off£t
);

34 
	}
}

36 
	$öôülize_èrfs
()

38 
	`˛rs¸
();

39 
	`k¥ötf
("_bö¨y_èrfs_°¨àaddªs†i†%∞™d %x \n", &
_bö¨y_èrfs_°¨t
, &_binary_tarfs_start);

41 
uöt64_t
 
cou¡
 = 0;

42 
posix_hódî_u°¨
 *
u°¨t
;

45 
u°¨t
 = (
posix_hódî_u°¨
 *)(&
_bö¨y_èrfs_°¨t
 + 
cou¡
*512);

46 
cou¡
++;

48 
cou¡
 < 3)

51 if(
cou¡
 == 2)

53 
	`k¥ötf
("bö¨yÇamêi†%†\n",
u°¨t
->
«me
);

54 
	`k¥ötf
("bö¨y modêi†%†\n",
u°¨t
->
mode
);

55 
	`k¥ötf
("bö¨y uid i†%†\n",
u°¨t
->
uid
);

56 
	`k¥ötf
("bö¨y gid i†%†\n",
u°¨t
->
gid
);

58 
	`k¥ötf
("bö¨y sizêi†%d \n",
	`o˘Æ_to_decimÆ
(
	`©oi
(
u°¨t
->
size
)));

59 
	`k¥ötf
("bö¨y mtimêi†%†\n",
u°¨t
->
mtime
);

60 
	`k¥ötf
("bö¨y checksum i†%†\n",
u°¨t
->
checksum
);

61 
	`k¥ötf
("bö¨yÅy≥Êag i†%†\n",
u°¨t
->
ty≥Êag
);

62 
	`k¥ötf
("bö¨yÜök«mêi†%†\n",
u°¨t
->
lök«me
);

63 
	`k¥ötf
("bö¨y magi¯i†%†\n",
u°¨t
->
magic
);

64 
	`k¥ötf
("bö¨y vîsi⁄ i†%†\n",
u°¨t
->
vîsi⁄
);

65 
	`k¥ötf
("bö¨y u«mêi†%†\n",
u°¨t
->
u«me
);

66 
	`k¥ötf
("g«mêgid i†%†\n",
u°¨t
->
g«me
);

67 
	`k¥ötf
("bö¨y devmaj‹ i†%†\n",
u°¨t
->
devmaj‹
);

68 
	`k¥ötf
("bö¨y devmö‹ i†%†\n",
u°¨t
->
devmö‹
);

69 
	`k¥ötf
("bö¨yÖªfix i†%†\n",
u°¨t
->
¥efix
);

70 
	`k¥ötf
("bö¨yÖad i†%†\n",
u°¨t
->
∑d
);

73 
u°¨t
 = (
posix_hódî_u°¨
 *)(&
_bö¨y_èrfs_°¨t
 + 
cou¡
*512);

74 
cou¡
++;

78 
	}
}

	@sys/gdt.c

1 
	~<sys/gdt.h
>

2 
	~<sys/mmu/as£mblyutû.h
>

6 
	#MAX_GDT
 32

	)

8 
	#GDT_CS
 (0x00180000000000Ë

	)

9 
	#GDT_DS
 (0x00100000000000Ë

	)

11 
	#C
 (0x00040000000000Ë

	)

12 
	#DPL0
 (0x00000000000000Ë

	)

13 
	#DPL1
 (0x00200000000000Ë

	)

14 
	#DPL2
 (0x00400000000000Ë

	)

15 
	#DPL3
 (0x00600000000000Ë

	)

16 
	#P
 (0x00800000000000Ë

	)

17 
	#L
 (0x20000000000000Ë

	)

18 
	#D
 (0x40000000000000Ë

	)

19 
	#W
 (0x00020000000000Ë

	)

21 
	ssys_£gmít_des¸ùt‹
 {

22 
uöt64_t
 
	msd_lﬁimô
:16;

23 
uöt64_t
 
	msd_loba£
:24;

24 
uöt64_t
 
	msd_ty≥
:5;

25 
uöt64_t
 
	msd_d∂
:2;

26 
uöt64_t
 
	msd_p
:1;

27 
uöt64_t
 
	msd_hûimô
:4;

28 
uöt64_t
 
	msd_xx1
:3;

29 
uöt64_t
 
	msd_gøn
:1;

30 
uöt64_t
 
	msd_hiba£
:40;

31 
uöt64_t
 
	msd_xx2
:8;

32 
uöt64_t
 
	msd_zîo
:5;

33 
uöt64_t
 
	msd_xx3
:19;

34 }
__©åibuã__
((
∑cked
));

36 
uöt64_t
 
	ggdt
[
MAX_GDT
] = {

38 
GDT_CS
 | 
P
 | 
DPL0
 | 
L
,

39 
GDT_DS
 | 
P
 | 
W
 | 
DPL0
,

40 
GDT_CS
 | 
P
 | 
DPL3
 | 
L
,

41 
GDT_DS
 | 
P
 | 
W
 | 
DPL3
,

45 
	sgdå_t
 {

46 
uöt16_t
 
	msize
;

47 
uöt64_t
 
	maddr
;

48 }
__©åibuã__
((
∑cked
));

50 
gdå_t
 
	ggdå
 = {

51 (
gdt
),

52 (
uöt64_t
)
gdt
,

56 
_x86_64_asm_lgdt
(
gdå_t
* 
gdå
, 
uöt64_t
 
cs_idx
, uöt64_à
ds_idx
);

57 
_x86_64_asm_…ss
();

59 
	$ªlﬂd_gdt
() {

60 
	`_x86_64_asm_lgdt
(&
gdå
, 8, 16);

61 
	}
}

63 
	$£tup_tss
() {

64 
sys_£gmít_des¸ùt‹
* 
sd
 = (sys_£gmít_des¸ùt‹*)&
gdt
[5];

65 
sd
->
sd_lﬁimô
 = (
tss_t
)-1;

66 
sd
->
sd_loba£
 = ((
uöt64_t
)&
tss
);

67 
sd
->
sd_ty≥
 = 9;

68 
sd
->
sd_d∂
 = 0;

69 
sd
->
sd_p
 = 1;

70 
sd
->
sd_hûimô
 = 0;

71 
sd
->
sd_gøn
 = 0;

72 
sd
->
sd_hiba£
 = ((
uöt64_t
)&
tss
) >> 24;

74 
uöt64_t
 
r•
 = 
	`ªad_r•
();

75 
	`£t_tss_r•0
(
r•
);

76 
	`_x86_64_asm_…ss
();

77 
	}
}

79 
	$£t_tss_r•0
(
uöt64_t
 
r•
)

81 
tss
.
r•0
 = 
r•
;

82 
	}
}

	@sys/idt.c

1 
	~<sys/k°rög.h
>

2 
	~<sys/sbunix.h
>

3 
	~<sys/i›‹t.h
>

4 
	~<sys/idt.h
>

5 
	~<sys/mmu/as£mblyutû.h
>

11 
úq0
();

12 
úq1
();

13 
i§0
();

14 
i§14
();

15 
ã°divzîo
();

16 
∑ge_Áu…_h™dÀr
();

17 
ã°_∑ge_Áu…
();

18 
£t_úqs
();

19 
sysˇŒ_h™dÀr
();

21 
	sidt_íåy


23 
uöt16_t
 
	mba£_lo
;

24 
uöt16_t
 
	m£l
;

25 
uöt8_t
 
	mi°_ª£rved
;

26 
uöt8_t
 
	mÊags
;

27 
uöt16_t
 
	mba£_mid
;

28 
uöt32_t
 
	mba£_hi
;

29 
uöt32_t
 
	mª£rved
;

30 } 
__©åibuã__
((
∑cked
));

32 
idt_íåy
 
	gidt
[256];

34 
	sidt_±r
 {

35 
uöt16_t
 
	msize
;

36 
uöt64_t
 
	maddr
;

37 }
__©åibuã__
((
∑cked
));

39 
idt_±r
 
	gidå
 = {

40 (
idt
),

41 (
uöt64_t
)
idt
,

45 
_x86_64_asm_idt
(
idt_±r
 *
idå
);

47 
	$ªlﬂd_idt
() {

48 
	`_x86_64_asm_idt
(&
idå
);

49 
	}
}

52 
	$idt_£t_g©e
(
öt32_t
 
num
, 
uöt64_t
 
ba£
, 
uöt16_t
 
£l
, 
uöt8_t
 
Êags
)

55 
idt
[
num
].
ba£_lo
 = 
ba£
 & 0xffffUL;

56 
idt
[
num
].
£l
 = sel;

57 
idt
[
num
].
i°_ª£rved
 = 0x0;

58 
idt
[
num
].
Êags
 = flags;

60 
idt
[
num
].
ba£_mid
 = (
ba£
 >> 16) & 0xffffUL;

62 
idt
[
num
].
ba£_hi
 = (
ba£
 >> 32) & 0xffffffffUL;

63 
idt
[
num
].
ª£rved
 = 0x0;

64 
	}
}

66 
	$idt_ö°Æl
()

68 
	`mem£t
(&
idt
, 0, (
idt_íåy
) * 256);

70 
	`idt_£t_g©e
(0, (
uöt64_t
)
i§0
, 0x08, 0x8e);

71 
	`idt_£t_g©e
(14, (
uöt64_t
)
i§14
, 0x08, 0x8E);

73 
	`idt_£t_g©e
(32, (
uöt64_t
)
úq0
, 0x08, 0x8E);

74 
	`idt_£t_g©e
(0x80, (
uöt64_t
)
sysˇŒ_h™dÀr
, 0x08, 0xEE);

76 
	`idt_£t_g©e
(33, (
uöt64_t
)
úq1
, 0x08, 0x8E);

77 
	`ªlﬂd_idt
();

79 
	}
}

81 
	$sysˇŒ_h™dÀr
()

84 
uöt64_t
 
sysˇŒ_num
;

85 
	`__asm__
(

87 :"=g"(
sysˇŒ_num
)

89 
	`k¥ötf
("sy°em cÆ»nÿi†%d \n", 
sysˇŒ_num
);

90 
__asm__
 
	`__vﬁ©ûe__
("iretq;");

91 
	}
}

93 
	$ã°divzîo
()

95 
i
 = 50;

96 
j
 = 0;

97 
k
 = 
i
/
j
;

98 
	`k¥ötf
("%d \n", 
k
);

99 
	}
}

103 
	$ã°_∑ge_Áu…
()

106 *(
uöt64_t
 *)10= 50;

107 
	}
}

109 
	$divide_by_zîo_h™dÀr
()

111 
	`k¥ötf
("divide_by_zero_handlerÑeached.... \n");

112 
	`__asm__
( "hlt" );

113 
	}
}

114 
	$∑ge_Áu…_h™dÀr
()

116 
uöt64_t
 
addr
;

117 
addr
 = 
	`ªad_¸2
();

118 
	`˛rs¸
();

119 
	`k¥ötf
("page fault handlerÑeached.... \n");

120 
	`k¥ötf
("Áu… i†©áddªs†%∞\n",
addr
);

121 
	`__asm__
( "hlt" );

122 
	}
}

124 
	$Áu…_h™dÀr
()

126 
	`k¥ötf
("ashish \n");

138 
	}
}

	@sys/ioport.c

1 
	~<sys/i›‹t.h
>

5 
ölöe
 
	$ouç‹tb
(
uöt16_t
 
p‹t
, 
uöt8_t
 
d©a
)

7 
__asm
 
	`__vﬁ©ûe
("outb %0, %1;":

8 :"a" (
d©a
), "d" (
p‹t
));

9 
	}
}

11 
	$öp‹tb
(
_p‹t
)

13 
rv
;

14 
__asm__
 
	`__vﬁ©ûe__
 ("öb %1, %0" : "˜" (
rv
Ë: "dN" (
_p‹t
));

15  
rv
;

16 
	}
}

	@sys/irq.c

1 
	~<sys/úq.h
>

9 
úq_rou¡öe_h™dÀr
();

10 *
	gúq_routöes
[16] =

17 
úq_ö°Æl_h™dÀr
(
úq
, (*
h™dÀr
)())

19 
úq_routöes
[
úq
] = 
h™dÀr
;

20 
	}
}

23 
	$úq_unö°Æl_h™dÀr
(
úq
)

25 
úq_routöes
[
úq
] = 0;

26 
	}
}

28 
	$pic_ªm≠
()

30 
	`ouç‹tb
(0x20, 0x11);

31 
	`ouç‹tb
(0xA0, 0x11);

32 
	`ouç‹tb
(0x21, 0x20);

33 
	`ouç‹tb
(0xA1, 0x28);

34 
	`ouç‹tb
(0x21, 0x04);

35 
	`ouç‹tb
(0xA1, 0x02);

36 
	`ouç‹tb
(0x21, 0x01);

37 
	`ouç‹tb
(0xA1, 0x01);

39 
	`ouç‹tb
(0x21, 0x0);

40 
	`ouç‹tb
(0xA1, 0x0);

41 
	`k¥ötf
("pic_remap done... \n");

42 
	}
}

44 
	$ö°Æl_úqs
()

46 
	`pic_ªm≠
();

47 
	}
}

49 
	$¶ìpk
()

51 
i
 = 10000;

52 
i
 != -10000000)

54 
i
--;

56 
	}
}

58 
	$úq_rou¡öe_h™dÀr
(
uöt64_t
 *
r
)

63 (*
h™dÀr
)();

64 
h™dÀr
 = 
úq_routöes
[0];

65 
	`h™dÀr
();

70 
	`ouç‹tb
(0x20,0x20);

74 
	}
}

	@sys/kb.c

5 
	~<sys/kb.h
>

7 
kb_ö°Æl
();

8 
kb_h™dÀr
();

9 
h™dÀkey
(
sˇncode
);

11 
c⁄åﬁ
 
	gcuª¡C⁄åﬁ
 = 
NORMAL_KEY
;

18 
	gkbdus
[128] =

60 
	gshi·codes
[128] =

100 
	$kb_ö°Æl
()

102 
	`úq_ö°Æl_h™dÀr
(1, 
kb_h™dÀr
);

103 
	}
}

105 
	gshi·¥es£d
 = 0;

107 
	$kb_h™dÀr
()

109 
sˇncode
;

111 
sˇncode
 = 
	`öp‹tb
(0x60);

112 i‡(
sˇncode
 & 0x80)

119 
sˇncode
)

122 
cuª¡C⁄åﬁ
 = 
SHIFT_KEY
;

125 
cuª¡C⁄åﬁ
 = 
ALT_KEY
;

128 
cuª¡C⁄åﬁ
 = 
CONTROL_KEY
;

131 
	`h™dÀkey
(
sˇncode
);

135 
	`ouç‹tb
(0x20,0x20);

136 
	}
}

138 
	$h™dÀkey
(
sˇncode
)

140 
cuª¡C⁄åﬁ
)

142 
SHIFT_KEY
:

143 
	`k¥ötf
("%c", 
shi·codes
[
sˇncode
]);

144 
	`k¥öèt
(73,24, "glyph:%c", 
shi·codes
[
sˇncode
]);

147 
	`k¥ötf
("%c", 
kbdus
[
sˇncode
]);

148 
	`k¥öèt
(73,24, "glyph:%c", 
kbdus
[
sˇncode
]);

151 
cuª¡C⁄åﬁ
 = 
NORMAL_KEY
;

152 
	}
}

	@sys/kprintf.c

3 
	~<sys/sbunix.h
>

4 
	~<sys/vgac⁄sﬁe.h
>

5 
	~<°d¨g.h
>

6 
	~<sys/defs.h
>

7 
	~<sys/k°rög.h
>

9 
k¥ötf
(c⁄° *
fmt
, ...);

11 
	#ZEROPAD
 1

	)

12 
	#SIGN
 2

	)

13 
	#PLUS
 4

	)

14 
	#SPACE
 8

	)

15 
	#LEFT
 16

	)

16 
	#SMALL
 32

	)

17 
	#SPECIAL
 64

	)

19 
kv•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

21 
	$isdigô
(
ch
)

23  (
ch
 >= '0') && (ch <= '9');

24 
	}
}

26 
	#__do_div
(
n
, 
ba£
) ({ \

27 
__ªs
; \

28 
__ªs
 = ((Ë
n
Ë% (Ë
ba£
; \

29 
n
 = ((ËnË/ (Ë
ba£
; \

30 
__ªs
; })

	)

33 
	$skù_©oi
(c⁄° **
s
)

35 
i
 = 0;

37 
	`isdigô
(**
s
))

38 
i
 = i * 10 + *((*
s
)++) - '0';

39  
i
;

40 
	}
}

42 *
	$numbî
(*
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
,

43 
ty≥
)

46 c⁄° 
digôs
[16] = "0123456789ABCDEF";

48 
tmp
[66];

49 
c
, 
sign
, 
loˇ£
;

50 
i
;

54 
loˇ£
 = (
ty≥
 & 
SMALL
);

55 i‡(
ty≥
 & 
LEFT
)

56 
ty≥
 &~
ZEROPAD
;

57 i‡(
ba£
 < 2 || base > 16)

58  
NULL
;

59 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ';

60 
sign
 = 0;

61 i‡(
ty≥
 & 
SIGN
) {

62 i‡(
num
 < 0) {

63 
sign
 = '-';

64 
num
 = -num;

65 
size
--;

66 } i‡(
ty≥
 & 
PLUS
) {

67 
sign
 = '+';

68 
size
--;

69 } i‡(
ty≥
 & 
SPACE
) {

70 
sign
 = ' ';

71 
size
--;

74 i‡(
ty≥
 & 
SPECIAL
) {

75 i‡(
ba£
 == 16)

76 
size
 -= 2;

77 i‡(
ba£
 == 8)

78 
size
--;

80 
i
 = 0;

81 i‡(
num
 == 0)

82 
tmp
[
i
++] = '0';

84 
num
 != 0)

85 
tmp
[
i
++] = (
digôs
[
	`__do_div
(
num
, 
ba£
)] | 
loˇ£
);

86 i‡(
i
 > 
¥ecisi⁄
)

87 
¥ecisi⁄
 = 
i
;

88 
size
 -
¥ecisi⁄
;

89 i‡(!(
ty≥
 & (
ZEROPAD
 + 
LEFT
)))

90 
size
-- > 0)

91 *
°r
++ = ' ';

92 i‡(
sign
)

93 *
°r
++ = 
sign
;

94 i‡(
ty≥
 & 
SPECIAL
) {

95 i‡(
ba£
 == 8)

96 *
°r
++ = '0';

97 i‡(
ba£
 == 16) {

98 *
°r
++ = '0';

99 *
°r
++ = ('X' | 
loˇ£
);

102 i‡(!(
ty≥
 & 
LEFT
))

103 
size
-- > 0)

104 *
°r
++ = 
c
;

105 
i
 < 
¥ecisi⁄
--)

106 *
°r
++ = '0';

107 
i
-- > 0)

108 *
°r
++ = 
tmp
[
i
];

109 
size
-- > 0)

110 *
°r
++ = ' ';

111  
°r
;

112 
	}
}

114 
	g¥ötf_buf
[1024];

116 
	$k¥ötf
(c⁄° *
fmt
, ...)

118 
va_li°
 
vÆ
;

119 
	`va_°¨t
(
vÆ
, 
fmt
);

120 
	`kv•rötf
(
¥ötf_buf
, 
fmt
, 
vÆ
);

121 
	`va_íd
(
vÆ
);

122 
	`puts
(
¥ötf_buf
);

124 
	}
}

126 
	$k¥öèt
(
x
, 
y
, c⁄° *
fmt
, ...)

128 
va_li°
 
vÆ
;

129 
	`va_°¨t
(
vÆ
, 
fmt
);

130 
	`kv•rötf
(
¥ötf_buf
, 
fmt
, 
vÆ
);

131 
	`va_íd
(
vÆ
);

132 
	`puâimî
(
x
, 
y
, 
¥ötf_buf
);

135 
	}
}

137 
	$˛rs¸
()

139 
	`˛órs¸ìn
();

140 
	}
}

142 
	$kv•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

144 
Àn
;

145 
num
;

146 
i
, 
ba£
;

147 *
°r
;

148 c⁄° *
s
;

150 
Êags
;

152 
fõld_width
;

153 
¥ecisi⁄
;

155 
quÆifõr
;

157 
°r
 = 
buf
; *
fmt
; ++fmt) {

158 i‡(*
fmt
 != '%') {

159 *
°r
++ = *
fmt
;

164 
Êags
 = 0;

165 
ª≥©
:

166 ++
fmt
;

167 *
fmt
) {

169 
Êags
 |
LEFT
;

170 
ª≥©
;

172 
Êags
 |
PLUS
;

173 
ª≥©
;

175 
Êags
 |
SPACE
;

176 
ª≥©
;

178 
Êags
 |
SPECIAL
;

179 
ª≥©
;

181 
Êags
 |
ZEROPAD
;

182 
ª≥©
;

186 
fõld_width
 = -1;

187 i‡(
	`isdigô
(*
fmt
))

188 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

189 i‡(*
fmt
 == '*') {

190 ++
fmt
;

192 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

193 i‡(
fõld_width
 < 0) {

194 
fõld_width
 = -field_width;

195 
Êags
 |
LEFT
;

200 
¥ecisi⁄
 = -1;

201 i‡(*
fmt
 == '.') {

202 ++
fmt
;

203 i‡(
	`isdigô
(*
fmt
))

204 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

205 i‡(*
fmt
 == '*') {

206 ++
fmt
;

208 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

210 i‡(
¥ecisi⁄
 < 0)

211 
¥ecisi⁄
 = 0;

215 
quÆifõr
 = -1;

216 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L') {

217 
quÆifõr
 = *
fmt
;

218 ++
fmt
;

222 
ba£
 = 10;

224 *
fmt
) {

226 i‡(!(
Êags
 & 
LEFT
))

227 --
fõld_width
 > 0)

228 *
°r
++ = ' ';

229 *
°r
++ = ()
	`va_¨g
(
¨gs
, );

230 --
fõld_width
 > 0)

231 *
°r
++ = ' ';

235 
s
 = 
	`va_¨g
(
¨gs
, *);

237 
Àn
 = 
	`°æí
(
s
);

238 i‡(!(
Êags
 & 
LEFT
))

239 
Àn
 < 
fõld_width
--)

240 *
°r
++ = ' ';

241 
i
 = 0; i < 
Àn
; ++i)

242 *
°r
++ = *
s
++;

243 
Àn
 < 
fõld_width
--)

244 *
°r
++ = ' ';

248 i‡(
fõld_width
 == -1) {

249 
fõld_width
 = 2 * (*);

250 
Êags
 |
ZEROPAD
;

252 
°r
 = 
	`numbî
(str,

253 ()
	`va_¨g
(
¨gs
, *), 16,

254 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

258 i‡(
quÆifõr
 == 'l') {

259 *
ù
 = 
	`va_¨g
(
¨gs
, *);

260 *
ù
 = (
°r
 - 
buf
);

262 *
ù
 = 
	`va_¨g
(
¨gs
, *);

263 *
ù
 = (
°r
 - 
buf
);

268 *
°r
++ = '%';

273 
ba£
 = 8;

277 
Êags
 |
SMALL
;

279 
ba£
 = 16;

284 
Êags
 |
SIGN
;

289 *
°r
++ = '%';

290 i‡(*
fmt
)

291 *
°r
++ = *
fmt
;

293 --
fmt
;

296 i‡(
quÆifõr
 == 'l')

297 
num
 = 
	`va_¨g
(
¨gs
, );

298 i‡(
quÆifõr
 == 'h') {

299 
num
 = ()
	`va_¨g
(
¨gs
, );

300 i‡(
Êags
 & 
SIGN
)

301 
num
 = ()num;

302 } i‡(
Êags
 & 
SIGN
)

303 
num
 = 
	`va_¨g
(
¨gs
, );

305 
num
 = 
	`va_¨g
(
¨gs
, );

306 
°r
 = 
	`numbî
(°r, 
num
, 
ba£
, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

308 *
°r
 = '\0';

309  
°r
 - 
buf
;

310 
	}
}

	@sys/kstring.c

1 
	~<sys/k°rög.h
>

3 *(
	gmem˝y
)(* 
	gs1
, c⁄° * 
	gs2
, 
size_t
 
	gn
)

5 *
	gd°
 = 
s1
;

6 c⁄° *
	g§c
 = 
s2
;

8 
	gn
-- != 0)

9 *
d°
++ = *
§c
++;

10  
	gs1
;

14 *
	$mem˝y
(*
de°ö©i⁄
, *
sour˚
, 
uöt64_t
 
num
)

16 
uöt8_t
 *
de°
 = (uöt8_à*)
de°ö©i⁄
;

17 
uöt8_t
 *
§c
 = (uöt8_à*)
sour˚
;

18 
num
--) {

19 *
de°
++ = *
§c
++;

21  
de°ö©i⁄
;

22 
	}
}

24 
size_t
 
	$°æí
(c⁄° * 
°r
)

26 c⁄° *
s
;

27 
s
 = 
°r
; *s; ++s);

28 (
s
 - 
°r
);

29 
	}
}

31 *
	$k°r˝y
(*
de°
, c⁄° *
§c
)

33 *
tmp
 = 
de°
;

34 (*
de°
++ = *
§c
++) != '\0');

35  
tmp
;

36 
	}
}

38 
uöt64_t
 
	$powî
(
uöt64_t
 
x
, uöt64_à
y
)

40 if–
y
 == 0)

42 i‡(
y
%2 == 0)

43  
	`powî
(
x
, 
y
/2)*power(x, y/2);

45  
x
*
	`powî
(x, 
y
/2)*power(x, y/2);

47 
	}
}

50 c⁄° *
	$byã_to_bö¨y
(
uöt64_t
 
x
)

52 
b
[65];

53 
b
[0] = '\0';

55 
uöt64_t
 
z
;

56 
z
 = 
	`powî
(2,63); z > 0; z >>= 1)

58 
	`°rˇt
(
b
, ((
x
 & 
z
) == z) ? "1" : "0");

61  
b
;

62 
	}
}

64 *
	$mem£tw
(*
s1
, 
vÆ
, 
uöt64_t
 
cou¡
)

66 
i
;

67 *
de°
 = 
s1
;

68 
i
 = 0; i < 
cou¡
; i++)

70 *
de°
 = 
vÆ
;

71 
de°
++;

73  
de°
;

74 
	}
}

76 *
	$°rˇt
(*
de°
, c⁄° *
§c
)

78 *
tmp
 = 
de°
;

79 *
de°
)

80 
de°
++;

81 (*
de°
++ = *
§c
++) != '\0')

83  
tmp
;

84 
	}
}

86 *
	$mem£t
(*
°r
, 
c
, 
size_t
 
n
)

88 *
d°
 = 
°r
;

89 
n
-- != 0)

91 *
d°
++ = 
c
;

93  
°r
;

94 
	}
}

96 
	$©oi
(c⁄° *
°r
)

98 
k
 = 0;

99 
i
 = 0; 
°r
[i] != '\0'; ++i)

100 
k
 = (k<<3)+(k<<1)+(
°r
[
i
])-'0';

101  
k
;

102 
	}
}

104 
uöt64_t
 
	$o˘Æ_to_decimÆ
(
o˘
)

106 
uöt64_t
 
ªs
 = 0;

107 
i
 = 0;

108 
o˘
!=0){

109 
digô
 = 
o˘
%10;

110 
o˘
 = oct/10;

111 
ªs
 =Ñe†+ 
digô
*
	`powî
(8, 
i
);

112 
i
++;

114  
ªs
;

115 
	}
}

117 
	$k°rcmp
(c⁄° *
cs
, c⁄° *
˘
)

119 
c1
, 
c2
;

121 
c1
 = *
cs
++;

122 
c2
 = *
˘
++;

123 i‡(
c1
 !
c2
)

124  
c1
 < 
c2
 ? -1 : 1;

125 i‡(!
c1
)

129 
	}
}

	@sys/main.c

1 
	~<sys/sbunix.h
>

2 
	~<sys/gdt.h
>

3 
	~<sys/èrfs.h
>

4 
	~<sys/idt.h
>

5 
	~<sys/úq.h
>

6 
	~<sys/timî.h
>

7 
	~<sys/kb.h
>

8 
	~<sys/mmu/phy_Æloc.h
>

9 
	~<sys/mmu/±.h
>

10 
	~<sys/¥o˚ss/ñf.h
>

11 
	~<sys/mmu/kmÆloc.h
>

12 
	~<sys/¥o˚ss/¥o˚ss_m™agî.h
>

15 
waô
();

17 
	$°¨t
(
uöt32_t
* 
moduÀp
, * 
physba£
, * 
phys‰ì
)

19 
uöt64_t
 
ba£
 = 0;

20 
uöt64_t
 
Àngth
 = 0;

21 
uöt64_t
 
ty≥
 = 0;

22 
	ssm≠_t
 {

23 
uöt64_t
 
ba£
, 
Àngth
;

24 
uöt32_t
 
ty≥
;

25 }
	`__©åibuã__
((
∑cked
)Ë*
sm≠
;

27 
moduÀp
[0] != 0x9001) modulep += modulep[1]+2;

28 
sm≠
 = (
sm≠_t
*)(
moduÀp
+2); smap < (smap_t*)((*)modulep+modulep[1]+2*4); ++smap) {

29 i‡(
sm≠
->
ty≥
 =1 && sm≠->
Àngth
 != 0) {

30 
ba£
 = 
sm≠
->base;

31 
Àngth
 = 
sm≠
->length;

32 
ty≥
 = 
sm≠
->type;

33 
	`k¥ötf
("AvaûabÀ Physiˇ»Mem‹y [%x-%x]\n", 
sm≠
->
ba£
, sm≠->ba£ + sm≠->
Àngth
);

37 
	`k¥ötf
("physba£ándÖhys‰ì [%x-%x]\n", 
physba£
, 
phys‰ì
);

39 
	`k¥ötf
("sm≠ba£ánd sm≠Üígth [%x-%x] %Åy≥ %d \n", 
ba£
, 
Àngth
, 
ty≥
);

42 
	`mm_phy_öô
((
uöt64_t
)
phys‰ì
, 
Àngth
, 
ty≥
);

43 
	`£tup_∑gög
((
uöt64_t
)
phys‰ì
, (uöt64_tÌhys‰ì,(uöt64_tË
physba£
, (uint64_t)physfree);

47 
	`ªadElf
("bin/hello");

56 
	`scheduÀ_¥o˚ss
();

59 
	}
}

61 
	#INITIAL_STACK_SIZE
 4096

	)

62 
	g°ack
[
INITIAL_STACK_SIZE
];

63 
uöt32_t
* 
	glﬂdî_°ack
;

64 
kînmem
, 
physba£
;

65 
tss_t
 
	gtss
;

67 
	$boŸ
()

72 
	`__asm__
(

75 :"=g"(
lﬂdî_°ack
)

76 :"r"(&
°ack
[
INITIAL_STACK_SIZE
])

78 
	`ªlﬂd_gdt
();

79 
	`£tup_tss
();

80 
	`idt_ö°Æl
();

81 
	`ö°Æl_úqs
();

82 
	`timî_ö°Æl
();

83 
	`kb_ö°Æl
();

84 
	`__asm__
("sti");

86 
	`°¨t
(

87 (
uöt32_t
*)((*)(
uöt64_t
)
lﬂdî_°ack
[3] + (uöt64_t)&
kînmem
 - (uöt64_t)&
physba£
),

88 &
physba£
,

89 (*)(
uöt64_t
)
lﬂdî_°ack
[4]

96 
	}
}

98 
	$waô
()

100 
uöt64_t
 
j1
 = 1000000;

101 
j1
>0)

103 
uöt64_t
 
k1
 = 1000;

104 
k1
 > 0)

105 
k1
--;

106 
j1
--;

108 
uöt64_t
 
j
 = 1000000;

109 
j
>0)

111 
uöt64_t
 
k
 = 1000;

112 
k
 > 0)

113 
k
--;

114 
j
--;

116 
	}
}

	@sys/mmu/assemblyutil.c

1 
	~<sys/mmu/as£mblyutû.h
>

2 
	~<sys/sbunix.h
>

3 
uöt64_t
 
	$ªad_¸0
()

5 
uöt64_t
 
¸0
;

6 
	`__asm__
(

9 :"=g"(
¸0
)

11  
¸0
;

12 
	}
}

13 
	$wrôe_¸0
(
uöt64_t
 
¸0
)

15 
	`__asm__
(

19 :"g"(
¸0
));

20 
	}
}

21 
uöt64_t
 
	$ªad_¸3
()

23 
uöt64_t
 
¸3
;

24 
	`__asm__
(

27 :"=g"(
¸3
)

29  
¸3
;

30 
	}
}

32 
uöt64_t
 
	$ªad_¸2
()

34 
uöt64_t
 
¸2
;

35 
	`__asm__
(

38 :"=g"(
¸2
)

40  
¸2
;

41 
	}
}

43 
	$wrôe_¸3
(
uöt64_t
 
¸3
)

45 
	`__asm__
(

49 :"g"(
¸3
));

50 
	}
}

52 
	$wrôe_r•
(
uöt64_t
 
r•
)

54 
__asm__
 
	`__vﬁ©ûe__
("movq %[√xt_r•], %%r•" : : [
√xt_r•
] "m" (
r•
));

60 
	}
}

62 
uöt64_t
 
	$ªad_r•
()

64 
uöt64_t
 
r•
;

65 
	`__asm__
(

68 :"=g"(
r•
)

70  
r•
;

71 
	}
}

75 
	$swôch_to_u£rmode
(
uöt64_t
 
u°ack
, uöt64_à
bö¨y_íåy
)

79 
__asm__
 
	`__vﬁ©ûe__
(

93 :"g"(
u°ack
), "g"(
bö¨y_íåy
)

108 
	}
}

	@sys/mmu/kmalloc.c

1 
	~<sys/mmu/kmÆloc.h
>

3 
	$öô_kmÆloc
()

5 
	}
}

7 *
	$kmÆloc
(
uöt64_t
 
size
)

9 *
addr
;

10 
uöt64_t
 
num_∑ges
 = 
size
/
PAGE_SIZE
;

11 if(
size
%
PAGE_SIZE
 > 0)

12 
num_∑ges
 =Çum_pages + 1;

13 
addr
 = (*)
	`Æloc_∑ges
(
num_∑ges
, 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
);

14 
	`k¥ötf
("add∏i†%∞\n", (
uöt64_t
)
addr
);

15  
addr
;

16 
	}
}

17 
	$ã°_mÆloc
()

23 *
addr
= (*)0xFFFF800000000000;

24 
	`Æloc_∑ges_©_vút
((
uöt64_t
)
addr
, 4096,
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
);

25 
addr
 = "shashi";

26 
	`k¥ötf
("maö1 %p\t%s", 
addr
,áddr);

27 
	}
}

	@sys/mmu/phy_alloc.c

4 
	~<sys/mmu/phy_Æloc.h
>

5 
	~<sys/sbunix.h
>

7 
	#ALIGN_UP
(
x
Ë(((xË& (
PAGE_TABLE_ALIGNLENT
-1)Ë? 
	`ALIGN_DOWN
(x+PAGE_TABLE_ALIGNLENTË: (x))

	)

8 
	#ALIGN_DOWN
(
x
Ë((xË>> 12 << 12)

	)

10 
uöt64_t
 
	gphy_bôm≠
[(
PAGE_MAX
/64) +1];

11 
£t_∑ge_‰ì
(
uöt64_t
 
∑ge
);

12 
£t_∑ge_u£d
(
uöt64_t
 
∑ge
);

13 
íabÀ_∑gög
();

15 
uöt64_t
 *
	g∑ge_dúe˘‹y
;

16 
uöt64_t
 *
	g∑ge_èbÀ
;

18 
	#PAGES_PER_GROUP
 (( 
phy_bôm≠
[0]Ë* 8)

	)

20 
	$mm_phy_öô
(
uöt64_t
 
ba£
, uöt64_à
Àngth
, uöt64_à
ty≥
)

23 
	`mem£t
(
phy_bôm≠
, 0xff, (phy_bitmap));

25 
uöt64_t
 
°¨t
 = 
	`ALIGN_DOWN
(
ba£
) ;

27 
uöt64_t
 
íd
 = 
	`ALIGN_UP
(
ba£
+
Àngth
) ;

29 
uöt64_t
 
i
 = 
°¨t
; i < 
íd
; i = i+
PAGE_SIZE
)

31 
	`£t_∑ge_‰ì
(
	`mm_phy_to_∑ge
(
i
));

34 
uöt64_t
 
lowmem
=0;Üowmem < 0x100000;Üowmem +
PAGE_SIZE
)

35 
	`£t_∑ge_u£d
–
	`mm_phy_to_∑ge
(
lowmem
) );

36 
phy_bôm≠
[0] |= 1;

39 
	}
}

41 
	$£t_∑ge_‰ì
(
uöt64_t
 
∑ge
) {

47 
uöt64_t
 
i
 = 1;

48 if(
∑ge
)

50 
phy_bôm≠
[
∑ge
/64] &~(
i
 << (page % 64));

62 
	}
}

63 
	gcou¡
 = 0;

64 
	$£t_∑ge_u£d
(
uöt64_t
 
∑ge
) {

66 if(
∑ge
)

68 
cou¡
 = count + 1;

70 
phy_bôm≠
[
∑ge
/64] |= (1 << (page % 64));

72 
	}
}

77 
	$mm_phy_‰ì_∑ge
(
uöt64_t
 
∑ge
) {

79 if(!
∑ge
)

81 
	`£t_∑ge_‰ì
(
∑ge
);

82 
	}
}

88 
uöt64_t
 
	$mm_phy_Æloc_∑ge
() {

90 
uöt64_t
 
g
=0; g<  
phy_bôm≠
 / Öhy_bitmap[0]; ++g) {

91 
uöt64_t
 
_g
 = 
phy_bôm≠
[
g
];

92 if(
_g
 != 0xffffffffffffffff)

93 
uöt8_t
 
p
 = 0;Ö< 
PAGES_PER_GROUP
; ++p)

96 if((
_g
 & (1 << 
p
)) == 0) {

98 
phy_bôm≠
[
g
] |(1 << 
p
);

100 if(((
g
 * 
PAGES_PER_GROUP
Ë+ 
p
) == 0)

101 
	`k¥ötf
("ERR: ALLOCATING PAGE ZERO!!!\n");

103  (
g
 * 
PAGES_PER_GROUP
Ë+ 
p
;

107 
	`k¥ötf
("pageÇotállocated \n");

109 
	}
}

	@sys/mmu/pt.c

1 
	~<sys/mmu/±.h
>

3 
uöt64_t
 
	gk_¸3
 = 0;

4 
uöt64_t
* 
gë_phy_∑ge_èbÀ
(uöt64_à*
¸3
);

6 
	#isPª£¡
(
x
Ë((xË& 
PT_PRESENT_FLAG
)

	)

7 
	#PTE_SELF_REF
 0xFFFFFF0000000000UL

	)

8 
	#PDE_SELF_REF
 0xFFFFFF7F80000000UL

	)

9 
	#PDPE_SELF_REF
 0xFFFFFF7FBFC00000UL

	)

11 
	#PML4_SELF_REF
 0xFFFFFF7FBFDFE000UL

	)

15 
uöt64_t
 
	$vút_to_phy
(
uöt64_t
 
vút
, uöt64_à
pml4e
)

17 
uöt64_t
 
_pml4e_off£t
 = (0x1f‡& (
vút
 >> 39));

18 
uöt64_t
 
_pd≥_off£t
 = (0x1f‡& (
vút
 >> 30));

19 
uöt64_t
 
_pde_off£t
 = (0x1f‡& (
vút
 >> 21));

20 
uöt64_t
 
_±e_off£t
 = (0x1f‡& (
vút
 >> 12));

22 
uöt64_t
 *
kpml4e
 = (uöt64_à*)
	`KADDR
(
k_¸3
);

23 if(!
	`isPª£¡
(
kpml4e
[
_pml4e_off£t
]))

29 
uöt64_t
 *
pd≥èbÀ
 = (uöt64_à*)
	`KADDR
(
	`ALIGN_DOWN
(
kpml4e
[
_pml4e_off£t
]));

31 if(!
	`isPª£¡
(
pd≥èbÀ
[
_pd≥_off£t
]))

37 
uöt64_t
 *
pdëabÀ
 = (uöt64_à*)
	`KADDR
(
	`ALIGN_DOWN
(
pd≥èbÀ
[
_pd≥_off£t
]));

38 if(!
	`isPª£¡
(
pdëabÀ
[
_pde_off£t
]))

42 
uöt64_t
 *
±èbÀ
 = (uöt64_à*)
	`KADDR
(
	`ALIGN_DOWN
(
pdëabÀ
[
_pde_off£t
]));

43 if(!
	`isPª£¡
(
±èbÀ
[
_±e_off£t
]))

47 
	`k¥ötf
("physiˇ»addªs†i†%∞\n", 
	`ALIGN_DOWN
(
±èbÀ
[
_±e_off£t
]));

48  
	`ALIGN_DOWN
(
±èbÀ
[
_±e_off£t
]);

49 
	}
}

51 
uöt64_t
 
	$gëCR3
()

53  
k_¸3
;

54 
	}
}

57 
uöt64_t
 
	$vút_to_pde
(
uöt64_t
 
vút
) {

59 
uöt64_t
 
¸3
;

60 
¸3
 = 
	`gëCR3
();

62 
uöt64_t
 *
_pml4e
 = 0x0000;

63 
uöt64_t
 *
_pd≥
 = 0x0000;

64 
uöt64_t
 *
_pde
 = 0x0000;

66 
_pml4e
 = (
uöt64_t
 *)
¸3
;

67 
_pml4e
 +(0x1f‡& (
vút
 >> 39));

68 
_pml4e
 = 
	`PHY_TO_VIRT
(_pml4e, 
uöt64_t
*);

70 if(!(*
_pml4e
 & 
PT_PRESENT_FLAG
)) {

74 
_pd≥
 = (
uöt64_t
*)
	`ALIGN_DOWN
(*
_pml4e
);

75 
_pd≥
 +(0x1f‡& (
vút
 >> 30));

76 
_pd≥
 = 
	`PHY_TO_VIRT
(_pd≥, 
uöt64_t
*);

78 if(!(*
_pd≥
 & 
PT_PRESENT_FLAG
)) {

82 
_pde
 = (
uöt64_t
*)
	`ALIGN_DOWN
(*
_pd≥
);

83 
_pde
 +(0x1f‡& (
vút
 >> 21));

84 
_pde
 = 
	`PHY_TO_VIRT
(_pde, 
uöt64_t
*);

85  *
_pde
;

86 
	}
}

88 
uöt64_t
 
	$KADDR
(
uöt64_t
 
∑ddr
)

90  
∑ddr
 + 
VIRT_KERNEL_BASE
;

91 
	}
}

93 
uöt64_t
 
	$PADDR
(
uöt64_t
 
vddr
)

95  
vddr
 - 
VIRT_KERNEL_BASE
;

96 
	}
}

99 
	$m≠_vút_to_phy
(
uöt64_t
 
vút
, uöt64_à
phy
, uöt64_à
Êags
)

101 
uöt64_t
 
_pml4e_off£t
 = 0x0000;

102 
uöt64_t
 
_pd≥_off£t
 = 0x0000;

103 
uöt64_t
 
_pde_off£t
 = 0x0000;

104 
uöt64_t
 
_±e_off£t
 = 0x0000;

106 
_pml4e_off£t
 = (0x1f‡& (
vút
 >> 39));

107 
_pd≥_off£t
 = (0x1f‡& (
vút
 >> 30));

108 
_pde_off£t
 = (0x1f‡& (
vút
 >> 21));

109 
_±e_off£t
 = (0x1f‡& (
vút
 >> 12));

110 
uöt64_t
 
¸3
 = 
	`ªad_¸3
();

111 
uöt64_t
 *
kpml4e
 = (uöt64_à*)
	`KADDR
(
¸3
);

118 if(!
	`isPª£¡
(
kpml4e
[
_pml4e_off£t
]))

120 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

121 
kpml4e
[
_pml4e_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
Êags
;

135 
uöt64_t
 *
pd≥èbÀ
 = (uöt64_à*)
	`KADDR
(
	`ALIGN_DOWN
(
kpml4e
[
_pml4e_off£t
]));

138 if(!
	`isPª£¡
(
pd≥èbÀ
[
_pd≥_off£t
]))

140 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

141 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

142 
pd≥èbÀ
[
_pd≥_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
Êags
;

152 
uöt64_t
 *
pdëabÀ
 = (uöt64_à*)
	`KADDR
(
	`ALIGN_DOWN
(
pd≥èbÀ
[
_pd≥_off£t
]));

155 if(!
	`isPª£¡
(
pdëabÀ
[
_pde_off£t
]))

157 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

158 
pdëabÀ
[
_pde_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
Êags
;

168 
uöt64_t
 *
±èbÀ
 = (uöt64_à*)
	`KADDR
(
	`ALIGN_DOWN
(
pdëabÀ
[
_pde_off£t
]));

171 
	`k¥ötf
("physiˇ»addªs†i†%∞%∞\n", 
phy
, 
Êags
);

172 
±èbÀ
[
_±e_off£t
] = 
phy
 | 
Êags
;

173 
	}
}

175 
uöt64_t
 
	$kînmem_m≠pög
(
uöt64_t
 
vút
, uöt64_à
pba£
, uöt64_à
nooÂages
, uöt64_à
pml4e
) {

176 
uöt64_t
 
_pml4e_off£t
 = 0x0000;

177 
uöt64_t
 
_pd≥_off£t
 = 0x0000;

178 
uöt64_t
 
_pde_off£t
 = 0x0000;

179 
uöt64_t
 
_±e_off£t
 = 0x0000;

181 
_pml4e_off£t
 = (0x1f‡& (
vút
 >> 39));

182 
_pd≥_off£t
 = (0x1f‡& (
vút
 >> 30));

183 
_pde_off£t
 = (0x1f‡& (
vút
 >> 21));

184 
_±e_off£t
 = (0x1f‡& (
vút
 >> 12));

189 
uöt64_t
 *
kpml4e
 = (uöt64_à*)
	`PHY_TO_VIRT
(
pml4e
, uint64_t *);

192 if(!
	`isPª£¡
(
kpml4e
[
_pml4e_off£t
]))

194 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

195 
kpml4e
[
_pml4e_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

211 
uöt64_t
 *
pd≥èbÀ
 = (uöt64_à*)
	`PHY_TO_VIRT
(
	`ALIGN_DOWN
(
kpml4e
[
_pml4e_off£t
]), uint64_t *);

212 
pd≥èbÀ
[510] = 
kpml4e
[
_pml4e_off£t
] | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

213 if(!
	`isPª£¡
(
pd≥èbÀ
[
_pd≥_off£t
]))

215 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

216 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

217 
pd≥èbÀ
[
_pd≥_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

228 
uöt64_t
 *
pdëabÀ
 = (uöt64_à*)
	`PHY_TO_VIRT
(
	`ALIGN_DOWN
(
pd≥èbÀ
[
_pd≥_off£t
]), uint64_t *);

229 
pdëabÀ
[510] = 
pd≥èbÀ
[
_pd≥_off£t
] | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

230 if(!
	`isPª£¡
(
pdëabÀ
[
_pde_off£t
]))

232 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

233 
pdëabÀ
[
_pde_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

244 
uöt64_t
 *
±èbÀ
 = (uöt64_à*)
	`PHY_TO_VIRT
(
	`ALIGN_DOWN
(
pdëabÀ
[
_pde_off£t
]), uint64_t *);

245 
±èbÀ
[510] = 
pdëabÀ
[
_pde_off£t
] | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

249 
uöt64_t
 
°¨t
 = 
	`ALIGN_DOWN
(
pba£
);

250 if(
_±e_off£t
+
nooÂages
 < 512)

252 
uöt64_t
 
i
 = 0; i < 
nooÂages
; i++)

254 
±èbÀ
[
_±e_off£t
++] = 
°¨t
 | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

255 
°¨t
 = sèπ + 
PAGE_SIZE
;

261 
uöt64_t
 
ªmaöög
 =
_±e_off£t
 - 512 + 
nooÂages
;

262 
uöt64_t
 
i
 = 
_±e_off£t
; i < 512; i++)

264 
±èbÀ
[
i
] = 
°¨t
 | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

265 
°¨t
 = sèπ + 
PAGE_SIZE
;

268 
uöt64_t
 
num
 = 
ªmaöög
/512;

269 
	`k¥ötf
("num i†%dÑemaöig i†%d \n", 
num
, 
ªmaöög
);

270 
ªmaöög
 =Ñemaining % 512;

271 
uöt64_t
 
i
 = 0; i < 
num
; i++)

273 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

274 
_pde_off£t
 = _pde_offset + 1;

275 
pdëabÀ
[
_pde_off£t
] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

276 
±èbÀ
 = (
uöt64_t
 *)
	`PHY_TO_VIRT
(
	`ALIGN_DOWN
(
pdëabÀ
[
_pde_off£t
]), uint64_t *);

277 
uöt64_t
 
i
 = 0; i < 512; i++)

279 
±èbÀ
[
i
] = 
°¨t
 | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

280 
°¨t
 = sèπ + 
PAGE_SIZE
;

285 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

286 
pdëabÀ
[
_pde_off£t
 + 1] = 
	`mm_∑ge_to_phy
(
phy_∑ge
Ë| 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

287 
±èbÀ
 = (
uöt64_t
 *)
	`PHY_TO_VIRT
(
	`ALIGN_DOWN
(
pdëabÀ
[
_pde_off£t
 + 1]), uint64_t *);

288 
uöt64_t
 
i
 = 0; i < 
ªmaöög
; i++)

290 
±èbÀ
[
i
] = 
°¨t
 | 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
;

291 
°¨t
 = sèπ + 
PAGE_SIZE
;

296 
	}
}

298 
	$£tup_∑gög
(
uöt64_t
 
ba£
, uöt64_à
phys‰ì
, uöt64_à
pba£
, uöt64_à
p‰ì
)

300 
	`k¥ötf
("£tup_∑gög .. sèπed...Öhyba£ %∞\n", 
	`ALIGN_DOWN
(
ba£
));

301 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

303 
k_¸3
 = 
	`mm_∑ge_to_phy
(
phy_∑ge
);

308 
uöt64_t
 
vaddr
 = 
VIRT_KERNEL_BASE
 + 
pba£
;

312 
uöt64_t
 
nooÂages
 = 518;

314 
	`kînmem_m≠pög
(
vaddr
, 
pba£
, 
nooÂages
 , 
k_¸3
);

316 
	`kînmem_m≠pög
(0xFFFFFFFF800B8000, 0xB8000, 1, 
k_¸3
);

317 
	`m≠_Æl_phy
(
k_¸3
);

318 
	`öô_vútuÆ_mem‹y
(
vaddr
+(
PAGE_SIZE
*
nooÂages
));

320 
	`wrôe_¸3
(
k_¸3
);

336 
	}
}

338 
	$m≠_Æl_phy
(
uöt64_t
 
k_¸3
)

340 
uöt64_t
 
°¨t
 = 0 ;

341 
uöt64_t
 
íd
 = 
	`ALIGN_DOWN
(0x7ffe000);

342 
uöt64_t
 
no_of_∑ges
 = (
íd
 - 
°¨t
)/
PAGE_SIZE
;

344 
	`kînmem_m≠pög
(
VIRT_KERNEL_BASE
, 0, 
no_of_∑ges
 , 
k_¸3
);

348 
	}
}

350 
	$öôülize_√w_pml4e
(
uöt64_t
 
pml4e
)

353 
	}
}

356 
uöt64_t
* 
	$gë_phy_∑ge_èbÀ
(
uöt64_t
 *
¸3
) {

358 
uöt64_t
 *
ªt
 = 0;

360 if(
¸3
 == 0) {

362 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

364 
¸3
 = (
uöt64_t
 *)
	`mm_∑ge_to_phy
(
phy_∑ge
);

365 
ªt
 = 
¸3
;

367 if(!
phy_∑ge
)

368 
d⁄e
;

372 
ªt
 = 
¸3
;

373 
d⁄e
:

375 if(
ªt
)

376 
	`mem£t
–
	`PHY_TO_VIRT
(
ªt
,*), 0x00, 
PAGE_SIZE
);

377  
ªt
;

378 
	}
}

380 
uöt64_t
 
	$ív_£tup_vm
()

382 
uöt64_t
 
pml4e
 = 
	`Æloc_∑ges
(1, 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
 | 
PT_USER
);

383 
uöt64_t
 *
±r
 = (uöt64_à*)
pml4e
;

384 
uöt64_t
 *
kpml4e
 = (uöt64_à*)
	`KADDR
(
k_¸3
);

385 
i
 =0;i<512;i++)

388 
±r
[
i
] = 
kpml4e
[i];

395  
pml4e
;

396 
	}
}

	@sys/mmu/virtual_mm.c

1 
	~<sys/mmu/vútuÆ_mm.h
>

2 
	~<sys/mmu/±.h
>

4 
uöt64_t
 
	gvútuÆ_t›
;

6 
	$öô_vútuÆ_mem‹y
(
uöt64_t
 
vútuÆ_°¨t_addªss
)

8 
vútuÆ_t›
 = 
vútuÆ_°¨t_addªss
;

9 
	}
}

11 
uöt64_t
 
	$gë_cuºít_vm_t›
()

13  
vútuÆ_t›
;

14 
	}
}

16 
	$£t_cuºít_vm_t›
(
uöt64_t
 
√w_t›
)

18 
vútuÆ_t›
 = 
√w_t›
;

19 
	}
}

21 
uöt64_t
 
	$Æloc_∑ges
(
uöt64_t
 
no_of_∑ges
, uöt64_à
Êags
)

23 
uöt64_t
 
ªèddr
 = 
vútuÆ_t›
;

24 
i
 = 0; i < 
no_of_∑ges
; i++)

26 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

28 
uöt64_t
 
phy_addr
 = 
	`mm_∑ge_to_phy
(
phy_∑ge
);

30 
	`m≠_vút_to_phy
(
vútuÆ_t›
, 
phy_addr
, 
Êags
);

32 
vútuÆ_t›
 = vútuÆ_t› + 
PAGE_SIZE
;

34  
ªèddr
;

35 
	}
}

37 
uöt64_t
 
	$Æloc_∑ges_©_vút
(
uöt64_t
 
vút
, uöt64_à
size
, uöt64_à
Êags
)

40 
uöt64_t
 
addr
 = 
vút
;

41 
uöt64_t
 
no_of_∑ges
 = 
size
/
PAGE_SIZE
;

42 if(
size
%
PAGE_SIZE
 != 0)

43 
no_of_∑ges
 =Ço_of_pages + 1;

44 
i
 = 0; i < 
no_of_∑ges
; i++)

46 
uöt64_t
 
phy_∑ge
 = 
	`mm_phy_Æloc_∑ge
();

48 
uöt64_t
 
phy_addr
 = 
	`mm_∑ge_to_phy
(
phy_∑ge
);

50 
	`m≠_vút_to_phy
(
vút
, 
phy_addr
, 
Êags
);

52 
vút
 = vúà+ 
PAGE_SIZE
;

54  
addr
;

55 
	}
}

57 
	$‰ì_∑ges
(
uöt64_t
 
addr
)

60 
	}
}

	@sys/process/elf.c

5 
	~<sys/¥o˚ss/ñf.h
>

6 
	~<sys/èrfs.h
>

7 
	~<sys/mmu/as£mblyutû.h
>

8 
	~<sys/¥o˚ss/¥o˚ss_m™agî.h
>

10 
addto_vma_li°
(
mm_°ru˘
 *
mm
, 
vm_¨ó_°ru˘
 *
vma
);

11 
¥öt_vma_li°
(
mm_°ru˘
 *
mm
);

12 
ã°
(
uöt64_t
 
°¨t
);

14 
	$ªadElf
(*
fûíame
)

17 
uöt64_t
 
°¨t
, 
íd
, 
Êags
, 
fd
;

18 
vm_¨ó_°ru˘
 *
vma
;

19 
uöt64_t
 
off£t

	`föd_off£t_f‹_fûe
(
fûíame
);

21 
Elf64_Ehdr
 *
ñf_hódî
 = (Elf64_Ehd∏*)(&
_bö¨y_èrfs_°¨t
+ 
off£t
);

37 
èsk_°ru˘
 *
èsk
 = 
	`¸óã_√w_èsk
(
fûíame
);

38 
èsk
->
e_íåy
 = 
ñf_hódî
->e_entry;

39 
	`k¥ötf
("tskÇamêi†%†\n", 
èsk
->
«me
);

40 
uöt64_t
 
ﬁd_¸3
 = 
	`ªad_¸3
();

44 
pgm_hdr_num
 = 
ñf_hódî
->
e_phnum
;

45 
Elf64_Phdr
 *
phdr
 = (Elf64_Phd∏*)((*)
ñf_hódî
 +Élf_hódî->
e_phoff
);

47 
	`k¥ötf
("¥ogøm hódî†¨ê%d \n", 
pgm_hdr_num
);

48 
i
 = 0; i < 
pgm_hdr_num
; i++)

51 
	`k¥ötf
("phdrÅype \n");

52 if(
phdr
->
p_ty≥
 =
PT_LOAD
)

55 
	`k¥ötf
("phdrÅype \n");

56 
°¨t
 = 
phdr
->
p_vaddr
;

57 
íd
 = 
phdr
->
p_vaddr
 +Öhdr->
p_memsz
;

58 
Êags
 = 
phdr
->
p_Êags
;

59 
fd
 = 0;

74 
vma
 = 
	`¸óã_vma
(
èsk
->
mm
, 
°¨t
, 
íd
, 
Êags
, 
fd
);

75 
	`addto_vma_li°
(
èsk
->
mm
, 
vma
);

78 
	`wrôe_¸3
(
	`vút_to_phy
(
èsk
->
pml4e
, 0));

79 if(
phdr
->
p_Êags
 == 5)

81 
	`Æloc_∑ges_©_vút
(
°¨t
, 
phdr
->
p_memsz
, 
PT_PRESENT_FLAG
 | 
PT_USER
);

84 
	`Æloc_∑ges_©_vút
(
°¨t
, 
phdr
->
p_memsz
, 
PT_PRESENT_FLAG
 | 
PT_WRITABLE_FLAG
 | 
PT_USER
);

85 
	`mem˝y
((*)
°¨t
, (*Ë
ñf_hódî
 + 
phdr
->
p_off£t
,Öhdr->
p_fûesz
);

88 
	`mem£t
((*)
°¨t
 + 
phdr
->
p_fûesz
, 0,Öhdr->
p_memsz
 -Öhdr->p_filesz);

89 
	`wrôe_¸3
(
ﬁd_¸3
);

93 
èsk
->
mm
->
tŸÆ_vm_size
 +
phdr
->
p_memsz
;

97 
phdr
 = (
Elf64_Phdr
 *)((*Ìhd∏+ 
ñf_hódî
->
e_phítsize
);

101 
vma
 = 
	`¸óã_vma
(
èsk
->
mm
, 
USER_STACK
, USER_STACK - 
USER_STACK_SIZE
, 
VM_RW
, 0);

102 
	`addto_vma_li°
(
èsk
->
mm
, 
vma
);

103 
èsk
->
mm
->
tŸÆ_vm_size
 +
USER_STACK_SIZE
;

104 
èsk
->
mm
->
°ack_vm
 = 
USER_STACK
 - 0x8;

105 
	`wrôe_¸3
(
	`vút_to_phy
(
èsk
->
pml4e
, 0));

106 
	`Æloc_∑ges_©_vút
(
USER_STACK
 - 
PAGE_SIZE
, PAGE_SIZE, 
PT_PRESENT_FLAG
 | 
PT_USER
 | 
PT_WRITABLE_FLAG
);

107 
	`wrôe_¸3
(
ﬁd_¸3
);

110 
	`add_to_èsk_li°
(
èsk
);

115 
	`k¥ötf
("ProcessÜoaded successfully \n");

116 
	}
}

118 
	$ã°
(
uöt64_t
 
°¨t
)

120 *
s
 = (*)
°¨t
;

121 *
s1
 = (*)
s
;

122 *
s1
 = 's';

123 
	`k¥ötf
("ch¨ i†%¯\n", *
s1
);

127 
	}
}

129 
	$addto_vma_li°
(
mm_°ru˘
 *
mm
, 
vm_¨ó_°ru˘
 *
vma
)

131 if(
mm
->
vma_li°
 =
NULL
)

132 
mm
->
vma_li°
 = 
vma
;

135 
vm_¨ó_°ru˘
 *
ãmp_vma
 = 
mm
->
vma_li°
;

136 
ãmp_vma
->
√xt
 !
NULL
)

138 
ãmp_vma
 =Åemp_vma->
√xt
;

140 
ãmp_vma
->
√xt
 = 
vma
;

142 
	}
}

144 
	$¥öt_vma_li°
(
mm_°ru˘
 *
mm
)

146 
vm_¨ó_°ru˘
 *
ãmp_vma
 = 
mm
->
vma_li°
;

147 
ãmp_vma
 !
NULL
)

149 
	`k¥ötf
("vm®°¨àaddªs†i†%∞\n", 
ãmp_vma
->
vm_°¨t
);

150 
ãmp_vma
 =Åemp_vma->
√xt
;

152 
	}
}

	@sys/process/process.c

1 
	~<sys/¥o˚ss/¥o˚ss.h
>

2 
	~<sys/mmu/kmÆloc.h
>

3 
uöt64_t
 
	gpid
 = 0;

4 
èsk_°ru˘
 *
	gèsk_li°
 = 
NULL
;

5 
¥öt_èsk_li°
();

7 
vm_¨ó_°ru˘
 * 
	$¸óã_vma
(
mm_°ru˘
 *
vm_mm
, 
uöt64_t
 
°¨t
, uöt64_à
íd
, uöt64_à
Êags
, uöt64_à
fd
)

9 
vm_¨ó_°ru˘
 *
vma
 = 
NULL
;

11 
vma
 = (
vm_¨ó_°ru˘
 *)
	`kmÆloc
((vm_area_struct));

12 
vma
->
vm_mm
 = vm_mm;

13 
vma
->
vm_°¨t
 = 
°¨t
;

14 
vma
->
vm_íd
 = 
íd
;

15 
vma
->
vm_Êags
 = 
Êags
;

16 
vma
->
vm_fûe_des˝
 = 
fd
;

17 
vma
->
√xt
 = 
NULL
;

18  
vma
;

19 
	}
}

21 
	$add_to_èsk_li°
(
èsk_°ru˘
 *
èsk
)

23 if(
èsk_li°
 =
NULL
)

25 
èsk_li°
 = 
èsk
;

28 
èsk_°ru˘
 *
t
 = 
èsk_li°
;

29 
t
->
√xt
 !
NULL
)

31 
t
 =Å->
√xt
;

33 
t
->
√xt
 = 
èsk
;

35 
	}
}

37 
èsk_°ru˘
 *
	$gë_√xt_èsk
(
èsk_°ru˘
 *
cuºít_èsk
)

39 if(
èsk_li°
 =
NULL
)

41  
NULL
;

45 
	`˛rs¸
();

46 
	`¥öt_èsk_li°
();

47 
èsk_°ru˘
 *
t
 = 
èsk_li°
;

48 
t
 !
NULL
)

50 if(
t
 !
cuºít_èsk
 &&Å->
°©e
 =
TASK_RUNNABLE
)

51  
t
;

52 
t
 =Å->
√xt
;

55  
NULL
;

56 
	}
}

58 
	$¥öt_èsk_li°
()

60 
èsk_°ru˘
 *
t
 = 
èsk_li°
;

61 
t
 !
NULL
)

63 
	`k¥ötf
("èsk id %d \n", 
t
->
pid
);

64 
	`k¥ötf
("èsk sèã %d \n", 
t
->
°©e
);

65 
t
 =Å->
√xt
;

67 
	}
}

69 
	$öôüli£_¥o˚ss
()

72 
	}
}

75 
èsk_°ru˘
 *
	$¸óã_√w_èsk
(*
èsk«me
)

77 
èsk_°ru˘
 *
èsk
 = 
NULL
;

78 
èsk
 = (
èsk_°ru˘
 *)
	`kmÆloc
((task_struct));

79 
èsk
->
pid
 =Öid++;

80 
èsk
->
µid
 = 0;

81 
	`k°r˝y
(
èsk
->
«me
, 
èsk«me
);

82 
èsk
->
mm
 = 
	`¸óã_√w_mm°ru˘
();

83 
èsk
->
°©e
 = 
TASK_RUNNABLE
;

84 
èsk
->
cou¡î
 = 0;

85 
èsk
->
pml4e
 = 
	`ív_£tup_vm
();

86 
	`mem£t
((*)
èsk
->
k°ack
, 0, 
KSTACK_SIZE
);

87 
èsk
->
√xt
 = 
NULL
;

88 
	`k¥ötf
("èskÖid i†%d \n", 
èsk
->
pid
);

89  
èsk
;

90 
	}
}

92 
mm_°ru˘
 * 
	$¸óã_√w_mm°ru˘
()

94 
mm_°ru˘
 *
mm
 = 
NULL
;

95 
mm
 = (
mm_°ru˘
 *)
	`kmÆloc
((mm_struct));

96 
mm
->
vma_li°
 = 
NULL
;

97 
mm
->
°¨t_brk
 = 0;

98 
mm
->
íd_brk
 = 0;

99 
mm
->
°¨t_°ack
 = 0;

100 
mm
->
¨g_°¨t
 = 0;

101 
mm
->
¨g_íd
 = 0;

102 
mm
->
ív_°¨t
 = 0;

103 
mm
->
ív_íd
 = 0;

104 
mm
->
tŸÆ_vm_size
 = 0;

105 
mm
->
°ack_vm
 = 0;

106  
mm
;

108 
	}
}

	@sys/process/process_manager.c

1 
	~<sys/¥o˚ss/¥o˚ss_m™agî.h
>

2 
úq0
();

3 
èsk_°ru˘
* 
	gcuºít_èsk
 = 
NULL
;

4 
°¨t_¥o˚ss
(
èsk_°ru˘
* 
èsk
, 
uöt64_t
 
u°ack
, uöt64_à
bö¨y_íåy
);

8 
èsk_°ru˘
* 
	$gë_cuºít_èsk
()

10  
cuºít_èsk
;

11 
	}
}

13 
	$lﬂd_¥o˚ss
(
èsk_°ru˘
* 
èsk
, 
uöt64_t
 
bö¨y_íåy
, uöt64_à
u°ack
)

15 
cuºít_èsk
 = 
èsk
;

16 
èsk
->
°©e
 = 
TASK_RUNNING
;

19 
èsk
->
k°ack
[
KSTACK_SIZE
-1] = 0x23;

20 
èsk
->
k°ack
[
KSTACK_SIZE
-2] = 
u°ack
;

21 
èsk
->
k°ack
[
KSTACK_SIZE
-3] = 0x200286 ;

22 
èsk
->
k°ack
[
KSTACK_SIZE
-4] = 0x1b;

23 
èsk
->
k°ack
[
KSTACK_SIZE
-5] = 
bö¨y_íåy
;

26 
èsk
->
rù
 = 
bö¨y_íåy
;

31 
èsk
->
r•
 = 
u°ack
;

32 
	`°¨t_¥o˚ss
(
èsk
, 
u°ack
, 
bö¨y_íåy
);

34 
	}
}

36 
	$lﬂd_¥o˚ss
(
èsk_°ru˘
* 
èsk
, 
uöt64_t
 
bö¨y_íåy
, uöt64_à
u°ack
)

38 
cuºít_èsk
 = 
èsk
;

39 
èsk
->
°©e
 = 
TASK_RUNNING
;

41 
èsk
->
k°ack
[
KSTACK_SIZE
-1] = 0x23;

42 
èsk
->
k°ack
[
KSTACK_SIZE
-2] = 
u°ack
;

43 
èsk
->
k°ack
[
KSTACK_SIZE
-3] = 0x200286 ;

44 
èsk
->
k°ack
[
KSTACK_SIZE
-4] = 0x1b;

45 
èsk
->
k°ack
[
KSTACK_SIZE
-5] = 
bö¨y_íåy
;

46 
èsk
->
k°ack
[
KSTACK_SIZE
-6] = (
uöt64_t
)
úq0
 + 0x20;

48 
èsk
->
rù
 = 
bö¨y_íåy
;

51 
èsk
->
r•
 = (
uöt64_t
)&èsk->
k°ack
[
KSTACK_SIZE
-18];

54 
	`°¨t_¥o˚ss
(
èsk
, 
u°ack
, 
bö¨y_íåy
);

56 
	}
}

58 
	$scheduÀ_¥o˚ss
()

60 
	`k¥ötf
("schedulingÖrocess stared.........\n");

61 
èsk_°ru˘
 *
èsk
 = 
NULL
;

62 if(
cuºít_èsk
 =
NULL
)

64 
èsk
 = 
	`gë_√xt_èsk
(
cuºít_èsk
);

65 if(
èsk
 =
NULL
)

70 
	`lﬂd_¥o˚ss
(
èsk
,Åask->
e_íåy
,Åask->
mm
->
°ack_vm
);

71 
cuºít_èsk
 = 
èsk
;

77 
èsk
 = 
	`gë_√xt_èsk
(
cuºít_èsk
);

78 if(
èsk
 =
NULL
)

83 
__asm__
 
	`__vﬁ©ûe__
("movq %%r•, %[√xt_r•]" :[
√xt_r•
] "=m" (
cuºít_èsk
->
r•
): );

84 
	`lﬂd_¥o˚ss
(
èsk
,Åask->
e_íåy
,Åask->
mm
->
°ack_vm
);

85 
cuºít_èsk
 = 
èsk
;

88 
	`k¥ötf
("schedule called...\n");

89 
	}
}

91 
	$°¨t_¥o˚ss
(
èsk_°ru˘
* 
èsk
, 
uöt64_t
 
u°ack
, uöt64_à
bö¨y_íåy
)

94 
	`wrôe_¸3
(
	`vút_to_phy
(
èsk
->
pml4e
,0));

99 
__asm__
 
	`__vﬁ©ûe__
("movq %[√xt_r•], %%r•" : : [
√xt_r•
] "m" (
èsk
->
r•
));

104 
	`£t_tss_r•0
((
uöt64_t
)&
èsk
->
k°ack
[
KSTACK_SIZE
-1]);

108 
	`swôch_to_u£rmode
(
u°ack
, 
bö¨y_íåy
);

109 
	}
}

	@sys/timer.c

1 
	~<sys/timî.h
>

5 
	gtimî_ticks
 = 0;

6 
	g¥ev_£cs
;

8 
timî_h™dÀr
();

9 
shashi
();

10 
	stime


12 
uöt32_t
 
	mhh
;

13 
uöt32_t
 
	mmm
;

14 
uöt32_t
 
	mss
;

17 
time
 
	gcuº_time
;

19 
	$timî_pha£
(
hz
)

21 
uöt16_t
 
divis‹
 = 1193180 / 
hz
;

22 
	`ouç‹tb
(0x43, 0x36);

23 
	`ouç‹tb
(0x40, (
uöt8_t
)(
divis‹
 & 0xFF));

24 
	`ouç‹tb
(0x40, (
uöt8_t
)(
divis‹
 >> 8));

25 
	}
}

29 
	$timî_waô
(
ticks
)

31 
ëicks
;

33 
ëicks
 = 
timî_ticks
 + 
ticks
;

34 
timî_ticks
 < 
ëicks
);

35 
	}
}

37 
	$timî_h™dÀr
( )

41 
timî_ticks
++;

44 i‡(
timî_ticks
 % 18 == 0)

46 
uöt32_t
 
£cs
 = 
timî_ticks
/100;

47 if(
¥ev_£cs
 !
£cs
)

50 
cuº_time
.
ss
 = 
£cs
%60;

52 if(
£cs
%60 == 0)

55 
cuº_time
.
mm
++;

56 if(
cuº_time
.
mm
 % 60 == 0)

59 
cuº_time
.
hh
++;

60 if(
cuº_time
.
hh
 > 24)

61 
cuº_time
.
hh
 = 0;

62 
cuº_time
.
mm
 = 0;

65 
	`k¥öèt
(40,24,"TimêSö˚ BoŸ %d:%d:%d", 
cuº_time
.
hh
,cuº_time.
mm
,cuº_time.
ss
);

66 
¥ev_£cs
 = 
£cs
;

69 
	`ouç‹tb
(0x20,0x20);

70 
	}
}

74 
	$timî_ö°Æl
()

76 
	`timî_pha£
(
FREQUENCY
);

78 
	`úq_ö°Æl_h™dÀr
(0, &
timî_h™dÀr
);

80 
	}
}

	@sys/vgaconsole.c

1 
	~<sys/vgac⁄sﬁe.h
>

2 
	~<sys/i›‹t.h
>

7 *
	gvga_addr
 = (*)0xFFFFFFFF800B8000;

8 
uöt64_t
 
	g©åib
 = 0x03;

9 
	#MAX_Y
 25

10 
	#MAX_X
 80

11 
	`s¸ﬁl
();

	)

12 
move_c§
();

13 
putch
(
ch
);

14 
£tcﬁ‹
(
background
, 
f‹eground
);

15 
puts
(c⁄° *
°r
);

16 
˛órs¸ìn
();

17 
adju°curs‹
();

18 
h™dÀ_back•a˚
();

20 
uöt64_t
 
	gcurs‹_x
 = 0;

21 
uöt64_t
 
	gcurs‹_y
 = 0;

23 
	$£tcﬁ‹
(
background
, 
f‹eground
)

25 
©åib
 = (
background
<<4Ë| (
f‹eground
 & 0x0F);

26 
	}
}

28 
	$puâimî
(
x
, 
y
, *
°r
)

30 
i
 = 0; i < 
MAX_X
; i++)

32 *
d°_addr
 = 
vga_addr
 + (
y
*80 + 
i
) * 2;

33 
d°_addr
++;

34 *
d°_addr
 = 0x0A;

36 *
°r
)

38 *
d°_addr
 = 
vga_addr
 + (
y
*80 + 
x
) * 2;

39 *
d°_addr
++ = *
°r
;

40 *
d°_addr
 = 0x0A;

41 
x
++;

42 
°r
++;

44 
	}
}

46 
	$puts
(c⁄° *
°r
)

48 *
°r
)

50 
	`putch
(*
°r
);

51 
°r
++;

53 
	}
}

55 
	$putch
(
ch
)

57 *
d°_addr
;

58 
ch
)

62 
curs‹_x
=0;

63 
curs‹_y
++;

67 
	`h™dÀ_back•a˚
();

71 
curs‹_x
 = (cursor_x + 8) & ~(8 - 1);

76 
curs‹_x
 = 0;

79 
d°_addr
 = 
vga_addr
 + (
curs‹_y
*80 + 
curs‹_x
) * 2;

80 *
d°_addr
++ = 
ch
;

81 *
d°_addr
 = 
©åib
;

82 
curs‹_x
++;

86 
	`s¸ﬁl
();

87 
	`move_c§
();

89 
	}
}

92 
	$s¸ﬁl
()

95 
uöt64_t
 
bœnk
, 
ãmp
;

99 
bœnk
 = (
©åib
 << 8);

102 if(
curs‹_y
 >= 24)

106 
ãmp
 = 
curs‹_y
 - 24;

107 
	`mem˝y
 (
vga_addr
, vga_add∏+ 
ãmp
 * 80*2, (24 -Åemp) * 80 * 2);

111 
	`mem£tw
 (
vga_addr
 + (24 - 
ãmp
Ë* 80*2, 
bœnk
, 80*2);

112 
curs‹_y
 = 24 - 1;

114 
	}
}

116 
	$h™dÀ_back•a˚
()

118 if(
curs‹_x
 != 0)

122 
curs‹_x
--;

123 
bœnk
 = 0x20 | (
©åib
 << 8);

124 *
d°_addr
 = 
vga_addr
 + (
curs‹_y
*80 + 
curs‹_x
) * 2;

125 *
d°_addr
 = 
bœnk
;

127 if(
curs‹_y
 != 0)

129 
curs‹_x
 = 80;

130 
curs‹_y
--;

131 
bœnk
 = 0x20 | (
©åib
 << 8);

132 *
d°_addr
 = 
vga_addr
 + (
curs‹_y
*80 + 
curs‹_x
) * 2;

133 *
d°_addr
 = 
bœnk
;

134 
curs‹_x
--;

136 
	}
}

140 
	$move_c§
()

142 
ãmp
;

147 
ãmp
 = 
curs‹_y
 * 80 + 
curs‹_x
;

156 
	`ouç‹tb
(0x3D4, 14);

157 
	`ouç‹tb
(0x3D5, 
ãmp
 >> 8);

158 
	`ouç‹tb
(0x3D4, 15);

159 
	`ouç‹tb
(0x3D5, 
ãmp
);

160 
	}
}

163 
	$adju°curs‹
()

165 if(
curs‹_x
 >
MAX_X
)

168 
curs‹_x
 = 0;

169 
curs‹_y
++;

172 if(
curs‹_y
 >=
MAX_Y
 -1)

176 
	`mem˝y
(
vga_addr
, vga_add∏+ 
MAX_X
*2, 
MAX_Y
 * MAX_X * 2);

177 
em±y
 = (
©åib
 << 8);

178 
	`mem£tw
(
vga_addr
 +(2*
MAX_X
* (
MAX_Y
 -1)), 
em±y
, 2*MAX_X);

179 
curs‹_y
 = 24;

181 
	}
}

183 
	$˛órs¸ìn
()

185 
bœnk
;

186 
uöt64_t
 
i
;

190 
bœnk
 = (
©åib
 << 8);

194 
i
 = 0; i < 24; i++)

195 
	`mem£tw
 (
vga_addr
 + 2*
i
 * 
MAX_X
, 
bœnk
, 2*MAX_X);

199 
curs‹_x
 = 0;

200 
curs‹_y
 = 0;

201 
	`move_c§
();

202 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/error.h

20 #i‚de‡
_ERROR_H


21 
	#_ERROR_H
 1

	)

23 #i‚de‡
__©åibuã__


25 #i‡
__GNUC__
 < 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 < 5Ë|| 
__STRICT_ANSI__


26 
	#__©åibuã__
(
S≥c
Ë

	)

30 #i‡
__GNUC__
 < 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 < 7)

31 
	#__f‹m©__
 
f‹m©


	)

32 
	#__¥ötf__
 
¥ötf


	)

36 #ifdef 
__˝lu•lus


44 
îr‹
 (
__°©us
, 
__î∫um
, c⁄° *
__f‹m©
, ...)

45 
__©åibuã__
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4)));

47 
îr‹_©_löe
 (
__°©us
, 
__î∫um
, c⁄° *
__‚ame
,

48 
__löío
, c⁄° *
__f‹m©
, ...)

49 
__©åibuã__
 ((
__f‹m©__
 (
__¥ötf__
, 5, 6)));

54 (*
îr‹_¥öt_¥og«me
) ();

57 
îr‹_mesßge_cou¡
;

61 
îr‹_⁄e_≥r_löe
;

63 #ifdef 
__˝lu•lus


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

59 #ifde‡
__USE_ATFILE


60 
	#AT_FDCWD
 -100

	)

63 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

64 
	#AT_REMOVEDIR
 0x200

	)

66 
	#AT_SYMLINK_FOLLOW
 0x400

	)

67 
	#AT_EACCESS
 0x200

	)

76 
f˙é
 (
__fd
, 
__cmd
, ...);

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

87 #ifde‡
__REDIRECT


88 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

89 
	`__n⁄nuŒ
 ((1));

91 
	#›í
 
›í64


	)

94 #ifde‡
__USE_LARGEFILE64


95 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

98 #ifde‡
__USE_ATFILE


108 #i‚de‡
__USE_FILE_OFFSET64


109 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

110 
	`__n⁄nuŒ
 ((2));

112 #ifde‡
__REDIRECT


113 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

114 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

116 
	#›í©
 
›í©64


	)

120 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

121 
	`__n⁄nuŒ
 ((2));

129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__REDIRECT


133 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

134 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

136 
	#¸ót
 
¸ót64


	)

139 #ifde‡
__USE_LARGEFILE64


140 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

143 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

144 && !
deföed
 
__USE_POSIX
))

153 
	#F_ULOCK
 0

	)

154 
	#F_LOCK
 1

	)

155 
	#F_TLOCK
 2

	)

156 
	#F_TEST
 3

	)

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

164 
	#lockf
 
lockf64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

172 #ifde‡
__USE_XOPEN2K


175 #i‚de‡
__USE_FILE_OFFSET64


176 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

177 
__advi£
Ë
__THROW
;

179 #ifde‡
__REDIRECT_NTH


180 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

181 
__off64_t
 
__Àn
, 
__advi£
),

182 
posix_Ádvi£64
);

184 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

187 #ifde‡
__USE_LARGEFILE64


188 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

189 
__advi£
Ë
__THROW
;

197 #i‚de‡
__USE_FILE_OFFSET64


198 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

202 
__off64_t
 
__Àn
),

203 
posix_ÁŒoˇã64
);

205 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

208 #ifde‡
__USE_LARGEFILE64


209 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

213 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

145 #ifde‡
__STDC__


147 
	#°dö
 
°dö


	)

148 
	#°dout
 
°dout


	)

149 
	#°dîr
 
°dîr


	)

152 
__BEGIN_NAMESPACE_STD


154 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

156 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_ATFILE


161 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

162 
__c⁄°
 *
__√w
Ë
__THROW
;

165 
__BEGIN_NAMESPACE_STD


170 #i‚de‡
__USE_FILE_OFFSET64


171 
FILE
 *
	`tmpfûe
 ();

173 #ifde‡
__REDIRECT


174 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

176 
	#tmpfûe
 
tmpfûe64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
FILE
 *
	`tmpfûe64
 ();

185 *
	$tm≤am
 (*
__s
Ë
__THROW
;

186 
__END_NAMESPACE_STD


188 #ifde‡
__USE_MISC


191 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

195 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


203 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

204 
__THROW
 
__©åibuã_mÆloc__
;

208 
__BEGIN_NAMESPACE_STD


213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

219 
__END_NAMESPACE_STD


221 #ifde‡
__USE_MISC


228 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

231 #ifde‡
__USE_GNU


238 
	`f˛o£Æl
 ();

242 
__BEGIN_NAMESPACE_STD


243 #i‚de‡
__USE_FILE_OFFSET64


248 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

249 
__c⁄°
 *
__ª°ri˘
 
__modes
);

254 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

255 
__c⁄°
 *
__ª°ri˘
 
__modes
,

256 
FILE
 *
__ª°ri˘
 
__°ªam
);

258 #ifde‡
__REDIRECT


259 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

260 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

261 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

262 
__c⁄°
 *
__ª°ri˘
 
__modes
,

263 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 
__END_NAMESPACE_STD


270 #ifde‡
__USE_LARGEFILE64


271 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
);

273 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
);

278 #ifdef 
__USE_POSIX


280 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

283 #ifdef 
__USE_GNU


286 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

287 
__c⁄°
 *
__ª°ri˘
 
__modes
,

288 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

291 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

296 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

300 
__BEGIN_NAMESPACE_STD


303 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

307 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

308 
__modes
, 
size_t
 
__n
Ë
__THROW
;

309 
__END_NAMESPACE_STD


311 #ifdef 
__USE_BSD


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

322 
__BEGIN_NAMESPACE_STD


327 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

328 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

333 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

335 
	$•rötf
 (*
__ª°ri˘
 
__s
,

336 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

342 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

343 
_G_va_li°
 
__¨g
);

348 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

350 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

351 
_G_va_li°
 
__¨g
Ë
__THROW
;

352 
__END_NAMESPACE_STD


354 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


355 
__BEGIN_NAMESPACE_C99


357 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

359 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

361 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

364 
__END_NAMESPACE_C99


367 #ifde‡
__USE_GNU


370 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

371 
_G_va_li°
 
__¨g
)

372 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

373 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

374 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

375 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

376 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

377 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

378 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

386 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

387 
_G_va_li°
 
__¨g
)

388 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

389 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

390 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

394 
__BEGIN_NAMESPACE_STD


399 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

400 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

405 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

407 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

409 
__END_NAMESPACE_STD


411 #ifdef 
__USE_ISOC99


412 
__BEGIN_NAMESPACE_C99


417 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

418 
_G_va_li°
 
__¨g
)

419 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

425 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

426 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

429 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

431 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

432 
__END_NAMESPACE_C99


436 
__BEGIN_NAMESPACE_STD


441 
	`fgëc
 (
FILE
 *
__°ªam
);

442 
	`gëc
 (
FILE
 *
__°ªam
);

448 
	`gëch¨
 ();

449 
__END_NAMESPACE_STD


453 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

455 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


460 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

461 
	`gëch¨_u∆ocked
 ();

464 #ifde‡
__USE_MISC


471 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

475 
__BEGIN_NAMESPACE_STD


483 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

484 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

490 
	`putch¨
 (
__c
);

491 
__END_NAMESPACE_STD


495 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

497 #ifde‡
__USE_MISC


504 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

507 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


512 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

513 
	`putch¨_u∆ocked
 (
__c
);

517 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

518 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

520 
	`gëw
 (
FILE
 *
__°ªam
);

523 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

527 
__BEGIN_NAMESPACE_STD


532 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

533 
__wur
;

540 *
	$gës
 (*
__s
Ë
__wur
;

541 
__END_NAMESPACE_STD


543 #ifde‡
__USE_GNU


550 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

551 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

555 #ifdef 
__USE_GNU


566 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

567 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

568 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

569 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

570 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

571 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

579 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

580 
size_t
 *
__ª°ri˘
 
__n
,

581 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

585 
__BEGIN_NAMESPACE_STD


590 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

596 
	`puts
 (
__c⁄°
 *
__s
);

603 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

610 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

611 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

617 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

618 
__END_NAMESPACE_STD


620 #ifde‡
__USE_GNU


627 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

628 
FILE
 *
__ª°ri˘
 
__°ªam
);

631 #ifde‡
__USE_MISC


638 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

639 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

640 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

641 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

645 
__BEGIN_NAMESPACE_STD


650 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

655 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

660 
	`ªwöd
 (
FILE
 *
__°ªam
);

661 
__END_NAMESPACE_STD


668 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


669 #i‚de‡
__USE_FILE_OFFSET64


674 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

679 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

681 #ifde‡
__REDIRECT


682 
	`__REDIRECT
 (
f£eko
,

683 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

684 
f£eko64
);

685 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

687 
	#f£eko
 
f£eko64


	)

688 
	#·ñlo
 
·ñlo64


	)

693 
__BEGIN_NAMESPACE_STD


694 #i‚de‡
__USE_FILE_OFFSET64


699 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

704 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

708 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

709 
	`__REDIRECT
 (
f£ços
,

710 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

712 
	#fgëpos
 
fgëpos64


	)

713 
	#f£ços
 
f£ços64


	)

716 
__END_NAMESPACE_STD


718 #ifde‡
__USE_LARGEFILE64


719 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

720 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

721 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

722 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

725 
__BEGIN_NAMESPACE_STD


727 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

729 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

731 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

732 
__END_NAMESPACE_STD


734 #ifde‡
__USE_MISC


736 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

737 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

738 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

742 
__BEGIN_NAMESPACE_STD


747 
	`≥º‹
 (
__c⁄°
 *
__s
);

748 
__END_NAMESPACE_STD


754 
	~<bôs/sys_îæi°.h
>

757 #ifdef 
__USE_POSIX


759 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

762 #ifde‡
__USE_MISC


764 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

768 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

769 
deföed
 
__USE_MISC
)

774 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

780 
	`p˛o£
 (
FILE
 *
__°ªam
);

784 #ifdef 
__USE_POSIX


786 *
	$˘îmid
 (*
__s
Ë
__THROW
;

790 #ifde‡
__USE_XOPEN


792 *
	`cu£rid
 (*
__s
);

796 #ifdef 
__USE_GNU


797 
ob°ack
;

800 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

801 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

802 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

803 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

804 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

805 
_G_va_li°
 
__¨gs
)

806 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

810 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


814 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

818 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

821 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

824 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


828 
	#__√ed_gë›t


	)

829 
	~<gë›t.h
>

834 #ifde‡
__USE_EXTERN_INLINES


835 
	~<bôs/°dio.h
>

837 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


838 
	~<bôs/°dio2.h
>

840 #ifde‡
__LDBL_COMPAT


841 
	~<bôs/°dio-ldbl.h
>

844 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

279 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
, 
__group
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

282 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
, 
__group
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

285 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
,

287 
__group
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

289 #i‚de‡
__°πﬁ_öã∫Æ_deföed


290 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
__group
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

294 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

296 #i‚de‡
__°πoul_öã∫Æ_deföed


297 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
,

299 
__ba£
, 
__group
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

301 
	#__°πoul_öã∫Æ_deföed
 1

	)

303 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


304 #i‚de‡
__°πﬁl_öã∫Æ_deföed


305 
__exãnsi⁄__


306 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

307 **
__ª°ri˘
 
__íd±r
,

308 
__ba£
, 
__group
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

310 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

312 #i‚de‡
__°πouŒ_öã∫Æ_deföed


313 
__exãnsi⁄__


314 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

315 
__ª°ri˘
 
__≈å
,

316 **
__ª°ri˘
 
__íd±r
,

317 
__ba£
, 
__group
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

323 #ifde‡
__USE_EXTERN_INLINES


326 
__BEGIN_NAMESPACE_STD


327 
__ölöe
 

328 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

330  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

331 
	}
}

332 
__ölöe
 

333 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

334 
__ba£
))

336  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

337 
	}
}

338 
__ölöe
 

339 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

340 
__ba£
))

342  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

343 
	}
}

344 
__END_NAMESPACE_STD


346 #ifde‡
__USE_ISOC99


347 
__BEGIN_NAMESPACE_C99


348 
__ölöe
 

349 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

351  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

352 
	}
}

353 #i‚de‡
__LDBL_COMPAT


354 
__ölöe
 

355 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

357  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

358 
	}
}

360 
__END_NAMESPACE_C99


363 #ifde‡
__USE_BSD


364 
__exãnsi⁄__
 
__ölöe
 

365 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

366 
__ba£
))

368  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

369 
	}
}

370 
__exãnsi⁄__
 
__ölöe
 

371 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

372 
__ba£
))

374  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

375 
	}
}

378 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


379 
__BEGIN_NAMESPACE_C99


380 
__exãnsi⁄__
 
__ölöe
 

381 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

382 
__ba£
))

384  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

385 
	}
}

386 
__exãnsi⁄__
 
__ölöe
 

387 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

388 
__ba£
))

390  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

391 
	}
}

392 
__END_NAMESPACE_C99


395 
__BEGIN_NAMESPACE_STD


396 
__ölöe
 

397 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

399  
	`°πod
 (
__≈å
, (**Ë
NULL
);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

404  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__ölöe
 

407 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

409  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

410 
	}
}

411 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


414 
__BEGIN_NAMESPACE_C99


415 
__exãnsi⁄__
 
__ölöe
 

416 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

418  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

419 
	}
}

420 
__END_NAMESPACE_C99


425 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


429 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

432 
	$a64l
 (
__c⁄°
 *
__s
)

433 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

437 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


438 
	~<sys/ty≥s.h
>

445 
	$øndom
 (Ë
__THROW
;

448 
	$§™dom
 (
__£ed
Ë
__THROW
;

454 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

455 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

459 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 #ifde‡
__USE_MISC


467 
	søndom_d©a


469 
öt32_t
 *
Âå
;

470 
öt32_t
 *
Ωå
;

471 
öt32_t
 *
°©e
;

472 
ønd_ty≥
;

473 
ønd_deg
;

474 
ønd_£p
;

475 
öt32_t
 *
íd_±r
;

478 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

479 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

481 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2));

484 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

485 
size_t
 
__°©ñí
,

486 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

487 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

489 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

490 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 
__BEGIN_NAMESPACE_STD


498 
	$ønd
 (Ë
__THROW
;

500 
	$§™d
 (
__£ed
Ë
__THROW
;

501 
__END_NAMESPACE_STD


503 #ifde‡
__USE_POSIX


505 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

509 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


513 
	$dønd48
 (Ë
__THROW
;

514 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$Ã™d48
 (Ë
__THROW
;

518 
	$ƒ™d48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$mønd48
 (Ë
__THROW
;

523 
	$jønd48
 (
__xsubi
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

528 *
	$£ed48
 (
__£ed16v
[3])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #ifde‡
__USE_MISC


536 
	sdønd48_d©a


538 
__x
[3];

539 
__ﬁd_x
[3];

540 
__c
;

541 
__öô
;

542 
__a
;

546 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

547 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	$î™d48_r
 (
__xsubi
[3],

549 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

550 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

553 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

554 *
__ª°ri˘
 
__ªsu…
)

555 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

556 
	$ƒ™d48_r
 (
__xsubi
[3],

557 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

563 *
__ª°ri˘
 
__ªsu…
)

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$jønd48_r
 (
__xsubi
[3],

566 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

567 *
__ª°ri˘
 
__ªsu…
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

572 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	$£ed48_r
 (
__£ed16v
[3],

575 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 
	$lc⁄g48_r
 (
__∑øm
[7],

578 
dønd48_d©a
 *
__buf„r
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


586 
	#__mÆloc_™d_ˇŒoc_deföed


	)

587 
__BEGIN_NAMESPACE_STD


589 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

591 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

592 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

593 
__END_NAMESPACE_STD


596 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


597 
__BEGIN_NAMESPACE_STD


600 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

601 
__THROW
 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

603 
	$‰ì
 (*
__±r
Ë
__THROW
;

604 
__END_NAMESPACE_STD


606 #ifdef 
__USE_MISC


608 
	$c‰ì
 (*
__±r
Ë
__THROW
;

611 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


612 
	~<Æloˇ.h
>

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


617 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

620 #ifde‡
__USE_XOPEN2K


622 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

623 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
__BEGIN_NAMESPACE_STD


628 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

632 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

633 
__END_NAMESPACE_STD


635 #ifdef 
__USE_MISC


638 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

639 
__THROW
 
	`__n⁄nuŒ
 ((1));

642 
__BEGIN_NAMESPACE_STD


646 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

647 
__END_NAMESPACE_STD


649 #ifde‡
__USE_ISOC99


650 
__BEGIN_NAMESPACE_C99


653 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 
__END_NAMESPACE_C99


658 
__BEGIN_NAMESPACE_STD


660 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__END_NAMESPACE_STD


665 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

666 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


672 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


678 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

679 
__THROW
 
	`__n⁄nuŒ
 ((2));

682 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

685 #ifdef 
__USE_MISC


689 
	$˛óªnv
 (Ë
__THROW
;

693 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


698 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

708 #i‚de‡
__USE_FILE_OFFSET64


709 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

713 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

715 
	#mk°emp
 
mk°emp64


	)

718 #ifde‡
__USE_LARGEFILE64


719 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #ifde‡
__USE_BSD


729 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

733 
__BEGIN_NAMESPACE_STD


738 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

739 
__END_NAMESPACE_STD


742 #ifdef 
__USE_GNU


746 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

750 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


756 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

757 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

762 #i‚de‡
__COMPAR_FN_T


763 
	#__COMPAR_FN_T


	)

764 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

766 #ifdef 
__USE_GNU


767 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

771 
__BEGIN_NAMESPACE_STD


774 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

775 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

776 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

780 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

781 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

785 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
__END_NAMESPACE_STD


789 #ifde‡
__USE_ISOC99


790 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__BEGIN_NAMESPACE_STD


799 
div_t
 
	$div
 (
__numî
, 
__díom
)

800 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

801 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

802 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

803 
__END_NAMESPACE_STD


805 #ifde‡
__USE_ISOC99


806 
__BEGIN_NAMESPACE_C99


807 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

808 
__díom
)

809 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

810 
__END_NAMESPACE_C99


814 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


821 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

822 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

827 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

828 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 #ifde‡
__USE_MISC


839 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

841 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

842 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

843 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

844 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

845 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

851 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

852 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

853 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

854 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

855 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

856 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

858 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

859 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

860 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

861 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

862 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

863 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

864 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

865 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

870 
__BEGIN_NAMESPACE_STD


873 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

876 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

877 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

880 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

884 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

885 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

887 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

888 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

889 
__THROW
;

890 
__END_NAMESPACE_STD


893 #ifde‡
__USE_SVID


898 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 #ifde‡
__USE_XOPEN_EXTENDED


909 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

910 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

911 **
__ª°ri˘
 
__vÆuï
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

916 #ifde‡
__USE_XOPEN


918 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

924 #ifde‡
__USE_XOPEN2K


926 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

929 #ifde‡
__USE_XOPEN


934 
	$gø¡±
 (
__fd
Ë
__THROW
;

938 
	$u∆ock±
 (
__fd
Ë
__THROW
;

943 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

946 #ifde‡
__USE_GNU


950 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

951 
__THROW
 
	`__n⁄nuŒ
 ((2));

954 
	`gë±
 ();

957 #ifde‡
__USE_BSD


961 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

967 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


968 
	~<bôs/°dlib.h
>

970 #ifde‡
__LDBL_COMPAT


971 
	~<bôs/°dlib-ldbl.h
>

975 #unde‡
__√ed_mÆloc_™d_ˇŒoc


977 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_MISC


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #ifde‡
__USE_MISC


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

153 #ifdef 
__USE_POSIX199309


154 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

155 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

156 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

162 
	#S_ISUID
 
__S_ISUID


	)

163 
	#S_ISGID
 
__S_ISGID


	)

165 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


167 
	#S_ISVTX
 
__S_ISVTX


	)

170 
	#S_IRUSR
 
__S_IREAD


	)

171 
	#S_IWUSR
 
__S_IWRITE


	)

172 
	#S_IXUSR
 
__S_IEXEC


	)

174 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

176 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


177 
	#S_IREAD
 
S_IRUSR


	)

178 
	#S_IWRITE
 
S_IWUSR


	)

179 
	#S_IEXEC
 
S_IXUSR


	)

182 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

183 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

184 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

186 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

188 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

189 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

190 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

192 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

195 #ifdef 
__USE_BSD


197 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

198 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

199 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

201 
	#S_BLKSIZE
 512

	)

205 #i‚de‡
__USE_FILE_OFFSET64


207 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

208 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

212 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

216 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

217 
	`__n⁄nuŒ
 ((1, 2));

218 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

219 
	`__n⁄nuŒ
 ((2));

221 
	#°©
 
°©64


	)

222 
	#f°©
 
f°©64


	)

225 #ifde‡
__USE_LARGEFILE64


226 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

227 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

228 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

231 #ifde‡
__USE_ATFILE


235 #i‚de‡
__USE_FILE_OFFSET64


236 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

237 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

238 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

240 #ifde‡
__REDIRECT_NTH


241 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

242 
°©
 *
__ª°ri˘
 
__buf
,

243 
__Êag
),

244 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

246 
	#f°©©
 
f°©©64


	)

250 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

251 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

252 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_BSD


287 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
mode
, 
__Êag
)

300 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

307 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

309 #ifdef 
__USE_GNU


312 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

316 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1));

319 #ifde‡
__USE_ATFILE


323 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((2));

330 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


331 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

348 #ifde‡
__USE_ATFILE


352 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #i‚de‡
_STAT_VER


372 
	#_STAT_VER
 0

	)

374 #i‚de‡
_MKNOD_VER


375 
	#_MKNOD_VER
 0

	)

379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

381 
__THROW
 
	`__n⁄nuŒ
 ((3));

382 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

383 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

384 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

385 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

386 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

387 
°©
 *
__°©_buf
, 
__Êag
)

388 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

390 #ifde‡
__REDIRECT_NTH


391 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

392 
°©
 *
__°©_buf
), 
__fx°©64
)

393 
	`__n⁄nuŒ
 ((3));

394 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

395 
°©
 *
__°©_buf
), 
__x°©64
)

396 
	`__n⁄nuŒ
 ((2, 3));

397 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

398 
°©
 *
__°©_buf
), 
__lx°©64
)

399 
	`__n⁄nuŒ
 ((2, 3));

400 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

401 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
),

403 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

406 
	#__fx°©
 
__fx°©64


	)

407 
	#__x°©
 
__x°©64


	)

408 
	#__lx°©
 
__lx°©64


	)

412 #ifde‡
__USE_LARGEFILE64


413 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

414 
__THROW
 
	`__n⁄nuŒ
 ((3));

415 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

417 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

418 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

419 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

420 
°©64
 *
__°©_buf
, 
__Êag
)

421 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

423 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

424 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

426 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

427 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

428 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

430 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

433 
__ölöe__
 

434 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

436  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

437 
	}
}

439 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


440 
__ölöe__
 

441 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

443  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

444 
	}
}

447 
__ölöe__
 

448 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

450  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

451 
	}
}

453 #ifde‡
__USE_ATFILE


454 
__ölöe__
 

455 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

456 
__Êag
))

458  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

459 
	}
}

462 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


463 
__ölöe__
 

464 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

466  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

467 
	}
}

470 #ifde‡
__USE_ATFILE


471 
__ölöe__
 

472 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

473 
__dev_t
 
__dev
))

475  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

476 
	}
}

479 #i‡
deföed
 
__USE_LARGEFILE64
 \

480 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

481 || (
deföed
 
__REDIRECT_NTH
 && deföed 
__OPTIMIZE__
))

482 
__ölöe__
 

483 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

485  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

486 
	}
}

488 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


489 
__ölöe__
 

490 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

492  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

493 
	}
}

496 
__ölöe__
 

497 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

499  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

500 
	}
}

502 #ifde‡
__USE_GNU


503 
__ölöe__
 

504 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

505 
__Êag
))

507  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

508 
	}
}

515 
__END_DECLS


	@/usr/include/sys/syscall.h

19 #i‚de‡
_SYSCALL_H


20 
	#_SYSCALL_H
 1

	)

25 
	~<asm/uni°d.h
>

27 #i‚de‡
_LIBC


32 
	~<bôs/sysˇŒ.h
>

	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/unistd.h

2 #i‚de‡
__ASM_STUB_UNISTD_H


3 
	#__ASM_STUB_UNISTD_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/uni°d.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/uni°d.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

58 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


59 
	#O_DSYNC
 
O_SYNC


	)

60 
	#O_RSYNC
 
O_SYNC


	)

63 #ifde‡
__USE_LARGEFILE64


64 #i‡
__WORDSIZE
 == 64

65 
	#O_LARGEFILE
 0

	)

67 
	#O_LARGEFILE
 0100000

	)

72 
	#F_DUPFD
 0

	)

73 
	#F_GETFD
 1

	)

74 
	#F_SETFD
 2

	)

75 
	#F_GETFL
 3

	)

76 
	#F_SETFL
 4

	)

77 #i‡
__WORDSIZE
 == 64

78 
	#F_GETLK
 5

	)

79 
	#F_SETLK
 6

	)

80 
	#F_SETLKW
 7

	)

82 
	#F_GETLK64
 5

	)

83 
	#F_SETLK64
 6

	)

84 
	#F_SETLKW64
 7

	)

86 #i‚de‡
__USE_FILE_OFFSET64


87 
	#F_GETLK
 5

	)

88 
	#F_SETLK
 6

	)

89 
	#F_SETLKW
 7

	)

91 
	#F_GETLK
 
F_GETLK64


	)

92 
	#F_SETLK
 
F_SETLK64


	)

93 
	#F_SETLKW
 
F_SETLKW64


	)

95 
	#F_GETLK64
 12

	)

96 
	#F_SETLK64
 13

	)

97 
	#F_SETLKW64
 14

	)

100 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


101 
	#F_SETOWN
 8

	)

102 
	#F_GETOWN
 9

	)

105 #ifde‡
__USE_GNU


106 
	#F_SETSIG
 10

	)

107 
	#F_GETSIG
 11

	)

110 #ifde‡
__USE_GNU


111 
	#F_SETLEASE
 1024

	)

112 
	#F_GETLEASE
 1025

	)

113 
	#F_NOTIFY
 1026

	)

117 
	#FD_CLOEXEC
 1

	)

120 
	#F_RDLCK
 0

	)

121 
	#F_WRLCK
 1

	)

122 
	#F_UNLCK
 2

	)

125 
	#F_EXLCK
 4

	)

126 
	#F_SHLCK
 8

	)

128 #ifde‡
__USE_BSD


130 
	#LOCK_SH
 1

	)

131 
	#LOCK_EX
 2

	)

132 
	#LOCK_NB
 4

	)

134 
	#LOCK_UN
 8

	)

137 #ifde‡
__USE_GNU


138 
	#LOCK_MAND
 32

	)

139 
	#LOCK_READ
 64

	)

140 
	#LOCK_WRITE
 128

	)

141 
	#LOCK_RW
 192

	)

144 #ifde‡
__USE_GNU


146 
	#DN_ACCESS
 0x00000001

	)

147 
	#DN_MODIFY
 0x00000002

	)

148 
	#DN_CREATE
 0x00000004

	)

149 
	#DN_DELETE
 0x00000008

	)

150 
	#DN_RENAME
 0x00000010

	)

151 
	#DN_ATTRIB
 0x00000020

	)

152 
	#DN_MULTISHOT
 0x80000000

	)

155 
	sÊock


157 
	ml_ty≥
;

158 
	ml_whí˚
;

159 #i‚de‡
__USE_FILE_OFFSET64


160 
__off_t
 
	ml_°¨t
;

161 
__off_t
 
	ml_Àn
;

163 
__off64_t
 
	ml_°¨t
;

164 
__off64_t
 
	ml_Àn
;

166 
__pid_t
 
	ml_pid
;

169 #ifde‡
__USE_LARGEFILE64


170 
	sÊock64


172 
	ml_ty≥
;

173 
	ml_whí˚
;

174 
__off64_t
 
	ml_°¨t
;

175 
__off64_t
 
	ml_Àn
;

176 
__pid_t
 
	ml_pid
;

182 #ifdef 
__USE_BSD


183 
	#FAPPEND
 
O_APPEND


	)

184 
	#FFSYNC
 
O_FSYNC


	)

185 
	#FASYNC
 
O_ASYNC


	)

186 
	#FNONBLOCK
 
O_NONBLOCK


	)

187 
	#FNDELAY
 
O_NDELAY


	)

191 #ifde‡
__USE_XOPEN2K


192 
	#POSIX_FADV_NORMAL
 0

	)

193 
	#POSIX_FADV_RANDOM
 1

	)

194 
	#POSIX_FADV_SEQUENTIAL
 2

	)

195 
	#POSIX_FADV_WILLNEED
 3

	)

196 
	#POSIX_FADV_DONTNEED
 4

	)

197 
	#POSIX_FADV_NOREUSE
 5

	)

201 #ifde‡
__USE_GNU


203 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

206 
	#SYNC_FILE_RANGE_WRITE
 2

	)

209 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

214 
	#SPLICE_F_MOVE
 1

	)

215 
	#SPLICE_F_NONBLOCK
 2

	)

218 
	#SPLICE_F_MORE
 4

	)

219 
	#SPLICE_F_GIFT
 8

	)

222 
	g__BEGIN_DECLS


224 #ifde‡
__USE_GNU


227 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

228 
__THROW
;

232 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

233 
__Êags
);

237 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
, 
size_t
 
__cou¡
,

238 
__Êags
);

241 
	$•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

242 
__off64_t
 *
__offout
, 
size_t
 
__Àn
, 
__Êags
)

243 
__THROW
;

246 
	$ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
, 
__Êags
)

247 
__THROW
;

251 
__END_DECLS


	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

55 
	#MAP_32BIT
 0x40

	)

59 #ifde‡
__USE_MISC


60 
	#MAP_GROWSDOWN
 0x00100

	)

61 
	#MAP_DENYWRITE
 0x00800

	)

62 
	#MAP_EXECUTABLE
 0x01000

	)

63 
	#MAP_LOCKED
 0x02000

	)

64 
	#MAP_NORESERVE
 0x04000

	)

65 
	#MAP_POPULATE
 0x08000

	)

66 
	#MAP_NONBLOCK
 0x10000

	)

70 
	#MS_ASYNC
 1

	)

71 
	#MS_SYNC
 4

	)

72 
	#MS_INVALIDATE
 2

	)

75 
	#MCL_CURRENT
 1

	)

76 
	#MCL_FUTURE
 2

	)

80 #ifde‡
__USE_GNU


81 
	#MREMAP_MAYMOVE
 1

	)

82 
	#MREMAP_FIXED
 2

	)

86 #ifde‡
__USE_BSD


87 
	#MADV_NORMAL
 0

	)

88 
	#MADV_RANDOM
 1

	)

89 
	#MADV_SEQUENTIAL
 2

	)

90 
	#MADV_WILLNEED
 3

	)

91 
	#MADV_DONTNEED
 4

	)

92 
	#MADV_REMOVE
 9

	)

93 
	#MADV_DONTFORK
 10

	)

94 
	#MADV_DOFORK
 11

	)

98 #ifde‡
__USE_XOPEN2K


99 
	#POSIX_MADV_NORMAL
 0

	)

100 
	#POSIX_MADV_RANDOM
 1

	)

101 
	#POSIX_MADV_SEQUENTIAL
 2

	)

102 
	#POSIX_MADV_WILLNEED
 3

	)

103 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__∑d1
;

163 
	m__∑d2
;

164 
	m__∑d3
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__wrôî
;

182 } 
	m__d©a
;

184 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

185 
	m__Æign
;

186 } 
	t±hªad_rwlock_t
;

190 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

191 
	m__Æign
;

192 } 
	t±hªad_rwlock©å_t
;

196 #ifde‡
__USE_XOPEN2K


198 vﬁ©ûê
	t±hªad_•ölock_t
;

205 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

206 
	m__Æign
;

207 } 
	t±hªad_b¨rõr_t
;

211 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

212 
	m__Æign
;

213 } 
	t±hªad_b¨rõøâr_t
;

217 #i‡
__WORDSIZE
 == 32

219 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

32 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

33 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

34 
__END_NAMESPACE_STD


36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


37 
__BEGIN_NAMESPACE_C99


38 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

39 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

40 
__END_NAMESPACE_C99


43 #ifdef 
__USE_ISOC99


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

46 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

47 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

48 
__END_NAMESPACE_C99


51 #ifde‡
__USE_GNU


52 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

53 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

54 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

55 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

56 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

57 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

61 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


62 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

63 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

64 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


65 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

66 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #ifde‡
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

57 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


59 
__STDIO_INLINE
 

60 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

62  
	`_IO_gëc_u∆ocked
 (
__Â
);

63 
	}
}

66 
__STDIO_INLINE
 

67 
	$gëch¨_u∆ocked
 ()

69  
	`_IO_gëc_u∆ocked
 (
°dö
);

70 
	}
}

75 
__STDIO_INLINE
 

76 
	$putch¨
 (
__c
)

78  
	`_IO_putc
 (
__c
, 
°dout
);

79 
	}
}

82 #ifde‡
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

92 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


94 
__STDIO_INLINE
 

95 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

97  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

98 
	}
}

101 
__STDIO_INLINE
 

102 
	$putch¨_u∆ocked
 (
__c
)

104  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

105 
	}
}

109 #ifdef 
__USE_GNU


111 
__STDIO_INLINE
 
_IO_ssize_t


112 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

114  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

115 
	}
}

119 #ifde‡
__USE_MISC


121 
__STDIO_INLINE
 

122 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

124  
	`_IO_„of_u∆ocked
 (
__°ªam
);

125 
	}
}

128 
__STDIO_INLINE
 

129 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

131  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

132 
	}
}

138 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


140 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

141 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

142 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

143 && (
size_t
Ë(
size
) != 0) \

144 ? ({ *
__±r
 = (*Ë(
±r
); \

145 
FILE
 *
__°ªam
 = (
°ªam
); \

146 
size_t
 
__˙t
; \

147 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

148 
__˙t
 > 0; --__cnt) \

150 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

151 i‡(
__c
 =
EOF
) \

153 *
__±r
++ = 
__c
; \

155 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

156 / (
size_t
Ë(
size
); }) \

157 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

158 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

160 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

161 (Ë(
n
), (
size_t
) 0) \

162 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

164 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

165 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

166 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

167 && (
size_t
Ë(
size
) != 0) \

168 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

169 
FILE
 *
__°ªam
 = (
°ªam
); \

170 
size_t
 
__˙t
; \

171 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

172 
__˙t
 > 0; --__cnt) \

173 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

175 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

176 / (
size_t
Ë(
size
); }) \

177 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

178 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

180 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

181 (Ë(
n
), (
size_t
) 0) \

182 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

186 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 #i‡
	`__GNUC_PREREQ
 (4, 0)

65 
	#¥ötf
(...) \

66 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

67 
	#Ârötf
(
°ªam
, ...) \

68 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

69 
	#v¥ötf
(
f‹m©
, 
≠
) \

70 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

71 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

72 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

74 
	#¥ötf
(...) \

75 
	`__buûtö___¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

76 
	#Ârötf
(
°ªam
, ...) \

77 
	`__buûtö___Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

78 
	#v¥ötf
(
f‹m©
, 
≠
) \

79 
	`__buûtö___v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

80 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

81 
	`__buûtö___vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

86 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

87 *
	`__REDIRECT
 (
__gës_Æüs
, (*
__°r
), 
gës
Ë
__wur
;

89 
__Æways_ölöe
 
__wur
 *

90 
	$gës
 (*
__°r
)

92 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

93  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

94  
	`__gës_Æüs
 (
__°r
);

95 
	}
}

97 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

98 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

99 *
	`__REDIRECT
 (
__fgës_Æüs
,

100 (*
__ª°ri˘
 
__s
, 
__n
,

101 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

103 
__Æways_ölöe
 
__wur
 *

104 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

106 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

107 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

108  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

109  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

110 
	}
}

112 #ifde‡
__USE_GNU


113 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

114 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

115 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

116 (*
__ª°ri˘
 
__s
, 
__n
,

117 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

119 
__Æways_ölöe
 
__wur
 *

120 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

122 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

123 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

124  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

125  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

126 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 
	$__LDBL_REDIR1_DECL
 (
__°πﬁd_öã∫Æ
, 
__°πod_öã∫Æ
)

36 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

31 
__Æways_ölöe
 
__wur
 *

32 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

34 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

35  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

37  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

38 
	}
}

41 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

42 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

43 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

44 
size_t
 
__buÊí
), 
±¢ame_r
)

45 
	`__n⁄nuŒ
 ((2));

47 
__Æways_ölöe
 

48 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

50 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

51 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

52  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

53  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

54 
	}
}

57 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

58 
__THROW
 
__wur
;

59 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

60 
w˘omb
Ë
__wur
;

62 
__Æways_ölöe
 
__wur
 

63 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

68 
	#__STDLIB_MB_LEN_MAX
 16

	)

69 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


72 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

73  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

74  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

75 
	}
}

78 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

79 
__c⁄°
 *
__ª°ri˘
 
__§c
,

80 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

81 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

82 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

83 
__c⁄°
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__Àn
), 
mb°owcs
);

86 
__Æways_ölöe
 
size_t


87 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__Àn
))

90 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

91 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

92 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

93  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

94 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

95  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

96 
	}
}

99 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

100 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

103 (*
__ª°ri˘
 
__d°
,

104 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
wc°ombs
);

107 
__Æways_ölöe
 
size_t


108 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
))

111 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

113  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

114  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

115 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__Æways_ölöe
 *

48 
__NTH
 (
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

55 
	#memmove
(
de°
, 
§c
, 
Àn
) \

56 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

57 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

58 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

59 
__Æways_ölöe
 *

60 
__NTH
 (
	$__memmove_ichk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

62  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

63 
	}
}

66 #ifde‡
__USE_GNU


67 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

68 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

69 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

70 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

71 
__Æways_ölöe
 *

72 
__NTH
 (
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
,

73 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
))

75  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

76 
	}
}

85 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

87 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

88 (
	`__buûtö_c⁄°™t_p
 (
Àn
) && (len) == 0 \

89 ? (
	`__w¨n_mem£t_zîo_Àn
 (), (Ë(
ch
), (Ë(
Àn
), (*Ë(
de°
)) \

90 : ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

91 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

92 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
)))

	)

93 
__Æways_ölöe
 *

94 
__NTH
 (
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

96  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

97 
	}
}

99 #ifde‡
__USE_BSD


100 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

101 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

102 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

103 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

104 
	#bzîo
(
de°
, 
Àn
) (() \

105 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

106 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

107 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

111 
	#°r˝y
(
de°
, 
§c
) \

112 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

113 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

114 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

115 
__Æways_ölöe
 *

116 
__NTH
 (
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

118  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

119 
	}
}

122 #ifde‡
__USE_GNU


123 
	#°p˝y
(
de°
, 
§c
) \

124 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

125 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

126 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

127 
__Æways_ölöe
 *

128 
__NTH
 (
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

131 
	}
}

135 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

136 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

137 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

138 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

139 
__Æways_ölöe
 *

140 
__NTH
 (
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

141 
size_t
 
__Àn
))

143  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

144 
	}
}

148 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

149 
size_t
 
__de°Àn
Ë
__THROW
;

150 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

151 
__c⁄°
 *
__§c
,

152 
size_t
 
__n
), 
°≤˝y
);

154 
__Æways_ölöe
 *

155 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

158 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

159  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

160  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

161 
	}
}

164 
	#°rˇt
(
de°
, 
§c
) \

165 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

166 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

167 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

168 
__Æways_ölöe
 *

169 
__NTH
 (
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

171  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

172 
	}
}

175 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

176 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

177 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

178 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

179 
__Æways_ölöe
 *

180 
__NTH
 (
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

181 
size_t
 
__Àn
))

183  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

184 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


7 
	~<bôs/w‹dsize.h
>

9 
	#SYS__sys˘l
 
__NR__sys˘l


	)

10 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

11 
	#SYS_ac˘
 
__NR_ac˘


	)

12 
	#SYS_add_key
 
__NR_add_key


	)

13 
	#SYS_adjtimex
 
__NR_adjtimex


	)

14 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

15 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

16 
	#SYS_brk
 
__NR_brk


	)

17 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

18 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

19 
	#SYS_chdú
 
__NR_chdú


	)

20 
	#SYS_chmod
 
__NR_chmod


	)

21 
	#SYS_chown
 
__NR_chown


	)

22 
	#SYS_chroŸ
 
__NR_chroŸ


	)

23 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

24 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

25 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

26 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

27 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

28 
	#SYS_˛o£
 
__NR_˛o£


	)

29 
	#SYS_¸ót
 
__NR_¸ót


	)

30 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

31 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

32 
	#SYS_dup
 
__NR_dup


	)

33 
	#SYS_dup2
 
__NR_dup2


	)

34 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

35 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

36 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

37 
	#SYS_execve
 
__NR_execve


	)

38 
	#SYS_exô
 
__NR_exô


	)

39 
	#SYS_exô_group
 
__NR_exô_group


	)

40 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

41 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

42 
	#SYS_fchdú
 
__NR_fchdú


	)

43 
	#SYS_fchmod
 
__NR_fchmod


	)

44 
	#SYS_fchmod©
 
__NR_fchmod©


	)

45 
	#SYS_fchown
 
__NR_fchown


	)

46 
	#SYS_fchow«t
 
__NR_fchow«t


	)

47 
	#SYS_f˙é
 
__NR_f˙é


	)

48 
	#SYS_fd©async
 
__NR_fd©async


	)

49 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

50 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

51 
	#SYS_Êock
 
__NR_Êock


	)

52 
	#SYS_f‹k
 
__NR_f‹k


	)

53 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

54 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

55 
	#SYS_f°©
 
__NR_f°©


	)

56 
	#SYS_f°©fs
 
__NR_f°©fs


	)

57 
	#SYS_fsync
 
__NR_fsync


	)

58 
	#SYS_·runˇã
 
__NR_·runˇã


	)

59 
	#SYS_fuãx
 
__NR_fuãx


	)

60 
	#SYS_futimeßt
 
__NR_futimeßt


	)

61 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

62 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

63 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

64 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

65 
	#SYS_gëcwd
 
__NR_gëcwd


	)

66 
	#SYS_gëdíts
 
__NR_gëdíts


	)

67 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

68 
	#SYS_gëegid
 
__NR_gëegid


	)

69 
	#SYS_gëeuid
 
__NR_gëeuid


	)

70 
	#SYS_gëgid
 
__NR_gëgid


	)

71 
	#SYS_gëgroups
 
__NR_gëgroups


	)

72 
	#SYS_gëôimî
 
__NR_gëôimî


	)

73 
	#SYS_gëpgid
 
__NR_gëpgid


	)

74 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

75 
	#SYS_gëpid
 
__NR_gëpid


	)

76 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

77 
	#SYS_gëµid
 
__NR_gëµid


	)

78 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

79 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

80 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

81 
	#SYS_gëæimô
 
__NR_gëæimô


	)

82 
	#SYS_gërußge
 
__NR_gërußge


	)

83 
	#SYS_gësid
 
__NR_gësid


	)

84 
	#SYS_gëtid
 
__NR_gëtid


	)

85 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

86 
	#SYS_gëuid
 
__NR_gëuid


	)

87 
	#SYS_gëx©å
 
__NR_gëx©å


	)

88 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

89 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

90 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

91 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

92 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

93 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

94 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

95 
	#SYS_io_£tup
 
__NR_io_£tup


	)

96 
	#SYS_io_submô
 
__NR_io_submô


	)

97 
	#SYS_io˘l
 
__NR_io˘l


	)

98 
	#SYS_i›îm
 
__NR_i›îm


	)

99 
	#SYS_i›l
 
__NR_i›l


	)

100 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

101 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

102 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

103 
	#SYS_key˘l
 
__NR_key˘l


	)

104 
	#SYS_kûl
 
__NR_kûl


	)

105 
	#SYS_lchown
 
__NR_lchown


	)

106 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

107 
	#SYS_lök
 
__NR_lök


	)

108 
	#SYS_lök©
 
__NR_lök©


	)

109 
	#SYS_li°x©å
 
__NR_li°x©å


	)

110 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

111 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

112 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

113 
	#SYS_l£ek
 
__NR_l£ek


	)

114 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

115 
	#SYS_l°©
 
__NR_l°©


	)

116 
	#SYS_madvi£
 
__NR_madvi£


	)

117 
	#SYS_mböd
 
__NR_mböd


	)

118 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

119 
	#SYS_möc‹e
 
__NR_möc‹e


	)

120 
	#SYS_mkdú
 
__NR_mkdú


	)

121 
	#SYS_mkdú©
 
__NR_mkdú©


	)

122 
	#SYS_mknod
 
__NR_mknod


	)

123 
	#SYS_mknod©
 
__NR_mknod©


	)

124 
	#SYS_mlock
 
__NR_mlock


	)

125 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

126 
	#SYS_mm≠
 
__NR_mm≠


	)

127 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

128 
	#SYS_mou¡
 
__NR_mou¡


	)

129 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

130 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

131 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

132 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

133 
	#SYS_mq_›í
 
__NR_mq_›í


	)

134 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

135 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

136 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

137 
	#SYS_mªm≠
 
__NR_mªm≠


	)

138 
	#SYS_msync
 
__NR_msync


	)

139 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

140 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

141 
	#SYS_munm≠
 
__NR_munm≠


	)

142 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

143 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

144 
	#SYS_›í
 
__NR_›í


	)

145 
	#SYS_›í©
 
__NR_›í©


	)

146 
	#SYS_∑u£
 
__NR_∑u£


	)

147 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

148 
	#SYS_pùe
 
__NR_pùe


	)

149 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

150 
	#SYS_pﬁl
 
__NR_pﬁl


	)

151 
	#SYS_µﬁl
 
__NR_µﬁl


	)

152 
	#SYS_¥˘l
 
__NR_¥˘l


	)

153 
	#SYS_¥ód64
 
__NR_¥ód64


	)

154 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

155 
	#SYS_±ø˚
 
__NR_±ø˚


	)

156 
	#SYS_puçmsg
 
__NR_puçmsg


	)

157 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

158 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

159 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

160 
	#SYS_ªad
 
__NR_ªad


	)

161 
	#SYS_ªadahód
 
__NR_ªadahód


	)

162 
	#SYS_ªadlök
 
__NR_ªadlök


	)

163 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

164 
	#SYS_ªadv
 
__NR_ªadv


	)

165 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

166 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

167 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

168 
	#SYS_ª«me
 
__NR_ª«me


	)

169 
	#SYS_ª«mót
 
__NR_ª«mót


	)

170 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

171 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

172 
	#SYS_rmdú
 
__NR_rmdú


	)

173 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

174 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

175 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

176 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

177 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

178 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

179 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

180 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

181 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

182 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

183 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

184 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

185 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

186 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

187 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

188 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

189 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

190 
	#SYS_£À˘
 
__NR_£À˘


	)

191 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

192 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

193 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

194 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

195 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

196 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

197 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

198 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

199 
	#SYS_£tgid
 
__NR_£tgid


	)

200 
	#SYS_£tgroups
 
__NR_£tgroups


	)

201 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

202 
	#SYS_£tôimî
 
__NR_£tôimî


	)

203 
	#SYS_£çgid
 
__NR_£çgid


	)

204 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

205 
	#SYS_£åegid
 
__NR_£åegid


	)

206 
	#SYS_£åesgid
 
__NR_£åesgid


	)

207 
	#SYS_£åesuid
 
__NR_£åesuid


	)

208 
	#SYS_£åeuid
 
__NR_£åeuid


	)

209 
	#SYS_£ålimô
 
__NR_£ålimô


	)

210 
	#SYS_£tsid
 
__NR_£tsid


	)

211 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

212 
	#SYS_£tuid
 
__NR_£tuid


	)

213 
	#SYS_£tx©å
 
__NR_£tx©å


	)

214 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

215 
	#SYS_•li˚
 
__NR_•li˚


	)

216 
	#SYS_°©
 
__NR_°©


	)

217 
	#SYS_°©fs
 
__NR_°©fs


	)

218 
	#SYS_sw≠off
 
__NR_sw≠off


	)

219 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

220 
	#SYS_symlök
 
__NR_symlök


	)

221 
	#SYS_symlök©
 
__NR_symlök©


	)

222 
	#SYS_sync
 
__NR_sync


	)

223 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

224 
	#SYS_sysfs
 
__NR_sysfs


	)

225 
	#SYS_sysöfo
 
__NR_sysöfo


	)

226 
	#SYS_sy¶og
 
__NR_sy¶og


	)

227 
	#SYS_ãe
 
__NR_ãe


	)

228 
	#SYS_tgkûl
 
__NR_tgkûl


	)

229 
	#SYS_time
 
__NR_time


	)

230 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

231 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

232 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

233 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

234 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

235 
	#SYS_times
 
__NR_times


	)

236 
	#SYS_tkûl
 
__NR_tkûl


	)

237 
	#SYS_åunˇã
 
__NR_åunˇã


	)

238 
	#SYS_umask
 
__NR_umask


	)

239 
	#SYS_umou¡2
 
__NR_umou¡2


	)

240 
	#SYS_u«me
 
__NR_u«me


	)

241 
	#SYS_u∆ök
 
__NR_u∆ök


	)

242 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

243 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

244 
	#SYS_u£lib
 
__NR_u£lib


	)

245 
	#SYS_u°©
 
__NR_u°©


	)

246 
	#SYS_utime
 
__NR_utime


	)

247 
	#SYS_utimes
 
__NR_utimes


	)

248 
	#SYS_vf‹k
 
__NR_vf‹k


	)

249 
	#SYS_vh™gup
 
__NR_vh™gup


	)

250 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

251 
	#SYS_v£rvî
 
__NR_v£rvî


	)

252 
	#SYS_waô4
 
__NR_waô4


	)

253 
	#SYS_waôid
 
__NR_waôid


	)

254 
	#SYS_wrôe
 
__NR_wrôe


	)

255 
	#SYS_wrôev
 
__NR_wrôev


	)

256 #i‡
__WORDSIZE
 == 64

257 
	#SYS_ac˚±
 
__NR_ac˚±


	)

258 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

259 
	#SYS_böd
 
__NR_böd


	)

260 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

261 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

262 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

263 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

264 
	#SYS_gësock«me
 
__NR_gësock«me


	)

265 
	#SYS_gësock›t
 
__NR_gësock›t


	)

266 
	#SYS_li°í
 
__NR_li°í


	)

267 
	#SYS_msg˘l
 
__NR_msg˘l


	)

268 
	#SYS_msggë
 
__NR_msggë


	)

269 
	#SYS_msgrcv
 
__NR_msgrcv


	)

270 
	#SYS_msg¢d
 
__NR_msg¢d


	)

271 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

272 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

273 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

274 
	#SYS_£curôy
 
__NR_£curôy


	)

275 
	#SYS_£m˘l
 
__NR_£m˘l


	)

276 
	#SYS_£mgë
 
__NR_£mgë


	)

277 
	#SYS_£m›
 
__NR_£m›


	)

278 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

279 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

280 
	#SYS_£ndto
 
__NR_£ndto


	)

281 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

282 
	#SYS_shm©
 
__NR_shm©


	)

283 
	#SYS_shm˘l
 
__NR_shm˘l


	)

284 
	#SYS_shmdt
 
__NR_shmdt


	)

285 
	#SYS_shmgë
 
__NR_shmgë


	)

286 
	#SYS_shutdown
 
__NR_shutdown


	)

287 
	#SYS_sockë
 
__NR_sockë


	)

288 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

289 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

291 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

292 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

293 
	#SYS_bdÊush
 
__NR_bdÊush


	)

294 
	#SYS_bªak
 
__NR_bªak


	)

295 
	#SYS_chown32
 
__NR_chown32


	)

296 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

297 
	#SYS_fchown32
 
__NR_fchown32


	)

298 
	#SYS_f˙é64
 
__NR_f˙é64


	)

299 
	#SYS_f°©64
 
__NR_f°©64


	)

300 
	#SYS_f°©©64
 
__NR_f°©©64


	)

301 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

302 
	#SYS_·ime
 
__NR_·ime


	)

303 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

304 
	#SYS_gë˝u
 
__NR_gë˝u


	)

305 
	#SYS_gëegid32
 
__NR_gëegid32


	)

306 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

307 
	#SYS_gëgid32
 
__NR_gëgid32


	)

308 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

309 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

310 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

311 
	#SYS_gëuid32
 
__NR_gëuid32


	)

312 
	#SYS_gây
 
__NR_gây


	)

313 
	#SYS_idÀ
 
__NR_idÀ


	)

314 
	#SYS_ùc
 
__NR_ùc


	)

315 
	#SYS_lchown32
 
__NR_lchown32


	)

316 
	#SYS_lock
 
__NR_lock


	)

317 
	#SYS_l°©64
 
__NR_l°©64


	)

318 
	#SYS_madvi£1
 
__NR_madvi£1


	)

319 
	#SYS_mm≠2
 
__NR_mm≠2


	)

320 
	#SYS_mpx
 
__NR_mpx


	)

321 
	#SYS_ni˚
 
__NR_ni˚


	)

322 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

323 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

324 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

325 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

326 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

327 
	#SYS_¥of
 
__NR_¥of


	)

328 
	#SYS_¥ofû
 
__NR_¥ofû


	)

329 
	#SYS_ªaddú
 
__NR_ªaddú


	)

330 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

331 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

332 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

333 
	#SYS_£tgid32
 
__NR_£tgid32


	)

334 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

335 
	#SYS_£åegid32
 
__NR_£åegid32


	)

336 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

337 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

338 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

339 
	#SYS_£tuid32
 
__NR_£tuid32


	)

340 
	#SYS_sgëmask
 
__NR_sgëmask


	)

341 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

342 
	#SYS_sig«l
 
__NR_sig«l


	)

343 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

344 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

345 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

346 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

347 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

348 
	#SYS_s£tmask
 
__NR_s£tmask


	)

349 
	#SYS_°©64
 
__NR_°©64


	)

350 
	#SYS_°©fs64
 
__NR_°©fs64


	)

351 
	#SYS_°ime
 
__NR_°ime


	)

352 
	#SYS_°ty
 
__NR_°ty


	)

353 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

354 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

355 
	#SYS_ulimô
 
__NR_ulimô


	)

356 
	#SYS_umou¡
 
__NR_umou¡


	)

357 
	#SYS_vm86
 
__NR_vm86


	)

358 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

359 
	#SYS_waôpid
 
__NR_waôpid


	)

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

119 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

120 #ñi‡
__WORDSIZE
 == 64

121 
	t__SQUAD_TYPE
 

	)

122 
	t__UQUAD_TYPE
 

	)

123 
	t__SWORD_TYPE
 

	)

124 
	t__UWORD_TYPE
 

	)

125 
	t__SLONG32_TYPE
 

	)

126 
	t__ULONG32_TYPE
 

	)

127 
	t__S64_TYPE
 

	)

128 
	t__U64_TYPE
 

	)

130 
	t__STD_TYPE
 

	)

134 
	~<bôs/ty≥sizes.h
>

137 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

138 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

139 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

140 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

141 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

142 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

143 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

144 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

145 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

146 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

147 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

148 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

149 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

150 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

151 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

152 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

153 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

154 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

156 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

157 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

158 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

161 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

164 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

167 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

172 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

173 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

176 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

177 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

180 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

181 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

183 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

187 
__off64_t
 
	t__loff_t
;

188 
__quad_t
 *
	t__qaddr_t
;

189 *
	t__ˇddr_t
;

192 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

195 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

198 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_POSIX


95 #unde‡
__USE_POSIX2


96 #unde‡
__USE_POSIX199309


97 #unde‡
__USE_POSIX199506


98 #unde‡
__USE_XOPEN


99 #unde‡
__USE_XOPEN_EXTENDED


100 #unde‡
__USE_UNIX98


101 #unde‡
__USE_XOPEN2K


102 #unde‡
__USE_LARGEFILE


103 #unde‡
__USE_LARGEFILE64


104 #unde‡
__USE_FILE_OFFSET64


105 #unde‡
__USE_BSD


106 #unde‡
__USE_SVID


107 #unde‡
__USE_MISC


108 #unde‡
__USE_ATFILE


109 #unde‡
__USE_GNU


110 #unde‡
__USE_REENTRANT


111 #unde‡
__USE_FORTIFY_LEVEL


112 #unde‡
__FAVOR_BSD


113 #unde‡
__KERNEL_STRICT_NAMES


117 #i‚de‡
_LOOSE_KERNEL_NAMES


118 
	#__KERNEL_STRICT_NAMES


	)

122 
	#__USE_ANSI
 1

	)

131 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


132 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

133 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

135 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

140 #i‡
deföed
 
_BSD_SOURCE
 && \

141 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

142 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

143 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

144 
	#__FAVOR_BSD
 1

	)

148 #ifde‡
_GNU_SOURCE


149 #unde‡
_ISOC99_SOURCE


150 
	#_ISOC99_SOURCE
 1

	)

151 #unde‡
_POSIX_SOURCE


152 
	#_POSIX_SOURCE
 1

	)

153 #unde‡
_POSIX_C_SOURCE


154 
	#_POSIX_C_SOURCE
 200112L

	)

155 #unde‡
_XOPEN_SOURCE


156 
	#_XOPEN_SOURCE
 600

	)

157 #unde‡
_XOPEN_SOURCE_EXTENDED


158 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

159 #unde‡
_LARGEFILE64_SOURCE


160 
	#_LARGEFILE64_SOURCE
 1

	)

161 #unde‡
_BSD_SOURCE


162 
	#_BSD_SOURCE
 1

	)

163 #unde‡
_SVID_SOURCE


164 
	#_SVID_SOURCE
 1

	)

165 #unde‡
_ATFILE_SOURCE


166 
	#_ATFILE_SOURCE
 1

	)

171 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

172 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

173 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

174 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

175 
	#_BSD_SOURCE
 1

	)

176 
	#_SVID_SOURCE
 1

	)

183 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

184 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

185 
	#__USE_ISOC99
 1

	)

190 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

191 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

192 
	#_POSIX_SOURCE
 1

	)

193 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

194 
	#_POSIX_C_SOURCE
 2

	)

195 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

196 
	#_POSIX_C_SOURCE
 199506L

	)

198 
	#_POSIX_C_SOURCE
 200112L

	)

202 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


203 
	#__USE_POSIX
 1

	)

206 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


207 
	#__USE_POSIX2
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

211 
	#__USE_POSIX199309
 1

	)

214 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

215 
	#__USE_POSIX199506
 1

	)

218 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

219 
	#__USE_XOPEN2K
 1

	)

222 #ifdef 
_XOPEN_SOURCE


223 
	#__USE_XOPEN
 1

	)

224 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

225 
	#__USE_XOPEN_EXTENDED
 1

	)

226 
	#__USE_UNIX98
 1

	)

227 #unde‡
_LARGEFILE_SOURCE


228 
	#_LARGEFILE_SOURCE
 1

	)

229 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

230 
	#__USE_XOPEN2K
 1

	)

231 #unde‡
__USE_ISOC99


232 
	#__USE_ISOC99
 1

	)

235 #ifde‡
_XOPEN_SOURCE_EXTENDED


236 
	#__USE_XOPEN_EXTENDED
 1

	)

241 #ifde‡
_LARGEFILE_SOURCE


242 
	#__USE_LARGEFILE
 1

	)

245 #ifde‡
_LARGEFILE64_SOURCE


246 
	#__USE_LARGEFILE64
 1

	)

249 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

250 
	#__USE_FILE_OFFSET64
 1

	)

253 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


254 
	#__USE_MISC
 1

	)

257 #ifdef 
_BSD_SOURCE


258 
	#__USE_BSD
 1

	)

261 #ifdef 
_SVID_SOURCE


262 
	#__USE_SVID
 1

	)

265 #ifdef 
_ATFILE_SOURCE


266 
	#__USE_ATFILE
 1

	)

269 #ifdef 
_GNU_SOURCE


270 
	#__USE_GNU
 1

	)

273 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


274 
	#__USE_REENTRANT
 1

	)

277 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

278 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0 \

279 && (
__GNUC_PREREQ
 (4, 1) \

280 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
__GNUC_PREREQ
 (4, 0)) \

281 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
__GNUC_PREREQ
 (3, 4) \

282 && 
	g__GNUC_MINOR__
 == 4 \

283 && (
__GNUC_PATCHLEVEL__
 > 2 \

284 || (
__GNUC_PATCHLEVEL__
 =2 && 
__GNUC_RH_RELEASE__
 >= 8))))

285 #i‡
_FORTIFY_SOURCE
 > 1

286 
	#__USE_FORTIFY_LEVEL
 2

	)

288 
	#__USE_FORTIFY_LEVEL
 1

	)

291 
	#__USE_FORTIFY_LEVEL
 0

	)

295 
	#__STDC_IEC_559__
 1

	)

296 
	#__STDC_IEC_559_COMPLEX__
 1

	)

299 
	#__STDC_ISO_10646__
 200009L

	)

307 #unde‡
__GNU_LIBRARY__


308 
	#__GNU_LIBRARY__
 6

	)

312 
	#__GLIBC__
 2

	)

313 
	#__GLIBC_MINOR__
 5

	)

315 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

316 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

319 #i‡
deföed
 
__GNUC__
 \

320 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

321 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

322 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

323 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

327 #i‚de‡
__ASSEMBLER__


328 #i‚de‡
_SYS_CDEFS_H


329 
	~<sys/cdefs.h
>

334 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


335 
	#__USE_LARGEFILE
 1

	)

336 
	#__USE_LARGEFILE64
 1

	)

342 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

343 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


344 
	#__USE_EXTERN_INLINES
 1

	)

352 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

148 
	#_IO_SKIPWS
 01

	)

149 
	#_IO_LEFT
 02

	)

150 
	#_IO_RIGHT
 04

	)

151 
	#_IO_INTERNAL
 010

	)

152 
	#_IO_DEC
 020

	)

153 
	#_IO_OCT
 040

	)

154 
	#_IO_HEX
 0100

	)

155 
	#_IO_SHOWBASE
 0200

	)

156 
	#_IO_SHOWPOINT
 0400

	)

157 
	#_IO_UPPERCASE
 01000

	)

158 
	#_IO_SHOWPOS
 02000

	)

159 
	#_IO_SCIENTIFIC
 04000

	)

160 
	#_IO_FIXED
 010000

	)

161 
	#_IO_UNITBUF
 020000

	)

162 
	#_IO_STDIO
 040000

	)

163 
	#_IO_DONT_CLOSE
 0100000

	)

164 
	#_IO_BOOLALPHA
 0200000

	)

167 
_IO_jump_t
; 
	g_IO_FILE
;

170 #ifde‡
_IO_MTSAFE_IO


171 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

172 
	~<bôs/°dio-lock.h
>

177 
	t_IO_lock_t
;

183 
	s_IO_m¨kî
 {

184 
_IO_m¨kî
 *
	m_√xt
;

185 
_IO_FILE
 *
	m_sbuf
;

189 
	m_pos
;

191 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

192 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

193 
	mpublic
:

194 
°ªamm¨kî
(
°ªambuf
 *
sb
);

195 ~
°ªamm¨kî
();

196 
ßvög
(Ë{  
	m_•os
 == -2; }

197 
dñè
(
°ªamm¨kî
&);

198 
dñè
();

203 
	e__codecvt_ªsu…


205 
	m__codecvt_ok
,

206 
	m__codecvt_∑πül
,

207 
	m__codecvt_îr‹
,

208 
	m__codecvt_noc⁄v


211 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


214 
	s_IO_codecvt


216 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

217 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

218 
	m__mb°©e_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 *,

221 c⁄° 
	mwch¨_t
 **, *,

223 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

224 
	m__mb°©e_t
 *, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *,

229 c⁄° **, 
	mwch¨_t
 *,

230 
	mwch¨_t
 *, wchar_t **);

231 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

233 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

234 c⁄° *, c⁄° *, 
	m_IO_size_t
);

235 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

237 
_IO_ic⁄v_t
 
	m__cd_ö
;

238 
_IO_ic⁄v_t
 
	m__cd_out
;

242 
	s_IO_wide_d©a


244 
wch¨_t
 *
	m_IO_ªad_±r
;

245 
wch¨_t
 *
	m_IO_ªad_íd
;

246 
wch¨_t
 *
	m_IO_ªad_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_ba£
;

248 
wch¨_t
 *
	m_IO_wrôe_±r
;

249 
wch¨_t
 *
	m_IO_wrôe_íd
;

250 
wch¨_t
 *
	m_IO_buf_ba£
;

251 
wch¨_t
 *
	m_IO_buf_íd
;

253 
wch¨_t
 *
	m_IO_ßve_ba£
;

254 
wch¨_t
 *
	m_IO_backup_ba£
;

256 
wch¨_t
 *
	m_IO_ßve_íd
;

258 
__mb°©e_t
 
	m_IO_°©e
;

259 
__mb°©e_t
 
	m_IO_œ°_°©e
;

260 
_IO_codecvt
 
	m_codecvt
;

262 
wch¨_t
 
	m_sh‹tbuf
[1];

264 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

268 
	s_IO_FILE
 {

269 
	m_Êags
;

270 
	#_IO_fûe_Êags
 
_Êags


	)

274 * 
	m_IO_ªad_±r
;

275 * 
	m_IO_ªad_íd
;

276 * 
	m_IO_ªad_ba£
;

277 * 
	m_IO_wrôe_ba£
;

278 * 
	m_IO_wrôe_±r
;

279 * 
	m_IO_wrôe_íd
;

280 * 
	m_IO_buf_ba£
;

281 * 
	m_IO_buf_íd
;

283 *
	m_IO_ßve_ba£
;

284 *
	m_IO_backup_ba£
;

285 *
	m_IO_ßve_íd
;

287 
_IO_m¨kî
 *
	m_m¨kîs
;

289 
_IO_FILE
 *
	m_chaö
;

291 
	m_fûío
;

293 
	m_blksize
;

295 
	m_Êags2
;

297 
_IO_off_t
 
	m_ﬁd_off£t
;

299 
	#__HAVE_COLUMN


	)

301 
	m_cur_cﬁumn
;

302 sig√d 
	m_vèbÀ_off£t
;

303 
	m_sh‹tbuf
[1];

307 
_IO_lock_t
 *
	m_lock
;

308 #ifde‡
_IO_USE_OLD_IO_FILE


311 
	s_IO_FILE_com∂ëe


313 
_IO_FILE
 
	m_fûe
;

315 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

316 
_IO_off64_t
 
	m_off£t
;

317 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


319 
_IO_codecvt
 *
	m_codecvt
;

320 
_IO_wide_d©a
 *
	m_wide_d©a
;

321 
_IO_FILE
 *
	m_‰ìªs_li°
;

322 *
	m_‰ìªs_buf
;

323 
size_t
 
	m_‰ìªs_size
;

325 *
	m__∑d1
;

326 *
	m__∑d2
;

327 *
	m__∑d3
;

328 *
	m__∑d4
;

329 
size_t
 
	m__∑d5
;

331 
	m_mode
;

333 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

337 #i‚de‡
__˝lu•lus


338 
_IO_FILE
 
	t_IO_FILE
;

341 
	g_IO_FILE_∂us
;

343 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

344 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

345 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

346 #i‚de‡
_LIBC


347 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

348 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

349 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

351 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

352 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

353 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

361 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

369 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

370 
	tsize_t
 
	t__n
);

378 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

381 
	t__io_˛o£_‚
 (*
	t__cookõ
);

384 #ifde‡
_GNU_SOURCE


386 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

387 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

388 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

389 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

394 
__io_ªad_‚
 *
	mªad
;

395 
__io_wrôe_‚
 *
	mwrôe
;

396 
__io_£ek_‚
 *
	m£ek
;

397 
__io_˛o£_‚
 *
	m˛o£
;

398 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

399 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

401 
	g_IO_cookõ_fûe
;

404 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

405 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

409 #ifde‡
__˝lu•lus


413 
__undîÊow
 (
_IO_FILE
 *);

414 
__uÊow
 (
_IO_FILE
 *);

415 
__ovîÊow
 (
_IO_FILE
 *, );

416 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

417 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

418 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

420 #i‡ 
__GNUC__
 >= 3

421 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

423 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

426 
	#_IO_gëc_u∆ocked
(
_Â
) \

427 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

428 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

429 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

430 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

431 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

432 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

433 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

435 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

436 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

438 
	#_IO_gëwc_u∆ocked
(
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

441 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

442 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

443 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

444 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

445 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

446 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

448 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

449 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

451 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

452 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

453 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

454 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

456 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

459 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

460 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

462 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

463 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

464 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

466 #ifde‡
_IO_MTSAFE_IO


467 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

468 
	#_IO_Êockfûe
(
_Â
) \

469 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

470 
	#_IO_fu∆ockfûe
(
_Â
) \

471 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

473 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

474 
	#_IO_Êockfûe
(
_Â
Ë

	)

475 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

476 
	#_IO_·rylockfûe
(
_Â
Ë

	)

477 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

478 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

481 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

482 
_IO_va_li°
, *
__ª°ri˘
);

483 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

484 
_IO_va_li°
);

485 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

486 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

488 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

489 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

491 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

493 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


494 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

495 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

496 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

497 #i‡
__GNUC__
 >= 2

500 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


501 
	~<shlib-com∑t.h
>

502 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

503 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

504 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

505 c⁄° 
_IO_°dö_u£d
;

506 
wók_exã∫
 (
_IO_°dö_u£d
);

509 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


510 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

514 
	#_IO_fwide
(
__Â
, 
__mode
) \

515 ({ 
__ªsu…
 = (
__mode
); \

516 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

518 i‡((
__Â
)->
_mode
 == 0) \

520 (
__Â
)->
_mode
 = -1; \

521 
__ªsu…
 = (
__Â
)->
_mode
; \

523 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

524 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

526 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

527 
__ªsu…
; })

	)

530 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

531 
_IO_va_li°
, *
__ª°ri˘
);

532 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

533 
_IO_va_li°
);

534 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

535 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

538 #ifde‡
__LDBL_COMPAT


539 
	~<bôs/libio-ldbl.h
>

542 #ifde‡
__˝lu•lus


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm-i386/unistd.h

1 #i‚de‡
_ASM_I386_UNISTD_H_


2 
	#_ASM_I386_UNISTD_H_


	)

8 
	#__NR_ª°¨t_sysˇŒ
 0

	)

9 
	#__NR_exô
 1

	)

10 
	#__NR_f‹k
 2

	)

11 
	#__NR_ªad
 3

	)

12 
	#__NR_wrôe
 4

	)

13 
	#__NR_›í
 5

	)

14 
	#__NR_˛o£
 6

	)

15 
	#__NR_waôpid
 7

	)

16 
	#__NR_¸ót
 8

	)

17 
	#__NR_lök
 9

	)

18 
	#__NR_u∆ök
 10

	)

19 
	#__NR_execve
 11

	)

20 
	#__NR_chdú
 12

	)

21 
	#__NR_time
 13

	)

22 
	#__NR_mknod
 14

	)

23 
	#__NR_chmod
 15

	)

24 
	#__NR_lchown
 16

	)

25 
	#__NR_bªak
 17

	)

26 
	#__NR_ﬁd°©
 18

	)

27 
	#__NR_l£ek
 19

	)

28 
	#__NR_gëpid
 20

	)

29 
	#__NR_mou¡
 21

	)

30 
	#__NR_umou¡
 22

	)

31 
	#__NR_£tuid
 23

	)

32 
	#__NR_gëuid
 24

	)

33 
	#__NR_°ime
 25

	)

34 
	#__NR_±ø˚
 26

	)

35 
	#__NR_Æ¨m
 27

	)

36 
	#__NR_ﬁdf°©
 28

	)

37 
	#__NR_∑u£
 29

	)

38 
	#__NR_utime
 30

	)

39 
	#__NR_°ty
 31

	)

40 
	#__NR_gây
 32

	)

41 
	#__NR_ac˚ss
 33

	)

42 
	#__NR_ni˚
 34

	)

43 
	#__NR_·ime
 35

	)

44 
	#__NR_sync
 36

	)

45 
	#__NR_kûl
 37

	)

46 
	#__NR_ª«me
 38

	)

47 
	#__NR_mkdú
 39

	)

48 
	#__NR_rmdú
 40

	)

49 
	#__NR_dup
 41

	)

50 
	#__NR_pùe
 42

	)

51 
	#__NR_times
 43

	)

52 
	#__NR_¥of
 44

	)

53 
	#__NR_brk
 45

	)

54 
	#__NR_£tgid
 46

	)

55 
	#__NR_gëgid
 47

	)

56 
	#__NR_sig«l
 48

	)

57 
	#__NR_gëeuid
 49

	)

58 
	#__NR_gëegid
 50

	)

59 
	#__NR_ac˘
 51

	)

60 
	#__NR_umou¡2
 52

	)

61 
	#__NR_lock
 53

	)

62 
	#__NR_io˘l
 54

	)

63 
	#__NR_f˙é
 55

	)

64 
	#__NR_mpx
 56

	)

65 
	#__NR_£çgid
 57

	)

66 
	#__NR_ulimô
 58

	)

67 
	#__NR_ﬁdﬁdu«me
 59

	)

68 
	#__NR_umask
 60

	)

69 
	#__NR_chroŸ
 61

	)

70 
	#__NR_u°©
 62

	)

71 
	#__NR_dup2
 63

	)

72 
	#__NR_gëµid
 64

	)

73 
	#__NR_gëpgΩ
 65

	)

74 
	#__NR_£tsid
 66

	)

75 
	#__NR_siga˘i⁄
 67

	)

76 
	#__NR_sgëmask
 68

	)

77 
	#__NR_s£tmask
 69

	)

78 
	#__NR_£åeuid
 70

	)

79 
	#__NR_£åegid
 71

	)

80 
	#__NR_sigsu•íd
 72

	)

81 
	#__NR_sig≥ndög
 73

	)

82 
	#__NR_£tho°«me
 74

	)

83 
	#__NR_£ålimô
 75

	)

84 
	#__NR_gëæimô
 76

	)

85 
	#__NR_gërußge
 77

	)

86 
	#__NR_gëtimeofday
 78

	)

87 
	#__NR_£âimeofday
 79

	)

88 
	#__NR_gëgroups
 80

	)

89 
	#__NR_£tgroups
 81

	)

90 
	#__NR_£À˘
 82

	)

91 
	#__NR_symlök
 83

	)

92 
	#__NR_ﬁdl°©
 84

	)

93 
	#__NR_ªadlök
 85

	)

94 
	#__NR_u£lib
 86

	)

95 
	#__NR_sw≠⁄
 87

	)

96 
	#__NR_ªboŸ
 88

	)

97 
	#__NR_ªaddú
 89

	)

98 
	#__NR_mm≠
 90

	)

99 
	#__NR_munm≠
 91

	)

100 
	#__NR_åunˇã
 92

	)

101 
	#__NR_·runˇã
 93

	)

102 
	#__NR_fchmod
 94

	)

103 
	#__NR_fchown
 95

	)

104 
	#__NR_gë¥i‹ôy
 96

	)

105 
	#__NR_£çri‹ôy
 97

	)

106 
	#__NR_¥ofû
 98

	)

107 
	#__NR_°©fs
 99

	)

108 
	#__NR_f°©fs
 100

	)

109 
	#__NR_i›îm
 101

	)

110 
	#__NR_sockëˇŒ
 102

	)

111 
	#__NR_sy¶og
 103

	)

112 
	#__NR_£tôimî
 104

	)

113 
	#__NR_gëôimî
 105

	)

114 
	#__NR_°©
 106

	)

115 
	#__NR_l°©
 107

	)

116 
	#__NR_f°©
 108

	)

117 
	#__NR_ﬁdu«me
 109

	)

118 
	#__NR_i›l
 110

	)

119 
	#__NR_vh™gup
 111

	)

120 
	#__NR_idÀ
 112

	)

121 
	#__NR_vm86ﬁd
 113

	)

122 
	#__NR_waô4
 114

	)

123 
	#__NR_sw≠off
 115

	)

124 
	#__NR_sysöfo
 116

	)

125 
	#__NR_ùc
 117

	)

126 
	#__NR_fsync
 118

	)

127 
	#__NR_sigªtu∫
 119

	)

128 
	#__NR_˛⁄e
 120

	)

129 
	#__NR_£tdomaö«me
 121

	)

130 
	#__NR_u«me
 122

	)

131 
	#__NR_modify_ldt
 123

	)

132 
	#__NR_adjtimex
 124

	)

133 
	#__NR_m¥Ÿe˘
 125

	)

134 
	#__NR_sig¥ocmask
 126

	)

135 
	#__NR_¸óã_moduÀ
 127

	)

136 
	#__NR_öô_moduÀ
 128

	)

137 
	#__NR_dñëe_moduÀ
 129

	)

138 
	#__NR_gë_kî√l_syms
 130

	)

139 
	#__NR_quŸa˘l
 131

	)

140 
	#__NR_gëpgid
 132

	)

141 
	#__NR_fchdú
 133

	)

142 
	#__NR_bdÊush
 134

	)

143 
	#__NR_sysfs
 135

	)

144 
	#__NR_≥rs⁄Æôy
 136

	)

145 
	#__NR_afs_sysˇŒ
 137

	)

146 
	#__NR_£tfsuid
 138

	)

147 
	#__NR_£tfsgid
 139

	)

148 
	#__NR__Œ£ek
 140

	)

149 
	#__NR_gëdíts
 141

	)

150 
	#__NR__√w£À˘
 142

	)

151 
	#__NR_Êock
 143

	)

152 
	#__NR_msync
 144

	)

153 
	#__NR_ªadv
 145

	)

154 
	#__NR_wrôev
 146

	)

155 
	#__NR_gësid
 147

	)

156 
	#__NR_fd©async
 148

	)

157 
	#__NR__sys˘l
 149

	)

158 
	#__NR_mlock
 150

	)

159 
	#__NR_mu∆ock
 151

	)

160 
	#__NR_mlockÆl
 152

	)

161 
	#__NR_mu∆ockÆl
 153

	)

162 
	#__NR_sched_£ç¨am
 154

	)

163 
	#__NR_sched_gë∑øm
 155

	)

164 
	#__NR_sched_£tscheduÀr
 156

	)

165 
	#__NR_sched_gëscheduÀr
 157

	)

166 
	#__NR_sched_yõld
 158

	)

167 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

168 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

169 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

170 
	#__NR_«no¶ìp
 162

	)

171 
	#__NR_mªm≠
 163

	)

172 
	#__NR_£åesuid
 164

	)

173 
	#__NR_gëªsuid
 165

	)

174 
	#__NR_vm86
 166

	)

175 
	#__NR_quîy_moduÀ
 167

	)

176 
	#__NR_pﬁl
 168

	)

177 
	#__NR_nfs£rv˘l
 169

	)

178 
	#__NR_£åesgid
 170

	)

179 
	#__NR_gëªsgid
 171

	)

180 
	#__NR_¥˘l
 172

	)

181 
	#__NR_π_sigªtu∫
 173

	)

182 
	#__NR_π_siga˘i⁄
 174

	)

183 
	#__NR_π_sig¥ocmask
 175

	)

184 
	#__NR_π_sig≥ndög
 176

	)

185 
	#__NR_π_sigtimedwaô
 177

	)

186 
	#__NR_π_sigqueueöfo
 178

	)

187 
	#__NR_π_sigsu•íd
 179

	)

188 
	#__NR_¥ód64
 180

	)

189 
	#__NR_pwrôe64
 181

	)

190 
	#__NR_chown
 182

	)

191 
	#__NR_gëcwd
 183

	)

192 
	#__NR_ˇpgë
 184

	)

193 
	#__NR_ˇp£t
 185

	)

194 
	#__NR_sigÆt°ack
 186

	)

195 
	#__NR_£ndfûe
 187

	)

196 
	#__NR_gëpmsg
 188

	)

197 
	#__NR_puçmsg
 189

	)

198 
	#__NR_vf‹k
 190

	)

199 
	#__NR_ugëæimô
 191

	)

200 
	#__NR_mm≠2
 192

	)

201 
	#__NR_åunˇã64
 193

	)

202 
	#__NR_·runˇã64
 194

	)

203 
	#__NR_°©64
 195

	)

204 
	#__NR_l°©64
 196

	)

205 
	#__NR_f°©64
 197

	)

206 
	#__NR_lchown32
 198

	)

207 
	#__NR_gëuid32
 199

	)

208 
	#__NR_gëgid32
 200

	)

209 
	#__NR_gëeuid32
 201

	)

210 
	#__NR_gëegid32
 202

	)

211 
	#__NR_£åeuid32
 203

	)

212 
	#__NR_£åegid32
 204

	)

213 
	#__NR_gëgroups32
 205

	)

214 
	#__NR_£tgroups32
 206

	)

215 
	#__NR_fchown32
 207

	)

216 
	#__NR_£åesuid32
 208

	)

217 
	#__NR_gëªsuid32
 209

	)

218 
	#__NR_£åesgid32
 210

	)

219 
	#__NR_gëªsgid32
 211

	)

220 
	#__NR_chown32
 212

	)

221 
	#__NR_£tuid32
 213

	)

222 
	#__NR_£tgid32
 214

	)

223 
	#__NR_£tfsuid32
 215

	)

224 
	#__NR_£tfsgid32
 216

	)

225 
	#__NR_pivŸ_roŸ
 217

	)

226 
	#__NR_möc‹e
 218

	)

227 
	#__NR_madvi£
 219

	)

228 
	#__NR_madvi£1
 219

	)

229 
	#__NR_gëdíts64
 220

	)

230 
	#__NR_f˙é64
 221

	)

232 
	#__NR_gëtid
 224

	)

233 
	#__NR_ªadahód
 225

	)

234 
	#__NR_£tx©å
 226

	)

235 
	#__NR_l£tx©å
 227

	)

236 
	#__NR_f£tx©å
 228

	)

237 
	#__NR_gëx©å
 229

	)

238 
	#__NR_lgëx©å
 230

	)

239 
	#__NR_fgëx©å
 231

	)

240 
	#__NR_li°x©å
 232

	)

241 
	#__NR_Œi°x©å
 233

	)

242 
	#__NR_Êi°x©å
 234

	)

243 
	#__NR_ªmovex©å
 235

	)

244 
	#__NR_Ãemovex©å
 236

	)

245 
	#__NR_‰emovex©å
 237

	)

246 
	#__NR_tkûl
 238

	)

247 
	#__NR_£ndfûe64
 239

	)

248 
	#__NR_fuãx
 240

	)

249 
	#__NR_sched_£èfföôy
 241

	)

250 
	#__NR_sched_gëafföôy
 242

	)

251 
	#__NR_£t_thªad_¨ó
 243

	)

252 
	#__NR_gë_thªad_¨ó
 244

	)

253 
	#__NR_io_£tup
 245

	)

254 
	#__NR_io_de°roy
 246

	)

255 
	#__NR_io_gëevíts
 247

	)

256 
	#__NR_io_submô
 248

	)

257 
	#__NR_io_ˇn˚l
 249

	)

258 
	#__NR_Ádvi£64
 250

	)

260 
	#__NR_exô_group
 252

	)

261 
	#__NR_lookup_dcookõ
 253

	)

262 
	#__NR_ïﬁl_¸óã
 254

	)

263 
	#__NR_ïﬁl_˘l
 255

	)

264 
	#__NR_ïﬁl_waô
 256

	)

265 
	#__NR_ªm≠_fûe_∑ges
 257

	)

266 
	#__NR_£t_tid_addªss
 258

	)

267 
	#__NR_timî_¸óã
 259

	)

268 
	#__NR_timî_£âime
 (
__NR_timî_¸óã
+1)

	)

269 
	#__NR_timî_gëtime
 (
__NR_timî_¸óã
+2)

	)

270 
	#__NR_timî_gëovîrun
 (
__NR_timî_¸óã
+3)

	)

271 
	#__NR_timî_dñëe
 (
__NR_timî_¸óã
+4)

	)

272 
	#__NR_˛ock_£âime
 (
__NR_timî_¸óã
+5)

	)

273 
	#__NR_˛ock_gëtime
 (
__NR_timî_¸óã
+6)

	)

274 
	#__NR_˛ock_gëªs
 (
__NR_timî_¸óã
+7)

	)

275 
	#__NR_˛ock_«no¶ìp
 (
__NR_timî_¸óã
+8)

	)

276 
	#__NR_°©fs64
 268

	)

277 
	#__NR_f°©fs64
 269

	)

278 
	#__NR_tgkûl
 270

	)

279 
	#__NR_utimes
 271

	)

280 
	#__NR_Ádvi£64_64
 272

	)

281 
	#__NR_v£rvî
 273

	)

282 
	#__NR_mböd
 274

	)

283 
	#__NR_gë_mempﬁicy
 275

	)

284 
	#__NR_£t_mempﬁicy
 276

	)

285 
	#__NR_mq_›í
 277

	)

286 
	#__NR_mq_u∆ök
 (
__NR_mq_›í
+1)

	)

287 
	#__NR_mq_timed£nd
 (
__NR_mq_›í
+2)

	)

288 
	#__NR_mq_timedª˚ive
 (
__NR_mq_›í
+3)

	)

289 
	#__NR_mq_nŸify
 (
__NR_mq_›í
+4)

	)

290 
	#__NR_mq_gë£èâr
 (
__NR_mq_›í
+5)

	)

291 
	#__NR_kexec_lﬂd
 283

	)

292 
	#__NR_waôid
 284

	)

294 
	#__NR_add_key
 286

	)

295 
	#__NR_ªque°_key
 287

	)

296 
	#__NR_key˘l
 288

	)

297 
	#__NR_i›rio_£t
 289

	)

298 
	#__NR_i›rio_gë
 290

	)

299 
	#__NR_öŸify_öô
 291

	)

300 
	#__NR_öŸify_add_w©ch
 292

	)

301 
	#__NR_öŸify_rm_w©ch
 293

	)

302 
	#__NR_migøã_∑ges
 294

	)

303 
	#__NR_›í©
 295

	)

304 
	#__NR_mkdú©
 296

	)

305 
	#__NR_mknod©
 297

	)

306 
	#__NR_fchow«t
 298

	)

307 
	#__NR_futimeßt
 299

	)

308 
	#__NR_f°©©64
 300

	)

309 
	#__NR_u∆ök©
 301

	)

310 
	#__NR_ª«mót
 302

	)

311 
	#__NR_lök©
 303

	)

312 
	#__NR_symlök©
 304

	)

313 
	#__NR_ªadlök©
 305

	)

314 
	#__NR_fchmod©
 306

	)

315 
	#__NR_Ác˚sßt
 307

	)

316 
	#__NR_p£À˘6
 308

	)

317 
	#__NR_µﬁl
 309

	)

318 
	#__NR_unsh¨e
 310

	)

319 
	#__NR_£t_robu°_li°
 311

	)

320 
	#__NR_gë_robu°_li°
 312

	)

321 
	#__NR_•li˚
 313

	)

322 
	#__NR_sync_fûe_ønge
 314

	)

323 
	#__NR_ãe
 315

	)

324 
	#__NR_vm•li˚
 316

	)

325 
	#__NR_move_∑ges
 317

	)

326 
	#__NR_gë˝u
 318

	)

	@/usr/include/asm-x86_64/unistd.h

1 #i‚de‡
_ASM_X86_64_UNISTD_H_


2 
	#_ASM_X86_64_UNISTD_H_


	)

4 #i‚de‡
__SYSCALL


5 
	#__SYSCALL
(
a
,
b
)

	)

15 
	#__NR_ªad
 0

	)

16 
	$__SYSCALL
(
__NR_ªad
, 
sys_ªad
)

17 
	#__NR_wrôe
 1

	)

18 
	$__SYSCALL
(
__NR_wrôe
, 
sys_wrôe
)

19 
	#__NR_›í
 2

	)

20 
	$__SYSCALL
(
__NR_›í
, 
sys_›í
)

21 
	#__NR_˛o£
 3

	)

22 
	$__SYSCALL
(
__NR_˛o£
, 
sys_˛o£
)

23 
	#__NR_°©
 4

	)

24 
	$__SYSCALL
(
__NR_°©
, 
sys_√w°©
)

25 
	#__NR_f°©
 5

	)

26 
	$__SYSCALL
(
__NR_f°©
, 
sys_√wf°©
)

27 
	#__NR_l°©
 6

	)

28 
	$__SYSCALL
(
__NR_l°©
, 
sys_√wl°©
)

29 
	#__NR_pﬁl
 7

	)

30 
	$__SYSCALL
(
__NR_pﬁl
, 
sys_pﬁl
)

32 
	#__NR_l£ek
 8

	)

33 
	$__SYSCALL
(
__NR_l£ek
, 
sys_l£ek
)

34 
	#__NR_mm≠
 9

	)

35 
	$__SYSCALL
(
__NR_mm≠
, 
sys_mm≠
)

36 
	#__NR_m¥Ÿe˘
 10

	)

37 
	$__SYSCALL
(
__NR_m¥Ÿe˘
, 
sys_m¥Ÿe˘
)

38 
	#__NR_munm≠
 11

	)

39 
	$__SYSCALL
(
__NR_munm≠
, 
sys_munm≠
)

40 
	#__NR_brk
 12

	)

41 
	$__SYSCALL
(
__NR_brk
, 
sys_brk
)

42 
	#__NR_π_siga˘i⁄
 13

	)

43 
	$__SYSCALL
(
__NR_π_siga˘i⁄
, 
sys_π_siga˘i⁄
)

44 
	#__NR_π_sig¥ocmask
 14

	)

45 
	$__SYSCALL
(
__NR_π_sig¥ocmask
, 
sys_π_sig¥ocmask
)

46 
	#__NR_π_sigªtu∫
 15

	)

47 
	$__SYSCALL
(
__NR_π_sigªtu∫
, 
°ub_π_sigªtu∫
)

49 
	#__NR_io˘l
 16

	)

50 
	$__SYSCALL
(
__NR_io˘l
, 
sys_io˘l
)

51 
	#__NR_¥ód64
 17

	)

52 
	$__SYSCALL
(
__NR_¥ód64
, 
sys_¥ód64
)

53 
	#__NR_pwrôe64
 18

	)

54 
	$__SYSCALL
(
__NR_pwrôe64
, 
sys_pwrôe64
)

55 
	#__NR_ªadv
 19

	)

56 
	$__SYSCALL
(
__NR_ªadv
, 
sys_ªadv
)

57 
	#__NR_wrôev
 20

	)

58 
	$__SYSCALL
(
__NR_wrôev
, 
sys_wrôev
)

59 
	#__NR_ac˚ss
 21

	)

60 
	$__SYSCALL
(
__NR_ac˚ss
, 
sys_ac˚ss
)

61 
	#__NR_pùe
 22

	)

62 
	$__SYSCALL
(
__NR_pùe
, 
sys_pùe
)

63 
	#__NR_£À˘
 23

	)

64 
	$__SYSCALL
(
__NR_£À˘
, 
sys_£À˘
)

66 
	#__NR_sched_yõld
 24

	)

67 
	$__SYSCALL
(
__NR_sched_yõld
, 
sys_sched_yõld
)

68 
	#__NR_mªm≠
 25

	)

69 
	$__SYSCALL
(
__NR_mªm≠
, 
sys_mªm≠
)

70 
	#__NR_msync
 26

	)

71 
	$__SYSCALL
(
__NR_msync
, 
sys_msync
)

72 
	#__NR_möc‹e
 27

	)

73 
	$__SYSCALL
(
__NR_möc‹e
, 
sys_möc‹e
)

74 
	#__NR_madvi£
 28

	)

75 
	$__SYSCALL
(
__NR_madvi£
, 
sys_madvi£
)

76 
	#__NR_shmgë
 29

	)

77 
	$__SYSCALL
(
__NR_shmgë
, 
sys_shmgë
)

78 
	#__NR_shm©
 30

	)

79 
	$__SYSCALL
(
__NR_shm©
, 
sys_shm©
)

80 
	#__NR_shm˘l
 31

	)

81 
	$__SYSCALL
(
__NR_shm˘l
, 
sys_shm˘l
)

83 
	#__NR_dup
 32

	)

84 
	$__SYSCALL
(
__NR_dup
, 
sys_dup
)

85 
	#__NR_dup2
 33

	)

86 
	$__SYSCALL
(
__NR_dup2
, 
sys_dup2
)

87 
	#__NR_∑u£
 34

	)

88 
	$__SYSCALL
(
__NR_∑u£
, 
sys_∑u£
)

89 
	#__NR_«no¶ìp
 35

	)

90 
	$__SYSCALL
(
__NR_«no¶ìp
, 
sys_«no¶ìp
)

91 
	#__NR_gëôimî
 36

	)

92 
	$__SYSCALL
(
__NR_gëôimî
, 
sys_gëôimî
)

93 
	#__NR_Æ¨m
 37

	)

94 
	$__SYSCALL
(
__NR_Æ¨m
, 
sys_Æ¨m
)

95 
	#__NR_£tôimî
 38

	)

96 
	$__SYSCALL
(
__NR_£tôimî
, 
sys_£tôimî
)

97 
	#__NR_gëpid
 39

	)

98 
	$__SYSCALL
(
__NR_gëpid
, 
sys_gëpid
)

100 
	#__NR_£ndfûe
 40

	)

101 
	$__SYSCALL
(
__NR_£ndfûe
, 
sys_£ndfûe64
)

102 
	#__NR_sockë
 41

	)

103 
	$__SYSCALL
(
__NR_sockë
, 
sys_sockë
)

104 
	#__NR_c⁄√˘
 42

	)

105 
	$__SYSCALL
(
__NR_c⁄√˘
, 
sys_c⁄√˘
)

106 
	#__NR_ac˚±
 43

	)

107 
	$__SYSCALL
(
__NR_ac˚±
, 
sys_ac˚±
)

108 
	#__NR_£ndto
 44

	)

109 
	$__SYSCALL
(
__NR_£ndto
, 
sys_£ndto
)

110 
	#__NR_ªcv‰om
 45

	)

111 
	$__SYSCALL
(
__NR_ªcv‰om
, 
sys_ªcv‰om
)

112 
	#__NR_£ndmsg
 46

	)

113 
	$__SYSCALL
(
__NR_£ndmsg
, 
sys_£ndmsg
)

114 
	#__NR_ªcvmsg
 47

	)

115 
	$__SYSCALL
(
__NR_ªcvmsg
, 
sys_ªcvmsg
)

117 
	#__NR_shutdown
 48

	)

118 
	$__SYSCALL
(
__NR_shutdown
, 
sys_shutdown
)

119 
	#__NR_böd
 49

	)

120 
	$__SYSCALL
(
__NR_böd
, 
sys_böd
)

121 
	#__NR_li°í
 50

	)

122 
	$__SYSCALL
(
__NR_li°í
, 
sys_li°í
)

123 
	#__NR_gësock«me
 51

	)

124 
	$__SYSCALL
(
__NR_gësock«me
, 
sys_gësock«me
)

125 
	#__NR_gë≥î«me
 52

	)

126 
	$__SYSCALL
(
__NR_gë≥î«me
, 
sys_gë≥î«me
)

127 
	#__NR_sockë∑ú
 53

	)

128 
	$__SYSCALL
(
__NR_sockë∑ú
, 
sys_sockë∑ú
)

129 
	#__NR_£tsock›t
 54

	)

130 
	$__SYSCALL
(
__NR_£tsock›t
, 
sys_£tsock›t
)

131 
	#__NR_gësock›t
 55

	)

132 
	$__SYSCALL
(
__NR_gësock›t
, 
sys_gësock›t
)

134 
	#__NR_˛⁄e
 56

	)

135 
	$__SYSCALL
(
__NR_˛⁄e
, 
°ub_˛⁄e
)

136 
	#__NR_f‹k
 57

	)

137 
	$__SYSCALL
(
__NR_f‹k
, 
°ub_f‹k
)

138 
	#__NR_vf‹k
 58

	)

139 
	$__SYSCALL
(
__NR_vf‹k
, 
°ub_vf‹k
)

140 
	#__NR_execve
 59

	)

141 
	$__SYSCALL
(
__NR_execve
, 
°ub_execve
)

142 
	#__NR_exô
 60

	)

143 
	$__SYSCALL
(
__NR_exô
, 
sys_exô
)

144 
	#__NR_waô4
 61

	)

145 
	$__SYSCALL
(
__NR_waô4
, 
sys_waô4
)

146 
	#__NR_kûl
 62

	)

147 
	$__SYSCALL
(
__NR_kûl
, 
sys_kûl
)

148 
	#__NR_u«me
 63

	)

149 
	$__SYSCALL
(
__NR_u«me
, 
sys_u«me
)

151 
	#__NR_£mgë
 64

	)

152 
	$__SYSCALL
(
__NR_£mgë
, 
sys_£mgë
)

153 
	#__NR_£m›
 65

	)

154 
	$__SYSCALL
(
__NR_£m›
, 
sys_£m›
)

155 
	#__NR_£m˘l
 66

	)

156 
	$__SYSCALL
(
__NR_£m˘l
, 
sys_£m˘l
)

157 
	#__NR_shmdt
 67

	)

158 
	$__SYSCALL
(
__NR_shmdt
, 
sys_shmdt
)

159 
	#__NR_msggë
 68

	)

160 
	$__SYSCALL
(
__NR_msggë
, 
sys_msggë
)

161 
	#__NR_msg¢d
 69

	)

162 
	$__SYSCALL
(
__NR_msg¢d
, 
sys_msg¢d
)

163 
	#__NR_msgrcv
 70

	)

164 
	$__SYSCALL
(
__NR_msgrcv
, 
sys_msgrcv
)

165 
	#__NR_msg˘l
 71

	)

166 
	$__SYSCALL
(
__NR_msg˘l
, 
sys_msg˘l
)

168 
	#__NR_f˙é
 72

	)

169 
	$__SYSCALL
(
__NR_f˙é
, 
sys_f˙é
)

170 
	#__NR_Êock
 73

	)

171 
	$__SYSCALL
(
__NR_Êock
, 
sys_Êock
)

172 
	#__NR_fsync
 74

	)

173 
	$__SYSCALL
(
__NR_fsync
, 
sys_fsync
)

174 
	#__NR_fd©async
 75

	)

175 
	$__SYSCALL
(
__NR_fd©async
, 
sys_fd©async
)

176 
	#__NR_åunˇã
 76

	)

177 
	$__SYSCALL
(
__NR_åunˇã
, 
sys_åunˇã
)

178 
	#__NR_·runˇã
 77

	)

179 
	$__SYSCALL
(
__NR_·runˇã
, 
sys_·runˇã
)

180 
	#__NR_gëdíts
 78

	)

181 
	$__SYSCALL
(
__NR_gëdíts
, 
sys_gëdíts
)

182 
	#__NR_gëcwd
 79

	)

183 
	$__SYSCALL
(
__NR_gëcwd
, 
sys_gëcwd
)

185 
	#__NR_chdú
 80

	)

186 
	$__SYSCALL
(
__NR_chdú
, 
sys_chdú
)

187 
	#__NR_fchdú
 81

	)

188 
	$__SYSCALL
(
__NR_fchdú
, 
sys_fchdú
)

189 
	#__NR_ª«me
 82

	)

190 
	$__SYSCALL
(
__NR_ª«me
, 
sys_ª«me
)

191 
	#__NR_mkdú
 83

	)

192 
	$__SYSCALL
(
__NR_mkdú
, 
sys_mkdú
)

193 
	#__NR_rmdú
 84

	)

194 
	$__SYSCALL
(
__NR_rmdú
, 
sys_rmdú
)

195 
	#__NR_¸ót
 85

	)

196 
	$__SYSCALL
(
__NR_¸ót
, 
sys_¸ót
)

197 
	#__NR_lök
 86

	)

198 
	$__SYSCALL
(
__NR_lök
, 
sys_lök
)

199 
	#__NR_u∆ök
 87

	)

200 
	$__SYSCALL
(
__NR_u∆ök
, 
sys_u∆ök
)

202 
	#__NR_symlök
 88

	)

203 
	$__SYSCALL
(
__NR_symlök
, 
sys_symlök
)

204 
	#__NR_ªadlök
 89

	)

205 
	$__SYSCALL
(
__NR_ªadlök
, 
sys_ªadlök
)

206 
	#__NR_chmod
 90

	)

207 
	$__SYSCALL
(
__NR_chmod
, 
sys_chmod
)

208 
	#__NR_fchmod
 91

	)

209 
	$__SYSCALL
(
__NR_fchmod
, 
sys_fchmod
)

210 
	#__NR_chown
 92

	)

211 
	$__SYSCALL
(
__NR_chown
, 
sys_chown
)

212 
	#__NR_fchown
 93

	)

213 
	$__SYSCALL
(
__NR_fchown
, 
sys_fchown
)

214 
	#__NR_lchown
 94

	)

215 
	$__SYSCALL
(
__NR_lchown
, 
sys_lchown
)

216 
	#__NR_umask
 95

	)

217 
	$__SYSCALL
(
__NR_umask
, 
sys_umask
)

219 
	#__NR_gëtimeofday
 96

	)

220 
	$__SYSCALL
(
__NR_gëtimeofday
, 
sys_gëtimeofday
)

221 
	#__NR_gëæimô
 97

	)

222 
	$__SYSCALL
(
__NR_gëæimô
, 
sys_gëæimô
)

223 
	#__NR_gërußge
 98

	)

224 
	$__SYSCALL
(
__NR_gërußge
, 
sys_gërußge
)

225 
	#__NR_sysöfo
 99

	)

226 
	$__SYSCALL
(
__NR_sysöfo
, 
sys_sysöfo
)

227 
	#__NR_times
 100

	)

228 
	$__SYSCALL
(
__NR_times
, 
sys_times
)

229 
	#__NR_±ø˚
 101

	)

230 
	$__SYSCALL
(
__NR_±ø˚
, 
sys_±ø˚
)

231 
	#__NR_gëuid
 102

	)

232 
	$__SYSCALL
(
__NR_gëuid
, 
sys_gëuid
)

233 
	#__NR_sy¶og
 103

	)

234 
	$__SYSCALL
(
__NR_sy¶og
, 
sys_sy¶og
)

237 
	#__NR_gëgid
 104

	)

238 
	$__SYSCALL
(
__NR_gëgid
, 
sys_gëgid
)

239 
	#__NR_£tuid
 105

	)

240 
	$__SYSCALL
(
__NR_£tuid
, 
sys_£tuid
)

241 
	#__NR_£tgid
 106

	)

242 
	$__SYSCALL
(
__NR_£tgid
, 
sys_£tgid
)

243 
	#__NR_gëeuid
 107

	)

244 
	$__SYSCALL
(
__NR_gëeuid
, 
sys_gëeuid
)

245 
	#__NR_gëegid
 108

	)

246 
	$__SYSCALL
(
__NR_gëegid
, 
sys_gëegid
)

247 
	#__NR_£çgid
 109

	)

248 
	$__SYSCALL
(
__NR_£çgid
, 
sys_£çgid
)

249 
	#__NR_gëµid
 110

	)

250 
	$__SYSCALL
(
__NR_gëµid
, 
sys_gëµid
)

251 
	#__NR_gëpgΩ
 111

	)

252 
	$__SYSCALL
(
__NR_gëpgΩ
, 
sys_gëpgΩ
)

254 
	#__NR_£tsid
 112

	)

255 
	$__SYSCALL
(
__NR_£tsid
, 
sys_£tsid
)

256 
	#__NR_£åeuid
 113

	)

257 
	$__SYSCALL
(
__NR_£åeuid
, 
sys_£åeuid
)

258 
	#__NR_£åegid
 114

	)

259 
	$__SYSCALL
(
__NR_£åegid
, 
sys_£åegid
)

260 
	#__NR_gëgroups
 115

	)

261 
	$__SYSCALL
(
__NR_gëgroups
, 
sys_gëgroups
)

262 
	#__NR_£tgroups
 116

	)

263 
	$__SYSCALL
(
__NR_£tgroups
, 
sys_£tgroups
)

264 
	#__NR_£åesuid
 117

	)

265 
	$__SYSCALL
(
__NR_£åesuid
, 
sys_£åesuid
)

266 
	#__NR_gëªsuid
 118

	)

267 
	$__SYSCALL
(
__NR_gëªsuid
, 
sys_gëªsuid
)

268 
	#__NR_£åesgid
 119

	)

269 
	$__SYSCALL
(
__NR_£åesgid
, 
sys_£åesgid
)

271 
	#__NR_gëªsgid
 120

	)

272 
	$__SYSCALL
(
__NR_gëªsgid
, 
sys_gëªsgid
)

273 
	#__NR_gëpgid
 121

	)

274 
	$__SYSCALL
(
__NR_gëpgid
, 
sys_gëpgid
)

275 
	#__NR_£tfsuid
 122

	)

276 
	$__SYSCALL
(
__NR_£tfsuid
, 
sys_£tfsuid
)

277 
	#__NR_£tfsgid
 123

	)

278 
	$__SYSCALL
(
__NR_£tfsgid
, 
sys_£tfsgid
)

279 
	#__NR_gësid
 124

	)

280 
	$__SYSCALL
(
__NR_gësid
, 
sys_gësid
)

281 
	#__NR_ˇpgë
 125

	)

282 
	$__SYSCALL
(
__NR_ˇpgë
, 
sys_ˇpgë
)

283 
	#__NR_ˇp£t
 126

	)

284 
	$__SYSCALL
(
__NR_ˇp£t
, 
sys_ˇp£t
)

286 
	#__NR_π_sig≥ndög
 127

	)

287 
	$__SYSCALL
(
__NR_π_sig≥ndög
, 
sys_π_sig≥ndög
)

288 
	#__NR_π_sigtimedwaô
 128

	)

289 
	$__SYSCALL
(
__NR_π_sigtimedwaô
, 
sys_π_sigtimedwaô
)

290 
	#__NR_π_sigqueueöfo
 129

	)

291 
	$__SYSCALL
(
__NR_π_sigqueueöfo
, 
sys_π_sigqueueöfo
)

292 
	#__NR_π_sigsu•íd
 130

	)

293 
	$__SYSCALL
(
__NR_π_sigsu•íd
, 
°ub_π_sigsu•íd
)

294 
	#__NR_sigÆt°ack
 131

	)

295 
	$__SYSCALL
(
__NR_sigÆt°ack
, 
°ub_sigÆt°ack
)

296 
	#__NR_utime
 132

	)

297 
	$__SYSCALL
(
__NR_utime
, 
sys_utime
)

298 
	#__NR_mknod
 133

	)

299 
	$__SYSCALL
(
__NR_mknod
, 
sys_mknod
)

302 
	#__NR_u£lib
 134

	)

303 
	$__SYSCALL
(
__NR_u£lib
, 
sys_ni_sysˇŒ
)

304 
	#__NR_≥rs⁄Æôy
 135

	)

305 
	$__SYSCALL
(
__NR_≥rs⁄Æôy
, 
sys_≥rs⁄Æôy
)

307 
	#__NR_u°©
 136

	)

308 
	$__SYSCALL
(
__NR_u°©
, 
sys_u°©
)

309 
	#__NR_°©fs
 137

	)

310 
	$__SYSCALL
(
__NR_°©fs
, 
sys_°©fs
)

311 
	#__NR_f°©fs
 138

	)

312 
	$__SYSCALL
(
__NR_f°©fs
, 
sys_f°©fs
)

313 
	#__NR_sysfs
 139

	)

314 
	$__SYSCALL
(
__NR_sysfs
, 
sys_sysfs
)

316 
	#__NR_gë¥i‹ôy
 140

	)

317 
	$__SYSCALL
(
__NR_gë¥i‹ôy
, 
sys_gë¥i‹ôy
)

318 
	#__NR_£çri‹ôy
 141

	)

319 
	$__SYSCALL
(
__NR_£çri‹ôy
, 
sys_£çri‹ôy
)

320 
	#__NR_sched_£ç¨am
 142

	)

321 
	$__SYSCALL
(
__NR_sched_£ç¨am
, 
sys_sched_£ç¨am
)

322 
	#__NR_sched_gë∑øm
 143

	)

323 
	$__SYSCALL
(
__NR_sched_gë∑øm
, 
sys_sched_gë∑øm
)

324 
	#__NR_sched_£tscheduÀr
 144

	)

325 
	$__SYSCALL
(
__NR_sched_£tscheduÀr
, 
sys_sched_£tscheduÀr
)

326 
	#__NR_sched_gëscheduÀr
 145

	)

327 
	$__SYSCALL
(
__NR_sched_gëscheduÀr
, 
sys_sched_gëscheduÀr
)

328 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

329 
	$__SYSCALL
(
__NR_sched_gë_¥i‹ôy_max
, 
sys_sched_gë_¥i‹ôy_max
)

330 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

331 
	$__SYSCALL
(
__NR_sched_gë_¥i‹ôy_mö
, 
sys_sched_gë_¥i‹ôy_mö
)

332 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

333 
	$__SYSCALL
(
__NR_sched_º_gë_öãrvÆ
, 
sys_sched_º_gë_öãrvÆ
)

335 
	#__NR_mlock
 149

	)

336 
	$__SYSCALL
(
__NR_mlock
, 
sys_mlock
)

337 
	#__NR_mu∆ock
 150

	)

338 
	$__SYSCALL
(
__NR_mu∆ock
, 
sys_mu∆ock
)

339 
	#__NR_mlockÆl
 151

	)

340 
	$__SYSCALL
(
__NR_mlockÆl
, 
sys_mlockÆl
)

341 
	#__NR_mu∆ockÆl
 152

	)

342 
	$__SYSCALL
(
__NR_mu∆ockÆl
, 
sys_mu∆ockÆl
)

344 
	#__NR_vh™gup
 153

	)

345 
	$__SYSCALL
(
__NR_vh™gup
, 
sys_vh™gup
)

347 
	#__NR_modify_ldt
 154

	)

348 
	$__SYSCALL
(
__NR_modify_ldt
, 
sys_modify_ldt
)

350 
	#__NR_pivŸ_roŸ
 155

	)

351 
	$__SYSCALL
(
__NR_pivŸ_roŸ
, 
sys_pivŸ_roŸ
)

353 
	#__NR__sys˘l
 156

	)

354 
	$__SYSCALL
(
__NR__sys˘l
, 
sys_sys˘l
)

356 
	#__NR_¥˘l
 157

	)

357 
	$__SYSCALL
(
__NR_¥˘l
, 
sys_¥˘l
)

358 
	#__NR_¨ch_¥˘l
 158

	)

359 
	$__SYSCALL
(
__NR_¨ch_¥˘l
, 
sys_¨ch_¥˘l
)

361 
	#__NR_adjtimex
 159

	)

362 
	$__SYSCALL
(
__NR_adjtimex
, 
sys_adjtimex
)

364 
	#__NR_£ålimô
 160

	)

365 
	$__SYSCALL
(
__NR_£ålimô
, 
sys_£ålimô
)

367 
	#__NR_chroŸ
 161

	)

368 
	$__SYSCALL
(
__NR_chroŸ
, 
sys_chroŸ
)

370 
	#__NR_sync
 162

	)

371 
	$__SYSCALL
(
__NR_sync
, 
sys_sync
)

373 
	#__NR_ac˘
 163

	)

374 
	$__SYSCALL
(
__NR_ac˘
, 
sys_ac˘
)

376 
	#__NR_£âimeofday
 164

	)

377 
	$__SYSCALL
(
__NR_£âimeofday
, 
sys_£âimeofday
)

379 
	#__NR_mou¡
 165

	)

380 
	$__SYSCALL
(
__NR_mou¡
, 
sys_mou¡
)

381 
	#__NR_umou¡2
 166

	)

382 
	$__SYSCALL
(
__NR_umou¡2
, 
sys_umou¡
)

384 
	#__NR_sw≠⁄
 167

	)

385 
	$__SYSCALL
(
__NR_sw≠⁄
, 
sys_sw≠⁄
)

386 
	#__NR_sw≠off
 168

	)

387 
	$__SYSCALL
(
__NR_sw≠off
, 
sys_sw≠off
)

389 
	#__NR_ªboŸ
 169

	)

390 
	$__SYSCALL
(
__NR_ªboŸ
, 
sys_ªboŸ
)

392 
	#__NR_£tho°«me
 170

	)

393 
	$__SYSCALL
(
__NR_£tho°«me
, 
sys_£tho°«me
)

394 
	#__NR_£tdomaö«me
 171

	)

395 
	$__SYSCALL
(
__NR_£tdomaö«me
, 
sys_£tdomaö«me
)

397 
	#__NR_i›l
 172

	)

398 
	$__SYSCALL
(
__NR_i›l
, 
°ub_i›l
)

399 
	#__NR_i›îm
 173

	)

400 
	$__SYSCALL
(
__NR_i›îm
, 
sys_i›îm
)

402 
	#__NR_¸óã_moduÀ
 174

	)

403 
	$__SYSCALL
(
__NR_¸óã_moduÀ
, 
sys_ni_sysˇŒ
)

404 
	#__NR_öô_moduÀ
 175

	)

405 
	$__SYSCALL
(
__NR_öô_moduÀ
, 
sys_öô_moduÀ
)

406 
	#__NR_dñëe_moduÀ
 176

	)

407 
	$__SYSCALL
(
__NR_dñëe_moduÀ
, 
sys_dñëe_moduÀ
)

408 
	#__NR_gë_kî√l_syms
 177

	)

409 
	$__SYSCALL
(
__NR_gë_kî√l_syms
, 
sys_ni_sysˇŒ
)

410 
	#__NR_quîy_moduÀ
 178

	)

411 
	$__SYSCALL
(
__NR_quîy_moduÀ
, 
sys_ni_sysˇŒ
)

413 
	#__NR_quŸa˘l
 179

	)

414 
	$__SYSCALL
(
__NR_quŸa˘l
, 
sys_quŸa˘l
)

416 
	#__NR_nfs£rv˘l
 180

	)

417 
	$__SYSCALL
(
__NR_nfs£rv˘l
, 
sys_nfs£rv˘l
)

419 
	#__NR_gëpmsg
 181

	)

420 
	$__SYSCALL
(
__NR_gëpmsg
, 
sys_ni_sysˇŒ
)

421 
	#__NR_puçmsg
 182

	)

422 
	$__SYSCALL
(
__NR_puçmsg
, 
sys_ni_sysˇŒ
)

424 
	#__NR_afs_sysˇŒ
 183

	)

425 
	$__SYSCALL
(
__NR_afs_sysˇŒ
, 
sys_ni_sysˇŒ
)

427 
	#__NR_tuxˇŒ
 184

	)

428 #ifde‡
CONFIG_TUX


429 
	$__SYSCALL
(
__NR_tuxˇŒ
, 
__sys_tux
)

431 #ifde‡
CONFIG_TUX_MODULE


432 
	$__SYSCALL
(
__NR_tuxˇŒ
, 
sys_tux
)

434 
	$__SYSCALL
(
__NR_tuxˇŒ
, 
sys_ni_sysˇŒ
)

438 
	#__NR_£curôy
 185

	)

439 
	$__SYSCALL
(
__NR_£curôy
, 
sys_ni_sysˇŒ
)

441 
	#__NR_gëtid
 186

	)

442 
	$__SYSCALL
(
__NR_gëtid
, 
sys_gëtid
)

444 
	#__NR_ªadahód
 187

	)

445 
	$__SYSCALL
(
__NR_ªadahód
, 
sys_ªadahód
)

446 
	#__NR_£tx©å
 188

	)

447 
	$__SYSCALL
(
__NR_£tx©å
, 
sys_£tx©å
)

448 
	#__NR_l£tx©å
 189

	)

449 
	$__SYSCALL
(
__NR_l£tx©å
, 
sys_l£tx©å
)

450 
	#__NR_f£tx©å
 190

	)

451 
	$__SYSCALL
(
__NR_f£tx©å
, 
sys_f£tx©å
)

452 
	#__NR_gëx©å
 191

	)

453 
	$__SYSCALL
(
__NR_gëx©å
, 
sys_gëx©å
)

454 
	#__NR_lgëx©å
 192

	)

455 
	$__SYSCALL
(
__NR_lgëx©å
, 
sys_lgëx©å
)

456 
	#__NR_fgëx©å
 193

	)

457 
	$__SYSCALL
(
__NR_fgëx©å
, 
sys_fgëx©å
)

458 
	#__NR_li°x©å
 194

	)

459 
	$__SYSCALL
(
__NR_li°x©å
, 
sys_li°x©å
)

460 
	#__NR_Œi°x©å
 195

	)

461 
	$__SYSCALL
(
__NR_Œi°x©å
, 
sys_Œi°x©å
)

462 
	#__NR_Êi°x©å
 196

	)

463 
	$__SYSCALL
(
__NR_Êi°x©å
, 
sys_Êi°x©å
)

464 
	#__NR_ªmovex©å
 197

	)

465 
	$__SYSCALL
(
__NR_ªmovex©å
, 
sys_ªmovex©å
)

466 
	#__NR_Ãemovex©å
 198

	)

467 
	$__SYSCALL
(
__NR_Ãemovex©å
, 
sys_Ãemovex©å
)

468 
	#__NR_‰emovex©å
 199

	)

469 
	$__SYSCALL
(
__NR_‰emovex©å
, 
sys_‰emovex©å
)

470 
	#__NR_tkûl
 200

	)

471 
	$__SYSCALL
(
__NR_tkûl
, 
sys_tkûl
)

472 
	#__NR_time
 201

	)

473 
	$__SYSCALL
(
__NR_time
, 
sys_time
)

474 
	#__NR_fuãx
 202

	)

475 
	$__SYSCALL
(
__NR_fuãx
, 
sys_fuãx
)

476 
	#__NR_sched_£èfföôy
 203

	)

477 
	$__SYSCALL
(
__NR_sched_£èfföôy
, 
sys_sched_£èfföôy
)

478 
	#__NR_sched_gëafföôy
 204

	)

479 
	$__SYSCALL
(
__NR_sched_gëafföôy
, 
sys_sched_gëafföôy
)

480 
	#__NR_£t_thªad_¨ó
 205

	)

481 
	$__SYSCALL
(
__NR_£t_thªad_¨ó
, 
sys_ni_sysˇŒ
)

482 
	#__NR_io_£tup
 206

	)

483 
	$__SYSCALL
(
__NR_io_£tup
, 
sys_io_£tup
)

484 
	#__NR_io_de°roy
 207

	)

485 
	$__SYSCALL
(
__NR_io_de°roy
, 
sys_io_de°roy
)

486 
	#__NR_io_gëevíts
 208

	)

487 
	$__SYSCALL
(
__NR_io_gëevíts
, 
sys_io_gëevíts
)

488 
	#__NR_io_submô
 209

	)

489 
	$__SYSCALL
(
__NR_io_submô
, 
sys_io_submô
)

490 
	#__NR_io_ˇn˚l
 210

	)

491 
	$__SYSCALL
(
__NR_io_ˇn˚l
, 
sys_io_ˇn˚l
)

492 
	#__NR_gë_thªad_¨ó
 211

	)

493 
	$__SYSCALL
(
__NR_gë_thªad_¨ó
, 
sys_ni_sysˇŒ
)

494 
	#__NR_lookup_dcookõ
 212

	)

495 
	$__SYSCALL
(
__NR_lookup_dcookõ
, 
sys_lookup_dcookõ
)

496 
	#__NR_ïﬁl_¸óã
 213

	)

497 
	$__SYSCALL
(
__NR_ïﬁl_¸óã
, 
sys_ïﬁl_¸óã
)

498 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

499 
	$__SYSCALL
(
__NR_ïﬁl_˘l_ﬁd
, 
sys_ni_sysˇŒ
)

500 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

501 
	$__SYSCALL
(
__NR_ïﬁl_waô_ﬁd
, 
sys_ni_sysˇŒ
)

502 
	#__NR_ªm≠_fûe_∑ges
 216

	)

503 
	$__SYSCALL
(
__NR_ªm≠_fûe_∑ges
, 
sys_ªm≠_fûe_∑ges
)

504 
	#__NR_gëdíts64
 217

	)

505 
	$__SYSCALL
(
__NR_gëdíts64
, 
sys_gëdíts64
)

506 
	#__NR_£t_tid_addªss
 218

	)

507 
	$__SYSCALL
(
__NR_£t_tid_addªss
, 
sys_£t_tid_addªss
)

508 
	#__NR_ª°¨t_sysˇŒ
 219

	)

509 
	$__SYSCALL
(
__NR_ª°¨t_sysˇŒ
, 
sys_ª°¨t_sysˇŒ
)

510 
	#__NR_£mtimed›
 220

	)

511 
	$__SYSCALL
(
__NR_£mtimed›
, 
sys_£mtimed›
)

512 
	#__NR_Ádvi£64
 221

	)

513 
	$__SYSCALL
(
__NR_Ádvi£64
, 
sys_Ádvi£64
)

514 
	#__NR_timî_¸óã
 222

	)

515 
	$__SYSCALL
(
__NR_timî_¸óã
, 
sys_timî_¸óã
)

516 
	#__NR_timî_£âime
 223

	)

517 
	$__SYSCALL
(
__NR_timî_£âime
, 
sys_timî_£âime
)

518 
	#__NR_timî_gëtime
 224

	)

519 
	$__SYSCALL
(
__NR_timî_gëtime
, 
sys_timî_gëtime
)

520 
	#__NR_timî_gëovîrun
 225

	)

521 
	$__SYSCALL
(
__NR_timî_gëovîrun
, 
sys_timî_gëovîrun
)

522 
	#__NR_timî_dñëe
 226

	)

523 
	$__SYSCALL
(
__NR_timî_dñëe
, 
sys_timî_dñëe
)

524 
	#__NR_˛ock_£âime
 227

	)

525 
	$__SYSCALL
(
__NR_˛ock_£âime
, 
sys_˛ock_£âime
)

526 
	#__NR_˛ock_gëtime
 228

	)

527 
	$__SYSCALL
(
__NR_˛ock_gëtime
, 
sys_˛ock_gëtime
)

528 
	#__NR_˛ock_gëªs
 229

	)

529 
	$__SYSCALL
(
__NR_˛ock_gëªs
, 
sys_˛ock_gëªs
)

530 
	#__NR_˛ock_«no¶ìp
 230

	)

531 
	$__SYSCALL
(
__NR_˛ock_«no¶ìp
, 
sys_˛ock_«no¶ìp
)

532 
	#__NR_exô_group
 231

	)

533 
	$__SYSCALL
(
__NR_exô_group
, 
sys_exô_group
)

534 
	#__NR_ïﬁl_waô
 232

	)

535 
	$__SYSCALL
(
__NR_ïﬁl_waô
, 
sys_ïﬁl_waô
)

536 
	#__NR_ïﬁl_˘l
 233

	)

537 
	$__SYSCALL
(
__NR_ïﬁl_˘l
, 
sys_ïﬁl_˘l
)

538 
	#__NR_tgkûl
 234

	)

539 
	$__SYSCALL
(
__NR_tgkûl
, 
sys_tgkûl
)

540 
	#__NR_utimes
 235

	)

541 
	$__SYSCALL
(
__NR_utimes
, 
sys_utimes
)

542 
	#__NR_v£rvî
 236

	)

543 
	$__SYSCALL
(
__NR_v£rvî
, 
sys_ni_sysˇŒ
)

544 
	#__NR_mböd
 237

	)

545 
	$__SYSCALL
(
__NR_mböd
, 
sys_mböd
)

546 
	#__NR_£t_mempﬁicy
 238

	)

547 
	$__SYSCALL
(
__NR_£t_mempﬁicy
, 
sys_£t_mempﬁicy
)

548 
	#__NR_gë_mempﬁicy
 239

	)

549 
	$__SYSCALL
(
__NR_gë_mempﬁicy
, 
sys_gë_mempﬁicy
)

550 
	#__NR_mq_›í
 240

	)

551 
	$__SYSCALL
(
__NR_mq_›í
, 
sys_mq_›í
)

552 
	#__NR_mq_u∆ök
 241

	)

553 
	$__SYSCALL
(
__NR_mq_u∆ök
, 
sys_mq_u∆ök
)

554 
	#__NR_mq_timed£nd
 242

	)

555 
	$__SYSCALL
(
__NR_mq_timed£nd
, 
sys_mq_timed£nd
)

556 
	#__NR_mq_timedª˚ive
 243

	)

557 
	$__SYSCALL
(
__NR_mq_timedª˚ive
, 
sys_mq_timedª˚ive
)

558 
	#__NR_mq_nŸify
 244

	)

559 
	$__SYSCALL
(
__NR_mq_nŸify
, 
sys_mq_nŸify
)

560 
	#__NR_mq_gë£èâr
 245

	)

561 
	$__SYSCALL
(
__NR_mq_gë£èâr
, 
sys_mq_gë£èâr
)

562 
	#__NR_kexec_lﬂd
 246

	)

563 
	$__SYSCALL
(
__NR_kexec_lﬂd
, 
sys_kexec_lﬂd
)

564 
	#__NR_waôid
 247

	)

565 
	$__SYSCALL
(
__NR_waôid
, 
sys_waôid
)

566 
	#__NR_add_key
 248

	)

567 
	$__SYSCALL
(
__NR_add_key
, 
sys_add_key
)

568 
	#__NR_ªque°_key
 249

	)

569 
	$__SYSCALL
(
__NR_ªque°_key
, 
sys_ªque°_key
)

570 
	#__NR_key˘l
 250

	)

571 
	$__SYSCALL
(
__NR_key˘l
, 
sys_key˘l
)

572 
	#__NR_i›rio_£t
 251

	)

573 
	$__SYSCALL
(
__NR_i›rio_£t
, 
sys_i›rio_£t
)

574 
	#__NR_i›rio_gë
 252

	)

575 
	$__SYSCALL
(
__NR_i›rio_gë
, 
sys_i›rio_gë
)

576 
	#__NR_öŸify_öô
 253

	)

577 
	$__SYSCALL
(
__NR_öŸify_öô
, 
sys_öŸify_öô
)

578 
	#__NR_öŸify_add_w©ch
 254

	)

579 
	$__SYSCALL
(
__NR_öŸify_add_w©ch
, 
sys_öŸify_add_w©ch
)

580 
	#__NR_öŸify_rm_w©ch
 255

	)

581 
	$__SYSCALL
(
__NR_öŸify_rm_w©ch
, 
sys_öŸify_rm_w©ch
)

582 
	#__NR_migøã_∑ges
 256

	)

583 
	$__SYSCALL
(
__NR_migøã_∑ges
, 
sys_migøã_∑ges
)

584 
	#__NR_›í©
 257

	)

585 
	$__SYSCALL
(
__NR_›í©
, 
sys_›í©
)

586 
	#__NR_mkdú©
 258

	)

587 
	$__SYSCALL
(
__NR_mkdú©
, 
sys_mkdú©
)

588 
	#__NR_mknod©
 259

	)

589 
	$__SYSCALL
(
__NR_mknod©
, 
sys_mknod©
)

590 
	#__NR_fchow«t
 260

	)

591 
	$__SYSCALL
(
__NR_fchow«t
, 
sys_fchow«t
)

592 
	#__NR_futimeßt
 261

	)

593 
	$__SYSCALL
(
__NR_futimeßt
, 
sys_futimeßt
)

594 
	#__NR_√wf°©©
 262

	)

595 
	$__SYSCALL
(
__NR_√wf°©©
, 
sys_√wf°©©
)

596 
	#__NR_u∆ök©
 263

	)

597 
	$__SYSCALL
(
__NR_u∆ök©
, 
sys_u∆ök©
)

598 
	#__NR_ª«mót
 264

	)

599 
	$__SYSCALL
(
__NR_ª«mót
, 
sys_ª«mót
)

600 
	#__NR_lök©
 265

	)

601 
	$__SYSCALL
(
__NR_lök©
, 
sys_lök©
)

602 
	#__NR_symlök©
 266

	)

603 
	$__SYSCALL
(
__NR_symlök©
, 
sys_symlök©
)

604 
	#__NR_ªadlök©
 267

	)

605 
	$__SYSCALL
(
__NR_ªadlök©
, 
sys_ªadlök©
)

606 
	#__NR_fchmod©
 268

	)

607 
	$__SYSCALL
(
__NR_fchmod©
, 
sys_fchmod©
)

608 
	#__NR_Ác˚sßt
 269

	)

609 
	$__SYSCALL
(
__NR_Ác˚sßt
, 
sys_Ác˚sßt
)

610 
	#__NR_p£À˘6
 270

	)

611 
	$__SYSCALL
(
__NR_p£À˘6
, 
sys_p£À˘6
)

612 
	#__NR_µﬁl
 271

	)

613 
	$__SYSCALL
(
__NR_µﬁl
, 
sys_µﬁl
)

614 
	#__NR_unsh¨e
 272

	)

615 
	$__SYSCALL
(
__NR_unsh¨e
, 
sys_unsh¨e
)

616 
	#__NR_£t_robu°_li°
 273

	)

617 
	$__SYSCALL
(
__NR_£t_robu°_li°
, 
sys_£t_robu°_li°
)

618 
	#__NR_gë_robu°_li°
 274

	)

619 
	$__SYSCALL
(
__NR_gë_robu°_li°
, 
sys_gë_robu°_li°
)

620 
	#__NR_•li˚
 275

	)

621 
	$__SYSCALL
(
__NR_•li˚
, 
sys_•li˚
)

622 
	#__NR_ãe
 276

	)

623 
	$__SYSCALL
(
__NR_ãe
, 
sys_ãe
)

624 
	#__NR_sync_fûe_ønge
 277

	)

625 
	$__SYSCALL
(
__NR_sync_fûe_ønge
, 
sys_sync_fûe_ønge
)

626 
	#__NR_vm•li˚
 278

	)

627 
	$__SYSCALL
(
__NR_vm•li˚
, 
sys_vm•li˚
)

628 
	#__NR_move_∑ges
 279

	)

629 
	$__SYSCALL
(
__NR_move_∑ges
, 
sys_move_∑ges
)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
__GNUC_PREREQ
 (2,97)

140 
	#__Êex¨r
 []

	)

142 #ifde‡
__GNUC__


143 
	#__Êex¨r
 [0]

	)

145 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

146 
	#__Êex¨r
 []

	)

149 
	#__Êex¨r
 [1]

	)

165 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

167 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

168 #ifde‡
__˝lu•lus


169 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

170 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

175 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

176 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

189 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

190 
	#__©åibuã__
(
xyz
Ë

	)

196 #i‡
__GNUC_PREREQ
 (2,96)

197 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

199 
	#__©åibuã_mÆloc__


	)

205 #i‡
__GNUC_PREREQ
 (2,96)

206 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

208 
	#__©åibuã_puª__


	)

214 #i‡
__GNUC_PREREQ
 (3,1)

215 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

216 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

218 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

219 
	#__©åibuã_noölöe__


	)

223 #i‡
__GNUC_PREREQ
 (3,2)

224 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

226 
	#__©åibuã_dïªˇãd__


	)

235 #i‡
__GNUC_PREREQ
 (2,8)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

238 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

245 #i‡
__GNUC_PREREQ
 (2,97)

246 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

247 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

249 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

254 #i‡
__GNUC_PREREQ
 (3,3)

255 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

257 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡
__GNUC_PREREQ
 (3,4)

263 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

264 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

265 #i‡
__USE_FORTIFY_LEVEL
 > 0

266 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

269 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

271 #i‚de‡
__wur


272 
	#__wur


	)

276 #i‡
__GNUC_PREREQ
 (3,2)

277 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

279 
	#__Æways_ölöe
 
__ölöe


	)

286 #i‡!
__GNUC_PREREQ
 (2,8)

287 
	#__exãnsi⁄__


	)

291 #i‡!
__GNUC_PREREQ
 (2,92)

292 
	#__ª°ri˘


	)

298 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


299 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

301 #ifde‡
__GNUC__


302 
	#__ª°ri˘_¨r


	)

304 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

305 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

308 
	#__ª°ri˘_¨r


	)

313 
	~<bôs/w‹dsize.h
>

315 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


316 
	#__LDBL_COMPAT
 1

	)

317 #ifde‡
__REDIRECT


318 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

319 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

320 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

321 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

322 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

323 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

324 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

325 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

326 
	#__LDBL_REDIR_DECL
(
«me
) \

327 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

330 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


331 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

332 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

333 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

334 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

335 
	#__LDBL_REDIR_DECL
(
«me
)

	)

	@/usr/include/asm/errno.h

2 #i‚de‡
__ASM_STUB_ERRNO_H


3 
	#__ASM_STUB_ERRNO_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/î∫o.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/î∫o.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_ªm_pio2l


	)

12 
	#__°ub___kî√l_söl


	)

13 
	#__°ub___kî√l_è∆


	)

14 
	#__°ub_bdÊush


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_„upd©ìnv


	)

20 
	#__°ub_gëmsg


	)

21 
	#__°ub_gây


	)

22 
	#__°ub_lchmod


	)

23 
	#__°ub_lutimes


	)

24 
	#__°ub_putmsg


	)

25 
	#__°ub_ªvoke


	)

26 
	#__°ub_£éogö


	)

27 
	#__°ub_sigªtu∫


	)

28 
	#__°ub_s°k


	)

29 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


324 #i‚de‡
__˝lu•lus


328 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

329 
__ölöe
 
wöt_t


330 
	`__NTH
 (
	$btowc
 (
__c
))

331 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

332 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

334 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

335 
__ölöe
 

336 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

337 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

338 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

341 
__ölöe
 
size_t


342 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

343 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

344 {  (
__ps
 !
NULL


345 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

348 
__BEGIN_NAMESPACE_C99


351 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

352 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

353 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

357 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

358 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

359 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

360 
__END_NAMESPACE_C99


363 #ifdef 
__USE_GNU


366 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

367 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

368 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

373 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

374 
size_t
 
__nwc
, size_à
__Àn
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

380 #ifde‡
__USE_XOPEN


382 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

386 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

390 
__BEGIN_NAMESPACE_C99


393 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

394 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

396 #ifde‡
__USE_ISOC99


398 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

399 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

400 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

407 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

412 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

413 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

414 
__THROW
;

416 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

419 
__exãnsi⁄__


420 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

426 
__exãnsi⁄__


427 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

428 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

429 
__ba£
Ë
__THROW
;

431 
__END_NAMESPACE_C99


433 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


436 
__exãnsi⁄__


437 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

439 
__THROW
;

443 
__exãnsi⁄__


444 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

445 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

446 
__ba£
Ë
__THROW
;

449 #ifde‡
__USE_GNU


463 
	~<xloˇÀ.h
>

467 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

468 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

469 
__loˇÀ_t
 
__loc
Ë
__THROW
;

471 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

473 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

475 
__exãnsi⁄__


476 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

478 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

480 
__exãnsi⁄__


481 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
)

484 
__THROW
;

486 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

488 
__THROW
;

490 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

492 
__THROW
;

494 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

495 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

496 
__loˇÀ_t
 
__loc
Ë
__THROW
;

502 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

503 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

504 
__THROW
;

505 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

507 
__THROW
;

508 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

509 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

510 
__group
Ë
__THROW
;

512 #i‡!
deföed
 
__wc°ﬁ_öã∫Æ_deföed
 \

513 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

514 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

515 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

516 
__ba£
, 
__group
Ë
__THROW
;

517 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

519 #i‡!
deföed
 
__wc°oul_öã∫Æ_deföed
 \

520 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

521 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

522 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

523 
__ba£
, 
__group
Ë
__THROW
;

524 
	#__wc°oul_öã∫Æ_deföed
 1

	)

526 #i‡!
deföed
 
__wc°ﬁl_öã∫Æ_deföed
 \

527 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

528 
__exãnsi⁄__


529 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

530 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

531 
__ba£
, 
__group
Ë
__THROW
;

532 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

534 #i‡!
deföed
 
__wc°ouŒ_öã∫Æ_deföed
 \

535 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

536 
__exãnsi⁄__


537 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

538 
__ª°ri˘
 
__≈å
,

539 
wch¨_t
 **

540 
__ª°ri˘
 
__íd±r
,

541 
__ba£
,

542 
__group
Ë
__THROW
;

543 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

547 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

549 
__BEGIN_NAMESPACE_C99


551 
__ölöe
 

552 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

554 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

555 
__ölöe
 

556 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

558 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

559 
__ölöe
 

560 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

562 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

563 
__END_NAMESPACE_C99


565 #ifde‡
__USE_GNU


566 
__ölöe
 

567 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

568 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

569 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

570 #i‚de‡
__LDBL_COMPAT


571 
__ölöe
 

572 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

573 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

574 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

576 
__exãnsi⁄__


577 
__ölöe
 

578 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

579 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

580 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

581 
__exãnsi⁄__


582 
__ölöe
 

583 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

584 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

585 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

590 #ifdef 
__USE_GNU


593 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

597 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

598 
__THROW
;

604 #ifdef 
__USE_GNU


607 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

610 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


611 
__BEGIN_NAMESPACE_C99


614 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

621 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

622 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

628 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

631 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

632 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

633 
__THROW
 ;

639 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

640 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

641 
__gnuc_va_li°
 
__¨g
)

647 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

648 
__gnuc_va_li°
 
__¨g
)

652 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

653 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

654 
__gnuc_va_li°
 
__¨g
)

655 
__THROW
 ;

662 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

663 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

669 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

672 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

673 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

674 
__THROW
 ;

676 
__END_NAMESPACE_C99


679 #ifde‡
__USE_ISOC99


680 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 
__END_NAMESPACE_C99


707 
__BEGIN_NAMESPACE_C99


712 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

719 
wöt_t
 
	`gëwch¨
 ();

726 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

727 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

733 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

741 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

742 
__FILE
 *
__ª°ri˘
 
__°ªam
);

748 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

749 
__FILE
 *
__ª°ri˘
 
__°ªam
);

756 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

757 
__END_NAMESPACE_C99


760 #ifde‡
__USE_GNU


768 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

777 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

785 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

794 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

795 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

804 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

805 
__FILE
 *
__ª°ri˘
 
__°ªam
);

813 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

814 
__FILE
 *
__ª°ri˘
 
__°ªam
);

818 
__BEGIN_NAMESPACE_C99


822 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

823 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

824 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

825 
__END_NAMESPACE_C99


827 #ifde‡
__USE_GNU


828 
	~<xloˇÀ.h
>

832 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

833 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

834 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

835 
__loˇÀ_t
 
__loc
Ë
__THROW
;

844 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


845 
	#__√ed_iswxxx


	)

846 
	~<w˘y≥.h
>

850 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


851 
	~<bôs/wch¨2.h
>

854 #ifde‡
__LDBL_COMPAT


855 
	~<bôs/wch¨-ldbl.h
>

858 
__END_DECLS


	@/usr/include/asm-i386/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-x86_64/errno.h

1 #i‚de‡
_X8664_ERRNO_H


2 
	#_X8664_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 
__LDBL_REDIR_DECL
 (
fwsˇnf
);

33 
__LDBL_REDIR_DECL
 (
wsˇnf
);

34 
__LDBL_REDIR_DECL
 (
swsˇnf
);

35 
	g__END_NAMESPACE_C99


38 #ifde‡
__USE_ISOC99


39 
__BEGIN_NAMESPACE_C99


40 
__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

41 
__LDBL_REDIR_DECL
 (
vfwsˇnf
);

42 
__LDBL_REDIR_DECL
 (
vwsˇnf
);

43 
__LDBL_REDIR_DECL
 (
vswsˇnf
);

44 
	g__END_NAMESPACE_C99


47 #ifde‡
__USE_GNU


48 
__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

51 
__LDBL_REDIR1_DECL
 (
__wc°ﬁd_öã∫Æ
, 
__wc°od_öã∫Æ
);

53 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


54 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

55 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

56 #i‡
__USE_FORTIFY_LEVEL
 > 1

57 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

58 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

59 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

60 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

33 
__Æways_ölöe
 
wch¨_t
 *

34 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

35 
size_t
 
__n
))

37 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

38  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

39  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

40 
	}
}

43 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

44 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

45 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

46 
__c⁄°
 
wch¨_t
 *
__s2
,

47 
size_t
 
__n
), 
wmemmove
);

49 
__Æways_ölöe
 
wch¨_t
 *

50 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

51 
size_t
 
__n
))

53 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

54  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

55  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

56 
	}
}

59 #ifde‡
__USE_GNU


60 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

61 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

62 
size_t
 
__ns1
Ë
__THROW
;

63 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

64 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

65 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

66 
size_t
 
__n
), 
wmemp˝y
);

68 
__Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

70 
size_t
 
__n
))

72 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

74  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

75 
	}
}

79 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

80 
size_t
 
__ns
Ë
__THROW
;

81 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

82 
size_t
 
__n
), 
wmem£t
);

84 
__Æways_ölöe
 
wch¨_t
 *

85 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

87 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

88  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

89  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

90 
	}
}

93 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

94 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

95 
size_t
 
__n
Ë
__THROW
;

96 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

97 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

98 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

100 
__Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

103 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

104  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

105  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

106 
	}
}

109 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

110 
size_t
 
__de°Àn
Ë
__THROW
;

111 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

112 
__c⁄°
 
wch¨_t
 *
__§c
),

113 
w˝˝y
);

115 
__Æways_ölöe
 
wch¨_t
 *

116 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

119  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

120  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

121 
	}
}

124 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

125 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

128 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

129 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

130 
size_t
 
__n
), 
wc¢˝y
);

132 
__Æways_ölöe
 
wch¨_t
 *

133 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

137  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

138 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

139  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

144 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

145 
size_t
 
__de°Àn
Ë
__THROW
;

146 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

147 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
), 
w˝n˝y
);

151 
__Æways_ölöe
 
wch¨_t
 *

152 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

155 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

156  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

157 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

158  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

159 
	}
}

162 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

163 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

166 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

167 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

169 
__Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

180 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢ˇt
);

186 
__Æways_ölöe
 
wch¨_t
 *

187 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

189 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

190  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

191 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

192  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

193 
	}
}

196 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

197 
__Êag
, 
size_t
 
__s_Àn
,

198 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

199 
__THROW
 ;

202 
	#sw¥ötf
(
s
, 
n
, ...) \

203 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

204 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
__VA_ARGS__
) \

205 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

208 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

209 
__Êag
, 
size_t
 
__s_Àn
,

210 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

211 
__gnuc_va_li°
 
__¨g
)

212 
__THROW
 ;

214 
	#vsw¥ötf
(
s
, 
n
, 
fmt
, 
≠
) \

215 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

216 ? 
	`__vsw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
fmt
, 
≠
) \

217 : 
	`vsw¥ötf
 (
s
, 
n
, 
fmt
, 
≠
))

	)

220 #i‡
__USE_FORTIFY_LEVEL
 > 1

222 
	`__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

223 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

224 
	`__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

226 
	`__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

227 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

228 
__gnuc_va_li°
 
__≠
);

229 
	`__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

230 
__gnuc_va_li°
 
__≠
);

232 
	#w¥ötf
(...) \

233 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

234 
	#fw¥ötf
(
°ªam
, ...) \

235 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

236 
	#vw¥ötf
(
f‹m©
, 
≠
) \

237 
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

238 
	#vfw¥ötf
(
°ªam
, 
f‹m©
, 
≠
) \

239 
	`__vfw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

243 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

246 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

247 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

249 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

250 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

252 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

253 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

254  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 #ifde‡
__USE_GNU


259 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

260 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

261 
__wur
;

262 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

263 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

264 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

265 
__wur
;

267 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

268 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

270 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

271 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

272  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

273  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

274 
	}
}

278 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

279 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

280 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

281 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

282 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

284 
__Æways_ölöe
 
__wur
 
size_t


285 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

290 
	#__WCHAR_MB_LEN_MAX
 16

	)

291 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


294 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

295  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

296  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

297 
	}
}

300 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

301 
__c⁄°
 **
__ª°ri˘
 
__§c
,

302 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

303 
size_t
 
__d°Àn
Ë
__THROW
;

304 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

305 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

306 
__c⁄°
 **
__ª°ri˘
 
__§c
,

307 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

308 
mb§towcs
);

310 
__Æways_ölöe
 
size_t


311 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

312 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

314 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

315 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

316 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

317  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

318 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

319  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

320 
	}
}

323 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

324 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

325 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

326 
size_t
 
__d°Àn
Ë
__THROW
;

327 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

328 (*
__ª°ri˘
 
__d°
,

329 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

330 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

331 
wc§tombs
);

333 
__Æways_ölöe
 
size_t


334 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

335 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

337 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

338 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

339  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

340  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

341 
	}
}

344 #ifde‡
__USE_GNU


345 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

346 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

347 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

348 
size_t
 
__d°Àn
Ë
__THROW
;

349 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

350 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

351 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

352 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

353 
mb¢πowcs
);

355 
__Æways_ölöe
 
size_t


356 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

357 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

359 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

360 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

361 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

362  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

363 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

364  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

365 
	}
}

368 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

369 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

370 
size_t
 
__nwc
, size_à
__Àn
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

372 
__THROW
;

373 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

374 (*
__ª°ri˘
 
__d°
,

375 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

376 
size_t
 
__nwc
, size_à
__Àn
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

379 
__Æways_ölöe
 
size_t


380 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

381 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

383 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

384 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

385  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

386  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

387 
	}
}

	@/usr/include/pthread.h

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	#__√ed_sig£t_t


	)

27 
	~<sig«l.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #ifde‡
__USE_UNIX98


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_GNU


68 
	mPTHREAD_MUTEX_STALLED_NP
,

69 
	mPTHREAD_MUTEX_ROBUST_NP


74 #ifde‡
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__WORDSIZE
 == 64

87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


122 #i‡
__WORDSIZE
 == 64

123 
	#PTHREAD_RWLOCK_INITIALIZER
 \

124 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

129 #ifde‡
__USE_GNU


130 #i‡
__WORDSIZE
 == 64

131 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

133 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 0 } }

	)

145 
	mPTHREAD_INHERIT_SCHED
,

146 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

147 
	mPTHREAD_EXPLICIT_SCHED


148 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

155 
	mPTHREAD_SCOPE_SYSTEM
,

156 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

157 
	mPTHREAD_SCOPE_PROCESS


158 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

165 
	mPTHREAD_PROCESS_PRIVATE
,

166 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

167 
	mPTHREAD_PROCESS_SHARED


168 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

174 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

178 
	s_±hªad_˛ónup_buf„r


180 (*
	m__routöe
) (*);

181 *
	m__¨g
;

182 
	m__ˇn˚…y≥
;

183 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

189 
	mPTHREAD_CANCEL_ENABLE
,

190 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

191 
	mPTHREAD_CANCEL_DISABLE


192 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

196 
	mPTHREAD_CANCEL_DEFERRED
,

197 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

198 
	mPTHREAD_CANCEL_ASYNCHRONOUS


199 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

201 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

205 
	#PTHREAD_ONCE_INIT
 0

	)

208 #ifde‡
__USE_XOPEN2K


212 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

216 
__BEGIN_DECLS


221 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

222 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

223 *(*
__°¨t_routöe
) (*),

224 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

230 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

238 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

240 #ifde‡
__USE_GNU


243 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

251 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

252 
__c⁄°
 
time•ec
 *
__ab°ime
);

259 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

263 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

266 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

274 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

282 *
__dëach°©e
)

283 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

287 
__dëach°©e
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

293 
size_t
 *
__gu¨dsize
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

297 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

298 
size_t
 
__gu¨dsize
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


304 
__©å
,

305 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

310 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


311 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

314 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


315 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

316 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

319 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1));

323 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


324 
__©å
, *
__ª°ri˘
 
__öhîô
)

325 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

328 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

329 
__öhîô
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

335 *
__ª°ri˘
 
__sc›e
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1));

343 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


344 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

351 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

352 *
__°ackaddr
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

356 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


357 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

358 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

364 
size_t
 
__°acksize
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1));

367 #ifde‡
__USE_XOPEN2K


369 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

370 **
__ª°ri˘
 
__°ackaddr
,

371 
size_t
 *
__ª°ri˘
 
__°acksize
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

377 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

378 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

381 #ifde‡
__USE_GNU


384 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

385 
size_t
 
__˝u£tsize
,

386 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

391 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

392 
size_t
 
__˝u£tsize
,

393 
˝u_£t_t
 *
__˝u£t
)

394 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

400 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

401 
__THROW
 
	`__n⁄nuŒ
 ((2));

409 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

410 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

411 
__THROW
 
	`__n⁄nuŒ
 ((3));

414 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

415 *
__ª°ri˘
 
__pﬁicy
,

416 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

420 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

421 
__THROW
;

424 #ifde‡
__USE_UNIX98


426 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

429 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

432 #ifde‡
__USE_GNU


437 
	$±hªad_yõld
 (Ë
__THROW
;

442 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

443 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

444 
__THROW
 
	`__n⁄nuŒ
 ((3));

447 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

448 
˝u_£t_t
 *
__˝u£t
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3));

462 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

463 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

474 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

478 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

481 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

486 
	`±hªad_ã°ˇn˚l
 ();

495 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

496 
__mask_was_ßved
;

497 } 
__ˇn˚l_jmp_buf
[1];

498 *
__∑d
[4];

499 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

502 #i‚de‡
__˛ónup_f˘_©åibuã


503 
	#__˛ónup_f˘_©åibuã


	)

508 
	s__±hªad_˛ónup_‰ame


510 (*
__ˇn˚l_routöe
) (*);

511 *
__ˇn˚l_¨g
;

512 
__do_ô
;

513 
__ˇn˚l_ty≥
;

516 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


517 #ifde‡
__˝lu•lus


519 ˛as†
	c__±hªad_˛ónup_˛ass


521 (*
__ˇn˚l_routöe
) (*);

522 *
__ˇn˚l_¨g
;

523 
__do_ô
;

524 
__ˇn˚l_ty≥
;

526 
public
:

527 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

528 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

529 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

530 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

531 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

532 &
__ˇn˚l_ty≥
); 
	}
}

533 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

543 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

545 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

549 
	#±hªad_˛ónup_p›
(
execuã
) \

550 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

551 } 0)

	)

553 #ifde‡
__USE_GNU


557 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

559 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

560 
__˛‰ame
.
	`__de„r
 ()

	)

565 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

566 
__˛‰ame
.
	`__ª°‹e
 (); \

567 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

568 } 0)

	)

575 
__ölöe
 

576 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

578 i‡(
__‰ame
->
__do_ô
)

579 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

580 
	}
}

589 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

592 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

593 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

594 .
__do_ô
 = 1 };

	)

598 
	#±hªad_˛ónup_p›
(
execuã
) \

599 
__˛‰ame
.
__do_ô
 = (
execuã
); \

600 } 0)

	)

602 #ifde‡
__USE_GNU


606 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

608 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

609 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

610 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

611 .
__do_ô
 = 1 }; \

612 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

613 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

618 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

619 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

620 
__˛‰ame
.
__do_ô
 = (
execuã
); \

621 } 0)

	)

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

635 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

636 *
__ˇn˚l_¨g
 = (
¨g
); \

637 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

638 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

639 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

641 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

642 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

646 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

647 dÿ{

	)

648 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

649 
__˛ónup_f˘_©åibuã
;

653 
	#±hªad_˛ónup_p›
(
execuã
) \

655 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

656 i‡(
execuã
) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 } 0)

	)

659 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

660 
__˛ónup_f˘_©åibuã
;

662 #ifde‡
__USE_GNU


666 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

668 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

669 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

670 *
__ˇn˚l_¨g
 = (
¨g
); \

671 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

672 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

673 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

675 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

676 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

680 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

681 dÿ{

	)

682 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

683 
__˛ónup_f˘_©åibuã
;

688 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

690 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

691 i‡(
execuã
) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	}
} 0)

	)

694 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

695 
__˛ónup_f˘_©åibuã
;

699 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

701 #i‚de‡
SHARED


702 
	`__©åibuã__
 ((
__wók__
))

708 
__jmp_buf_èg
;

709 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

715 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

716 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

717 
__THROW
 
	`__n⁄nuŒ
 ((1));

720 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

721 
__THROW
 
	`__n⁄nuŒ
 ((1));

724 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

731 #ifde‡
__USE_XOPEN2K


733 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

734 
__c⁄°
 
time•ec
 *
__ª°ri˘


735 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

739 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

740 
__THROW
 
	`__n⁄nuŒ
 ((1));

743 #ifde‡
__USE_UNIX98


745 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

746 
__ª°ri˘
 
__muãx
,

747 *
__ª°ri˘
 
__¥io˚ûög
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

752 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

753 
__¥io˚ûög
,

754 *
__ª°ri˘
 
__ﬁd_˚ûög
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

759 #ifde‡
__USE_GNU


761 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

770 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

771 
__THROW
 
	`__n⁄nuŒ
 ((1));

774 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

779 
__ª°ri˘
 
__©å
,

780 *
__ª°ri˘
 
__psh¨ed
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

785 
__psh¨ed
)

786 
__THROW
 
	`__n⁄nuŒ
 ((1));

788 #ifde‡
__USE_UNIX98


790 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


791 
__©å
, *
__ª°ri˘
 
__köd
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

797 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

802 
__ª°ri˘
 
__©å
,

803 *
__ª°ri˘
 
__¥Ÿocﬁ
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

808 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

809 
__¥Ÿocﬁ
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥io˚ûög
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

819 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

820 
__¥io˚ûög
)

821 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #ifde‡
__USE_GNU


826 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

827 *
__robu°√ss
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__robu°√ss
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

837 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


842 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

843 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


844 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

858 #ifde‡
__USE_XOPEN2K


860 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

861 
__c⁄°
 
time•ec
 *
__ª°ri˘


862 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

866 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

867 
__THROW
 
	`__n⁄nuŒ
 ((1));

870 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

871 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 #ifde‡
__USE_XOPEN2K


875 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

876 
__c⁄°
 
time•ec
 *
__ª°ri˘


877 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

881 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

896 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

897 
__ª°ri˘
 
__©å
,

898 *
__ª°ri˘
 
__psh¨ed
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

902 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

903 
__psh¨ed
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

908 
__ª°ri˘
 
__©å
,

909 *
__ª°ri˘
 
__¥ef
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

913 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

914 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

923 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


924 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

928 
__THROW
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

943 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

944 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

945 
	`__n⁄nuŒ
 ((1, 2));

954 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

955 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

956 
__c⁄°
 
time•ec
 *
__ª°ri˘


957 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

962 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

963 
__THROW
 
	`__n⁄nuŒ
 ((1));

966 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

971 
__ª°ri˘
 
__©å
,

972 *
__ª°ri˘
 
__psh¨ed
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

977 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 #ifde‡
__USE_XOPEN2K


981 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

982 
__ª°ri˘
 
__©å
,

983 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

984 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

987 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

988 
__˛ockid_t
 
__˛ock_id
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

993 #ifde‡
__USE_XOPEN2K


998 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1));

1002 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1));

1006 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1022 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1023 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1024 
__©å
, 
__cou¡
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1037 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1038 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1));

1045 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1046 
__ª°ri˘
 
__©å
,

1047 *
__ª°ri˘
 
__psh¨ed
)

1048 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1051 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1052 
__psh¨ed
)

1053 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1066 (*
__de°r_fun˘i⁄
) (*))

1067 
__THROW
 
	`__n⁄nuŒ
 ((1));

1070 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1073 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1076 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1077 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1080 #ifde‡
__USE_XOPEN2K


1082 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1083 
__˛ockid_t
 *
__˛ock_id
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((2));

1099 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1100 (*
__∑ª¡
) (),

1101 (*
__chûd
Ë()Ë
__THROW
;

1104 #ifde‡
__USE_EXTERN_INLINES


1106 
__ölöe
 

1107 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1109  
__thªad1
 =
__thªad2
;

1110 
	}
}

1113 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

51 #i‚de‡
WEOF


52 
	#WEOF
 (0xffffffffu)

	)

55 #unde‡
__√ed_iswxxx


60 #i‚de‡
__iswxxx_deföed


61 
	#__iswxxx_deföed
 1

	)

63 
__BEGIN_NAMESPACE_C99


66 
	tw˘y≥_t
;

67 
__END_NAMESPACE_C99


69 #i‚de‡
_ISwbô


74 
	~<ídün.h
>

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

78 
	#_ISwbô
(
bô
) \

79 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

80 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

81 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

82 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

87 
__ISwuµî
 = 0,

88 
__ISwlowî
 = 1,

89 
__ISwÆpha
 = 2,

90 
__ISwdigô
 = 3,

91 
__ISwxdigô
 = 4,

92 
__ISw•a˚
 = 5,

93 
__ISw¥öt
 = 6,

94 
__ISwgøph
 = 7,

95 
__ISwbœnk
 = 8,

96 
__ISw˙ål
 = 9,

97 
__ISwpun˘
 = 10,

98 
__ISwÆnum
 = 11,

100 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

101 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

102 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

103 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

104 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

105 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

106 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

107 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

108 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

109 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

110 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

111 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

116 
__BEGIN_DECLS


118 
__BEGIN_NAMESPACE_C99


125 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

131 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

138 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

150 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

160 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

165 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

170 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

175 #ifde‡
__USE_ISOC99


176 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

185 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

189 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

190 
__END_NAMESPACE_C99


197 
__BEGIN_NAMESPACE_C99


200 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

201 
__END_NAMESPACE_C99


202 #ifde‡
__USE_GNU


203 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

206 
__BEGIN_NAMESPACE_C99


208 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

211 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
__END_NAMESPACE_C99


214 
__END_DECLS


221 #ifde‡
_WCTYPE_H


227 
__BEGIN_DECLS


229 
__BEGIN_NAMESPACE_C99


232 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

235 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

236 
__END_NAMESPACE_C99


238 #ifde‡
__USE_GNU


240 
	~<xloˇÀ.h
>

244 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

250 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

257 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

269 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

274 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

279 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

289 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

294 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

298 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

299 
__THROW
;

303 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

304 
__THROW
;

312 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

319 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

320 
__THROW
;

323 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

324 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

36 #ifde‡
__USE_MISC


38 
	#CSIGNAL
 0x000000f‡

	)

39 
	#CLONE_VM
 0x00000100

	)

40 
	#CLONE_FS
 0x00000200

	)

41 
	#CLONE_FILES
 0x00000400

	)

42 
	#CLONE_SIGHAND
 0x00000800

	)

43 
	#CLONE_PTRACE
 0x00002000

	)

44 
	#CLONE_VFORK
 0x00004000

	)

46 
	#CLONE_PARENT
 0x00008000

	)

48 
	#CLONE_THREAD
 0x00010000

	)

49 
	#CLONE_NEWNS
 0x00020000

	)

50 
	#CLONE_SYSVSEM
 0x00040000

	)

51 
	#CLONE_SETTLS
 0x00080000

	)

52 
	#CLONE_PARENT_SETTID
 0x00100000

	)

54 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

56 
	#CLONE_DETACHED
 0x00400000

	)

57 
	#CLONE_UNTRACED
 0x00800000

	)

59 
	#CLONE_CHILD_SETTID
 0x01000000

	)

61 
	#CLONE_STOPPED
 0x02000000

	)

65 
	ssched_∑øm


67 
	m__sched_¥i‹ôy
;

70 
	g__BEGIN_DECLS


72 #ifde‡
__USE_MISC


74 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

75 
__Êags
, *
__¨g
, ...Ë
__THROW
;

78 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

81 
__END_DECLS


85 #i‡!
deföed
 
__deföed_sched∑øm
 \

86 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

87 
	#__deföed_sched∑øm
 1

	)

89 
	s__sched_∑øm


91 
__sched_¥i‹ôy
;

93 #unde‡
__√ed_sched∑øm


97 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


98 
	#__˝u_£t_t_deföed


	)

100 
	#__CPU_SETSIZE
 1024

	)

101 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

104 
	t__˝u_mask
;

107 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

108 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

113 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

114 } 
	t˝u_£t_t
;

117 
	#__CPU_ZERO
(
˝u£ç
) \

119 
__i
; \

120 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

121 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

122 
__¨r
->
__bôs
[
__i
] = 0; \

123 
	}
} 0)

	)

124 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

125 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

126 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

127 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

128 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

129 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@
1
.
1
/usr/include
140
3260
bin/cat/cat.c
bin/hello/hello.c
bin/test/test.c
crt/crt1.c
include/error.h
include/stdarg.h
include/stdio.h
include/stdlib.h
include/string.h
include/sys/defs.h
include/sys/gdt.h
include/sys/idt.h
include/sys/ioport.h
include/sys/irq.h
include/sys/kb.h
include/sys/kstdio.h
include/sys/kstring.h
include/sys/mmu/assemblyutil.h
include/sys/mmu/kmalloc.h
include/sys/mmu/paging.h
include/sys/mmu/phy_alloc.h
include/sys/mmu/pt.h
include/sys/mmu/region.h
include/sys/mmu/virtual_mm.h
include/sys/process/elf.h
include/sys/process/process.h
include/sys/process/process_manager.h
include/sys/sbunix.h
include/sys/syscall.h
include/sys/tarfs.h
include/sys/timer.h
include/sys/vgaconsole.h
include/syscall.h
libc/malloc.c
libc/printf.c
libc/scanf.c
libc/stdlib.c
libc/string.c
newfs/newfs.c
sys/fs/tarfs.c
sys/gdt.c
sys/idt.c
sys/ioport.c
sys/irq.c
sys/kb.c
sys/kprintf.c
sys/kstring.c
sys/main.c
sys/mmu/assemblyutil.c
sys/mmu/kmalloc.c
sys/mmu/phy_alloc.c
sys/mmu/pt.c
sys/mmu/virtual_mm.c
sys/process/elf.c
sys/process/process.c
sys/process/process_manager.c
sys/timer.c
sys/vgaconsole.c
/usr/include/errno.h
/usr/include/error.h
/usr/include/fcntl.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/stat.h
/usr/include/sys/syscall.h
/usr/include/sys/types.h
/usr/include/syscall.h
/usr/include/alloca.h
/usr/include/asm/unistd.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/mman.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/syscall.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm-i386/unistd.h
/usr/include/asm-x86_64/unistd.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-i386/errno.h
/usr/include/asm-x86_64/errno.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/sys/ucontext.h
